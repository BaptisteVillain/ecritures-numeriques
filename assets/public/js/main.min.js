!function e(t,r,n){function i(s,a){if(!r[s]){if(!t[s]){var c="function"==typeof require&&require;if(!a&&c)return c(s,!0);if(o)return o(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var u=r[s]={exports:{}};t[s][0].call(u.exports,function(e){var r=t[s][1][e];return i(r||e)},u,u.exports,e,t,r,n)}return r[s].exports}for(var o="function"==typeof require&&require,s=0;s<n.length;s++)i(n[s]);return i}({1:[function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.header=t,this.trigger=t.querySelector(".site-header__nav-trigger"),this.wrapper=t.querySelector(".site-header__wrapper"),this.dropDown=t.querySelector(".drop__trigger"),this.trigger.addEventListener("click",function(e){r.toggleVisibility()}),this.dropDown.addEventListener("click",function(e){e.preventDefault()})}return n(e,[{key:"toggleVisibility",value:function(){this.wrapper.classList.toggle("site-header__wrapper--hide")}}]),e}();t.exports=i},{}],2:[function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(r,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=n(e("axios")),s=n(e("qs")),a=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.footer=document.querySelector("footer.site-footer"),this.wait=!1,this.page=1,this.date=vars.postDate,this.id=vars.postID,this.posts=this.container.querySelectorAll(".publication-wrapper"),this.select={},window.addEventListener("onload",function(){window.scrollTo(0,0)}),window.addEventListener("popstate",function(e){location.reload()}),window.addEventListener("scroll",function(){document.body.scrollHeight-document.documentElement.scrollTop-(window.innerHeight+r.footer.offsetHeight)<=2*window.innerHeight&&!r.wait&&(r.addPost(),r.wait=!0),r.getActive()})}return i(e,[{key:"addPost",value:function(){var e=this,t={action:"publication_load_more",post_date:this.date,post_id:this.id,page:this.page};o.default.post(ajaxurl,s.default.stringify(t)).then(function(t){t.data.data.posts.forEach(function(t){e.container.insertAdjacentHTML("beforeend",t.content)}),e.posts=e.container.querySelectorAll(".single__wrapper"),e.page+=1,e.wait=!1}).catch(function(e){console.log(e)})}},{key:"getActive",value:function(){var e={};this.posts.forEach(function(t){var r=t.getBoundingClientRect().top;r<window.innerHeight/2&&r>0&&(e={title:t.dataset.title,path:t.dataset.path})}),this.select.title!==e.title&&void 0!==e.title&&(this.select=e,this.updatePage())}},{key:"updatePage",value:function(){document.title=this.select.title+" - Ecritures Numeriques",window.history.pushState({},"",this.select.path),window.history.scrollRestoration="manual"}}]),e}();r.default=a},{axios:8,qs:36}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.header_list=t.querySelector(".header__list"),this.header_items=t.querySelectorAll(".header__item button"),this.header_prev=t.querySelector(".header__nav--prev"),this.header_next=t.querySelector(".header__nav--next"),this.header_index=void 0,this.header_offset=5,this.header_offsetWidth=this.header_list.parentNode.offsetWidth/5,this.header_items.forEach(function(e,t){e.classList.contains("item--active")&&(r.header_index=t)}),this.header_next.addEventListener("click",function(){r.header_index<r.header_items.length-1&&r.updateHeader(r.header_index+1)}),this.header_prev.addEventListener("click",function(){r.header_index>=1&&r.updateHeader(r.header_index-1)})}return n(e,[{key:"updateHeader",value:function(e){if(this.header_items[this.header_index].classList.remove("item--active"),this.header_index=e,this.header_items[this.header_index].classList.add("item--active"),this.header_index<=0?this.header_prev.classList.add("header__nav--disable"):this.header_index>=this.header_items.length-1?this.header_next.classList.add("header__nav--disable"):(this.header_next.classList.remove("header__nav--disable"),this.header_prev.classList.remove("header__nav--disable")),console.log(this.header_index-this.header_offset),this.header_index-this.header_offset>=0){var t=(this.header_index-this.header_offset+1)*this.header_offsetWidth;this.header_list.style.transform="translateX(-"+t+"px)"}else this.header_list.style.transform="translateX(0px)"}}]),e}();r.default=i},{}],4:[function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),o=n(e("axios")),s=n(e("qs")),a=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.results_buttons=t.querySelectorAll(".header__switch"),this.results_count=t.querySelectorAll(".header__button span"),this.results_tabs=t.querySelectorAll(".list__container"),this.results_container=t.querySelectorAll(".list"),this.results_selected=t.querySelector(".results__selected-filters"),this.results_selected_container=t.querySelector(".selected__container"),this.results_selected_delete=t.querySelector(".selected__delete"),this.results_selected_model=t.querySelector(".item--model"),this.results_selected_items=[],this.filters_visibility=t.querySelector(".header__button--filter"),this.filters_container=t.querySelector(".results__filters"),this.filters=t.querySelectorAll(".filter"),this.containerToFix=t.querySelectorAll(".taxonomy-fix"),this.selected_tab=0,this.selected_filters=[],this.available_filters=[],this.results_buttons.forEach(function(e){e.addEventListener("click",function(e){r.setTabs(e.currentTarget.dataset.index)})}),this.filters_visibility.addEventListener("click",function(){r.filters_container.classList.toggle("results__filters--active")}),this.containerToFix.forEach(function(e){var t=e.querySelector("li").getBoundingClientRect().width;e.style.width=2*t+"px"}),this.filters.forEach(function(e){e.addEventListener("click",function(e){r.toggleFilter(e.currentTarget),r.search()})}),this.results_selected_delete.addEventListener("click",function(){r.clearFilter()})}return i(e,[{key:"setTabs",value:function(e){this.selected_tab!==e&&(this.results_tabs[this.selected_tab].classList.remove("list__container--active"),this.results_buttons[this.selected_tab].classList.remove("header__button--active"),this.results_tabs[e].classList.add("list__container--active"),this.results_buttons[e].classList.add("header__button--active"),this.selected_tab=e)}},{key:"toggleFilter",value:function(e){var t={slug:e.dataset.slug,taxonomy:e.dataset.taxonomy,name:e.dataset.name};e.classList.contains("filter--active")?this.removeFilter(t):(this.selected_filters.push(t),this.addFilter(t)),e.classList.toggle("filter--active")}},{key:"addFilter",value:function(e){var t=this,r=this.results_selected_model.cloneNode(!0);r.querySelector(".item__label").textContent=e.name,r.dataset.slug=e.slug,r.classList.remove("item--model"),this.results_selected_container.appendChild(r),this.results_selected_items.push(r),r.querySelector(".item__delete").addEventListener("click",function(e){var r={slug:e.currentTarget.parentNode.dataset.slug,taxonomy:e.currentTarget.parentNode.dataset.taxonomy,name:e.currentTarget.parentNode.dataset.name};t.removeFilter(r),t.search()}),this.setSelectedVisibility()}},{key:"removeFilter",value:function(e){document.querySelector(".selected__item[data-slug="+e.slug+"]").remove();document.querySelector(".taxonomy__filters .filter[data-slug="+e.slug+"]").classList.remove("filter--active");var t=this.selected_filters.findIndex(function(t){return t.slug===e.slug&&t.taxonomy===e.taxonomy});this.selected_filters.splice(t,1),this.setSelectedVisibility(),this.updateFiltersVisibility()}},{key:"clearFilter",value:function(){this.filters.forEach(function(e){e.classList.remove("filter--active")}),this.selected_filters=[],this.results_selected_items.forEach(function(e){e.remove()}),this.setSelectedVisibility(),this.search()}},{key:"setSelectedVisibility",value:function(){this.selected_filters.length>0?this.results_selected.classList.add("results__selected-filters--active"):this.results_selected.classList.remove("results__selected-filters--active")}},{key:"updateFiltersVisibility",value:function(){var e=this;this.filters.forEach(function(t){-1===e.available_filters.indexOf(t.dataset.slug)?(t.classList.add("filter--inactive"),t.classList.remove("filter--active")):t.classList.remove("filter--inactive")})}},{key:"search",value:function(){var e=this,t={action:"search_filters",query:searchquery,filters:this.selected_filters};o.default.post(ajaxurl,s.default.stringify(t)).then(function(t){e.results_container.forEach(function(r,n){r.innerHTML="",e.results_count[n].innerHTML=t.data.data.results[n].length,t.data.data.results[n].forEach(function(e){r.insertAdjacentHTML("beforeend",e)})}),e.available_filters=t.data.data.available_filters,e.updateFiltersVisibility()})}}]),e}();t.exports=a},{axios:8,qs:36}],5:[function(e,t,r){"use strict";t.exports=function e(t){var r=this,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];!function(t,r){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this),this.container=t,this.buttons=t.querySelectorAll(".item__button"),this.wrappers=t.querySelectorAll(".item__wrapper"),this.last_index=null,this.desktop=n,this.buttons.forEach(function(e){e.addEventListener("click",function(t){t.preventDefault();var i=Array.prototype.indexOf.call(r.buttons,e);window.innerWidth<700?(e.classList.add("mobile-active"),r.wrappers[i].style.height=60*r.wrappers[i].childElementCount+"px",r.container.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),r.wrappers.forEach(function(e,t){t===i&&i!==r.last_index||(e.style.removeProperty("height"),r.buttons[t].classList.remove("mobile-active"))})):n&&(e.classList.add("desktop-active"),r.wrappers[i].classList.add("desktop-active"),r.wrappers.forEach(function(e,t){r.wrappers[t].classList.remove("mobile-active"),r.buttons[t].classList.remove("mobile-active"),e.style.removeProperty("height"),t!==i&&(r.wrappers[t].classList.remove("desktop-active"),r.buttons[t].classList.remove("desktop-active"))})),r.last_index=r.last_index===i?null:i})})}},{}],6:[function(e,t,r){"use strict";t.exports=function e(t){var r=this;!function(t,r){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this),this.container=t,this.tabs=t.querySelectorAll("section.related__section"),this.buttons=t.querySelectorAll("button.header__button"),this.wrapper=t.querySelector(".related__container"),this.return=t.querySelector(".related__return"),this.tabsWrapper=t.querySelector(".related__wrapper"),this.last_index=0,this.buttons.forEach(function(e){e.addEventListener("click",function(e){var t=e.currentTarget.dataset.index;t!==r.last_index&&(r.buttons[r.last_index].classList.remove("active"),r.tabs[r.last_index].classList.remove("active"),r.buttons[t].classList.add("active"),r.tabs[t].classList.add("active"),r.last_index=t),window.innerWidth<=700&&(r.wrapper.classList.add("container--slide"),r.tabsWrapper.classList.remove("wrapper--hide"))})}),this.return.addEventListener("click",function(){window.innerWidth<=700&&(r.wrapper.classList.remove("container--slide"),r.tabsWrapper.classList.add("wrapper--hide"))})}},{}],7:[function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var i=n(e("./Classes/Header")),o=n(e("./Classes/Rubrics")),s=n(e("./Classes/TaxonomyTabs")),a=n(e("./Classes/LoadMore")),c=n(e("./Classes/Results")),l=n(e("./Classes/Publications"));new i.default(document.querySelector(".site-header"));if(document.querySelector(".home-section.rubrics"))new o.default(document.querySelector(".home-section.rubrics"),!0);if(document.querySelector(".taxonomy__related"))new s.default(document.querySelector(".taxonomy__related"));if(document.querySelector(".page-rubrics"))new o.default(document.querySelector(".page-rubrics"),!1);if(document.querySelector(".publication__container"))new a.default(document.querySelector(".publication__container"));if(document.querySelector(".results"))new c.default(document.querySelector(".results"));if(document.querySelector(".publications")){var u=new l.default(document.querySelector(".publications"));console.log(u)}},{"./Classes/Header":1,"./Classes/LoadMore":2,"./Classes/Publications":3,"./Classes/Results":4,"./Classes/Rubrics":5,"./Classes/TaxonomyTabs":6}],8:[function(e,t,r){t.exports=e("./lib/axios")},{"./lib/axios":10}],9:[function(e,t,r){(function(r){"use strict";var n=e("./../utils"),i=e("./../core/settle"),o=e("./../helpers/buildURL"),s=e("./../helpers/parseHeaders"),a=e("./../helpers/isURLSameOrigin"),c=e("../core/createError"),l="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||e("./../helpers/btoa");t.exports=function(t){return new Promise(function(u,f){var d=t.data,p=t.headers;n.isFormData(d)&&delete p["Content-Type"];var h=new XMLHttpRequest,y="onreadystatechange",m=!1;if("test"===r.env.NODE_ENV||"undefined"==typeof window||!window.XDomainRequest||"withCredentials"in h||a(t.url)||(h=new window.XDomainRequest,y="onload",m=!0,h.onprogress=function(){},h.ontimeout=function(){}),t.auth){var v=t.auth.username||"",g=t.auth.password||"";p.Authorization="Basic "+l(v+":"+g)}if(h.open(t.method.toUpperCase(),o(t.url,t.params,t.paramsSerializer),!0),h.timeout=t.timeout,h[y]=function(){if(h&&(4===h.readyState||m)&&(0!==h.status||h.responseURL&&0===h.responseURL.indexOf("file:"))){var e="getAllResponseHeaders"in h?s(h.getAllResponseHeaders()):null,r={data:t.responseType&&"text"!==t.responseType?h.response:h.responseText,status:1223===h.status?204:h.status,statusText:1223===h.status?"No Content":h.statusText,headers:e,config:t,request:h};i(u,f,r),h=null}},h.onerror=function(){f(c("Network Error",t,null,h)),h=null},h.ontimeout=function(){f(c("timeout of "+t.timeout+"ms exceeded",t,"ECONNABORTED",h)),h=null},n.isStandardBrowserEnv()){var b=e("./../helpers/cookies"),_=(t.withCredentials||a(t.url))&&t.xsrfCookieName?b.read(t.xsrfCookieName):void 0;_&&(p[t.xsrfHeaderName]=_)}if("setRequestHeader"in h&&n.forEach(p,function(e,t){void 0===d&&"content-type"===t.toLowerCase()?delete p[t]:h.setRequestHeader(t,e)}),t.withCredentials&&(h.withCredentials=!0),t.responseType)try{h.responseType=t.responseType}catch(e){if("json"!==t.responseType)throw e}"function"==typeof t.onDownloadProgress&&h.addEventListener("progress",t.onDownloadProgress),"function"==typeof t.onUploadProgress&&h.upload&&h.upload.addEventListener("progress",t.onUploadProgress),t.cancelToken&&t.cancelToken.promise.then(function(e){h&&(h.abort(),f(e),h=null)}),void 0===d&&(d=null),h.send(d)})}}).call(this,e("_process"))},{"../core/createError":16,"./../core/settle":19,"./../helpers/btoa":23,"./../helpers/buildURL":24,"./../helpers/cookies":26,"./../helpers/isURLSameOrigin":28,"./../helpers/parseHeaders":30,"./../utils":32,_process:34}],10:[function(e,t,r){"use strict";function n(e){var t=new s(e),r=o(s.prototype.request,t);return i.extend(r,s.prototype,t),i.extend(r,t),r}var i=e("./utils"),o=e("./helpers/bind"),s=e("./core/Axios"),a=e("./defaults"),c=n(a);c.Axios=s,c.create=function(e){return n(i.merge(a,e))},c.Cancel=e("./cancel/Cancel"),c.CancelToken=e("./cancel/CancelToken"),c.isCancel=e("./cancel/isCancel"),c.all=function(e){return Promise.all(e)},c.spread=e("./helpers/spread"),t.exports=c,t.exports.default=c},{"./cancel/Cancel":11,"./cancel/CancelToken":12,"./cancel/isCancel":13,"./core/Axios":14,"./defaults":21,"./helpers/bind":22,"./helpers/spread":31,"./utils":32}],11:[function(e,t,r){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,t.exports=n},{}],12:[function(e,t,r){"use strict";function n(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var r=this;e(function(e){r.reason||(r.reason=new i(e),t(r.reason))})}var i=e("./Cancel");n.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},n.source=function(){var e;return{token:new n(function(t){e=t}),cancel:e}},t.exports=n},{"./Cancel":11}],13:[function(e,t,r){"use strict";t.exports=function(e){return!(!e||!e.__CANCEL__)}},{}],14:[function(e,t,r){"use strict";function n(e){this.defaults=e,this.interceptors={request:new s,response:new s}}var i=e("./../defaults"),o=e("./../utils"),s=e("./InterceptorManager"),a=e("./dispatchRequest");n.prototype.request=function(e){"string"==typeof e&&(e=o.merge({url:arguments[0]},arguments[1])),(e=o.merge(i,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var t=[a,void 0],r=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)r=r.then(t.shift(),t.shift());return r},o.forEach(["delete","get","head","options"],function(e){n.prototype[e]=function(t,r){return this.request(o.merge(r||{},{method:e,url:t}))}}),o.forEach(["post","put","patch"],function(e){n.prototype[e]=function(t,r,n){return this.request(o.merge(n||{},{method:e,url:t,data:r}))}}),t.exports=n},{"./../defaults":21,"./../utils":32,"./InterceptorManager":15,"./dispatchRequest":17}],15:[function(e,t,r){"use strict";function n(){this.handlers=[]}var i=e("./../utils");n.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},n.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},n.prototype.forEach=function(e){i.forEach(this.handlers,function(t){null!==t&&e(t)})},t.exports=n},{"./../utils":32}],16:[function(e,t,r){"use strict";var n=e("./enhanceError");t.exports=function(e,t,r,i,o){var s=new Error(e);return n(s,t,r,i,o)}},{"./enhanceError":18}],17:[function(e,t,r){"use strict";function n(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var i=e("./../utils"),o=e("./transformData"),s=e("../cancel/isCancel"),a=e("../defaults"),c=e("./../helpers/isAbsoluteURL"),l=e("./../helpers/combineURLs");t.exports=function(e){n(e),e.baseURL&&!c(e.url)&&(e.url=l(e.baseURL,e.url)),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=i.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),i.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]});return(e.adapter||a.adapter)(e).then(function(t){return n(e),t.data=o(t.data,t.headers,e.transformResponse),t},function(t){return s(t)||(n(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},{"../cancel/isCancel":13,"../defaults":21,"./../helpers/combineURLs":25,"./../helpers/isAbsoluteURL":27,"./../utils":32,"./transformData":20}],18:[function(e,t,r){"use strict";t.exports=function(e,t,r,n,i){return e.config=t,r&&(e.code=r),e.request=n,e.response=i,e}},{}],19:[function(e,t,r){"use strict";var n=e("./createError");t.exports=function(e,t,r){var i=r.config.validateStatus;r.status&&i&&!i(r.status)?t(n("Request failed with status code "+r.status,r.config,null,r.request,r)):e(r)}},{"./createError":16}],20:[function(e,t,r){"use strict";var n=e("./../utils");t.exports=function(e,t,r){return n.forEach(r,function(r){e=r(e,t)}),e}},{"./../utils":32}],21:[function(e,t,r){(function(r){"use strict";function n(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var i=e("./utils"),o=e("./helpers/normalizeHeaderName"),s={"Content-Type":"application/x-www-form-urlencoded"},a={adapter:function(){var t;return"undefined"!=typeof XMLHttpRequest?t=e("./adapters/xhr"):void 0!==r&&(t=e("./adapters/http")),t}(),transformRequest:[function(e,t){return o(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(n(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(n(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};a.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){a.headers[e]={}}),i.forEach(["post","put","patch"],function(e){a.headers[e]=i.merge(s)}),t.exports=a}).call(this,e("_process"))},{"./adapters/http":9,"./adapters/xhr":9,"./helpers/normalizeHeaderName":29,"./utils":32,_process:34}],22:[function(e,t,r){"use strict";t.exports=function(e,t){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return e.apply(t,r)}}},{}],23:[function(e,t,r){"use strict";function n(){this.message="String contains an invalid character"}var i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";(n.prototype=new Error).code=5,n.prototype.name="InvalidCharacterError",t.exports=function(e){for(var t,r,o=String(e),s="",a=0,c=i;o.charAt(0|a)||(c="=",a%1);s+=c.charAt(63&t>>8-a%1*8)){if((r=o.charCodeAt(a+=.75))>255)throw new n;t=t<<8|r}return s}},{}],24:[function(e,t,r){"use strict";function n(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var i=e("./../utils");t.exports=function(e,t,r){if(!t)return e;var o;if(r)o=r(t);else if(i.isURLSearchParams(t))o=t.toString();else{var s=[];i.forEach(t,function(e,t){null!==e&&void 0!==e&&(i.isArray(e)?t+="[]":e=[e],i.forEach(e,function(e){i.isDate(e)?e=e.toISOString():i.isObject(e)&&(e=JSON.stringify(e)),s.push(n(t)+"="+n(e))}))}),o=s.join("&")}return o&&(e+=(-1===e.indexOf("?")?"?":"&")+o),e}},{"./../utils":32}],25:[function(e,t,r){"use strict";t.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},{}],26:[function(e,t,r){"use strict";var n=e("./../utils");t.exports=n.isStandardBrowserEnv()?{write:function(e,t,r,i,o,s){var a=[];a.push(e+"="+encodeURIComponent(t)),n.isNumber(r)&&a.push("expires="+new Date(r).toGMTString()),n.isString(i)&&a.push("path="+i),n.isString(o)&&a.push("domain="+o),!0===s&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},{"./../utils":32}],27:[function(e,t,r){"use strict";t.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},{}],28:[function(e,t,r){"use strict";var n=e("./../utils");t.exports=n.isStandardBrowserEnv()?function(){function e(e){var t=e;return r&&(i.setAttribute("href",t),t=i.href),i.setAttribute("href",t),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}var t,r=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");return t=e(window.location.href),function(r){var i=n.isString(r)?e(r):r;return i.protocol===t.protocol&&i.host===t.host}}():function(){return!0}},{"./../utils":32}],29:[function(e,t,r){"use strict";var n=e("../utils");t.exports=function(e,t){n.forEach(e,function(r,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[n])})}},{"../utils":32}],30:[function(e,t,r){"use strict";var n=e("./../utils"),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];t.exports=function(e){var t,r,o,s={};return e?(n.forEach(e.split("\n"),function(e){if(o=e.indexOf(":"),t=n.trim(e.substr(0,o)).toLowerCase(),r=n.trim(e.substr(o+1)),t){if(s[t]&&i.indexOf(t)>=0)return;s[t]="set-cookie"===t?(s[t]?s[t]:[]).concat([r]):s[t]?s[t]+", "+r:r}}),s):s}},{"./../utils":32}],31:[function(e,t,r){"use strict";t.exports=function(e){return function(t){return e.apply(null,t)}}},{}],32:[function(e,t,r){"use strict";function n(e){return"[object Array]"===u.call(e)}function i(e){return null!==e&&"object"==typeof e}function o(e){return"[object Function]"===u.call(e)}function s(e,t){if(null!==e&&void 0!==e)if("object"!=typeof e&&(e=[e]),n(e))for(var r=0,i=e.length;r<i;r++)t.call(null,e[r],r,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}function a(){function e(e,r){"object"==typeof t[r]&&"object"==typeof e?t[r]=a(t[r],e):t[r]=e}for(var t={},r=0,n=arguments.length;r<n;r++)s(arguments[r],e);return t}var c=e("./helpers/bind"),l=e("is-buffer"),u=Object.prototype.toString;t.exports={isArray:n,isArrayBuffer:function(e){return"[object ArrayBuffer]"===u.call(e)},isBuffer:l,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:i,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===u.call(e)},isFile:function(e){return"[object File]"===u.call(e)},isBlob:function(e){return"[object Blob]"===u.call(e)},isFunction:o,isStream:function(e){return i(e)&&o(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:s,merge:a,extend:function(e,t,r){return s(t,function(t,n){e[n]=r&&"function"==typeof t?c(t,r):t}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},{"./helpers/bind":22,"is-buffer":33}],33:[function(e,t,r){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}t.exports=function(e){return null!=e&&(n(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},{}],34:[function(e,t,r){function n(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(u===setTimeout)return setTimeout(e,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function s(){y&&p&&(y=!1,p.length?h=p.concat(h):m=-1,h.length&&a())}function a(){if(!y){var e=o(s);y=!0;for(var t=h.length;t;){for(p=h,h=[];++m<t;)p&&p[m].run();m=-1,t=h.length}p=null,y=!1,function(e){if(f===clearTimeout)return clearTimeout(e);if((f===i||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(e);try{f(e)}catch(t){try{return f.call(null,e)}catch(t){return f.call(this,e)}}}(e)}}function c(e,t){this.fun=e,this.array=t}function l(){}var u,f,d=t.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(e){u=n}try{f="function"==typeof clearTimeout?clearTimeout:i}catch(e){f=i}}();var p,h=[],y=!1,m=-1;d.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];h.push(new c(e,t)),1!==h.length||y||o(a)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(e){return[]},d.binding=function(e){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(e){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},{}],35:[function(e,t,r){"use strict";var n=String.prototype.replace,i=/%20/g;t.exports={default:"RFC3986",formatters:{RFC1738:function(e){return n.call(e,i,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},{}],36:[function(e,t,r){"use strict";var n=e("./stringify"),i=e("./parse"),o=e("./formats");t.exports={formats:o,parse:i,stringify:n}},{"./formats":35,"./parse":37,"./stringify":38}],37:[function(e,t,r){"use strict";var n=e("./utils"),i=Object.prototype.hasOwnProperty,o={allowDots:!1,allowPrototypes:!1,arrayLimit:20,decoder:n.decode,delimiter:"&",depth:5,parameterLimit:1e3,plainObjects:!1,strictNullHandling:!1},s=function(e,t,r){if(e){var n=r.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,o=/(\[[^[\]]*])/g,s=/(\[[^[\]]*])/.exec(n),a=s?n.slice(0,s.index):n,c=[];if(a){if(!r.plainObjects&&i.call(Object.prototype,a)&&!r.allowPrototypes)return;c.push(a)}for(var l=0;null!==(s=o.exec(n))&&l<r.depth;){if(l+=1,!r.plainObjects&&i.call(Object.prototype,s[1].slice(1,-1))&&!r.allowPrototypes)return;c.push(s[1])}return s&&c.push("["+n.slice(s.index)+"]"),function(e,t,r){for(var n=t,i=e.length-1;i>=0;--i){var o,s=e[i];if("[]"===s)o=(o=[]).concat(n);else{o=r.plainObjects?Object.create(null):{};var a="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,c=parseInt(a,10);!isNaN(c)&&s!==a&&String(c)===a&&c>=0&&r.parseArrays&&c<=r.arrayLimit?(o=[])[c]=n:o[a]=n}n=o}return n}(c,t,r)}};t.exports=function(e,t){var r=t?n.assign({},t):{};if(null!==r.decoder&&void 0!==r.decoder&&"function"!=typeof r.decoder)throw new TypeError("Decoder has to be a function.");if(r.ignoreQueryPrefix=!0===r.ignoreQueryPrefix,r.delimiter="string"==typeof r.delimiter||n.isRegExp(r.delimiter)?r.delimiter:o.delimiter,r.depth="number"==typeof r.depth?r.depth:o.depth,r.arrayLimit="number"==typeof r.arrayLimit?r.arrayLimit:o.arrayLimit,r.parseArrays=!1!==r.parseArrays,r.decoder="function"==typeof r.decoder?r.decoder:o.decoder,r.allowDots="boolean"==typeof r.allowDots?r.allowDots:o.allowDots,r.plainObjects="boolean"==typeof r.plainObjects?r.plainObjects:o.plainObjects,r.allowPrototypes="boolean"==typeof r.allowPrototypes?r.allowPrototypes:o.allowPrototypes,r.parameterLimit="number"==typeof r.parameterLimit?r.parameterLimit:o.parameterLimit,r.strictNullHandling="boolean"==typeof r.strictNullHandling?r.strictNullHandling:o.strictNullHandling,""===e||null===e||void 0===e)return r.plainObjects?Object.create(null):{};for(var a="string"==typeof e?function(e,t){for(var r={},n=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,s=t.parameterLimit===1/0?void 0:t.parameterLimit,a=n.split(t.delimiter,s),c=0;c<a.length;++c){var l,u,f=a[c],d=f.indexOf("]="),p=-1===d?f.indexOf("="):d+1;-1===p?(l=t.decoder(f,o.decoder),u=t.strictNullHandling?null:""):(l=t.decoder(f.slice(0,p),o.decoder),u=t.decoder(f.slice(p+1),o.decoder)),i.call(r,l)?r[l]=[].concat(r[l]).concat(u):r[l]=u}return r}(e,r):e,c=r.plainObjects?Object.create(null):{},l=Object.keys(a),u=0;u<l.length;++u){var f=l[u],d=s(f,a[f],r);c=n.merge(c,d,r)}return n.compact(c)}},{"./utils":39}],38:[function(e,t,r){"use strict";var n=e("./utils"),i=e("./formats"),o={brackets:function(e){return e+"[]"},indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},s=Date.prototype.toISOString,a={delimiter:"&",encode:!0,encoder:n.encode,encodeValuesOnly:!1,serializeDate:function(e){return s.call(e)},skipNulls:!1,strictNullHandling:!1},c=function e(t,r,i,o,s,c,l,u,f,d,p,h){var y=t;if("function"==typeof l)y=l(r,y);else if(y instanceof Date)y=d(y);else if(null===y){if(o)return c&&!h?c(r,a.encoder):r;y=""}if("string"==typeof y||"number"==typeof y||"boolean"==typeof y||n.isBuffer(y)){if(c){return[p(h?r:c(r,a.encoder))+"="+p(c(y,a.encoder))]}return[p(r)+"="+p(String(y))]}var m=[];if(void 0===y)return m;var v;if(Array.isArray(l))v=l;else{var g=Object.keys(y);v=u?g.sort(u):g}for(var b=0;b<v.length;++b){var _=v[b];s&&null===y[_]||(m=Array.isArray(y)?m.concat(e(y[_],i(r,_),i,o,s,c,l,u,f,d,p,h)):m.concat(e(y[_],r+(f?"."+_:"["+_+"]"),i,o,s,c,l,u,f,d,p,h)))}return m};t.exports=function(e,t){var r=e,s=t?n.assign({},t):{};if(null!==s.encoder&&void 0!==s.encoder&&"function"!=typeof s.encoder)throw new TypeError("Encoder has to be a function.");var l=void 0===s.delimiter?a.delimiter:s.delimiter,u="boolean"==typeof s.strictNullHandling?s.strictNullHandling:a.strictNullHandling,f="boolean"==typeof s.skipNulls?s.skipNulls:a.skipNulls,d="boolean"==typeof s.encode?s.encode:a.encode,p="function"==typeof s.encoder?s.encoder:a.encoder,h="function"==typeof s.sort?s.sort:null,y=void 0!==s.allowDots&&s.allowDots,m="function"==typeof s.serializeDate?s.serializeDate:a.serializeDate,v="boolean"==typeof s.encodeValuesOnly?s.encodeValuesOnly:a.encodeValuesOnly;if(void 0===s.format)s.format=i.default;else if(!Object.prototype.hasOwnProperty.call(i.formatters,s.format))throw new TypeError("Unknown format option provided.");var g,b,_=i.formatters[s.format];"function"==typeof s.filter?r=(b=s.filter)("",r):Array.isArray(s.filter)&&(g=b=s.filter);var w=[];if("object"!=typeof r||null===r)return"";var x;x=s.arrayFormat in o?s.arrayFormat:"indices"in s?s.indices?"indices":"repeat":"indices";var L=o[x];g||(g=Object.keys(r)),h&&g.sort(h);for(var E=0;E<g.length;++E){var S=g[E];f&&null===r[S]||(w=w.concat(c(r[S],S,L,u,f,d?p:null,b,h,y,m,_,v)))}var q=w.join(l),C=!0===s.addQueryPrefix?"?":"";return q.length>0?C+q:""}},{"./formats":35,"./utils":39}],39:[function(e,t,r){"use strict";var n=Object.prototype.hasOwnProperty,i=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}();r.arrayToObject=function(e,t){for(var r=t&&t.plainObjects?Object.create(null):{},n=0;n<e.length;++n)void 0!==e[n]&&(r[n]=e[n]);return r},r.merge=function(e,t,i){if(!t)return e;if("object"!=typeof t){if(Array.isArray(e))e.push(t);else{if("object"!=typeof e)return[e,t];(i.plainObjects||i.allowPrototypes||!n.call(Object.prototype,t))&&(e[t]=!0)}return e}if("object"!=typeof e)return[e].concat(t);var o=e;return Array.isArray(e)&&!Array.isArray(t)&&(o=r.arrayToObject(e,i)),Array.isArray(e)&&Array.isArray(t)?(t.forEach(function(t,o){n.call(e,o)?e[o]&&"object"==typeof e[o]?e[o]=r.merge(e[o],t,i):e.push(t):e[o]=t}),e):Object.keys(t).reduce(function(e,o){var s=t[o];return n.call(e,o)?e[o]=r.merge(e[o],s,i):e[o]=s,e},o)},r.assign=function(e,t){return Object.keys(t).reduce(function(e,r){return e[r]=t[r],e},e)},r.decode=function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(t){return e}},r.encode=function(e){if(0===e.length)return e;for(var t="string"==typeof e?e:String(e),r="",n=0;n<t.length;++n){var o=t.charCodeAt(n);45===o||46===o||95===o||126===o||o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122?r+=t.charAt(n):o<128?r+=i[o]:o<2048?r+=i[192|o>>6]+i[128|63&o]:o<55296||o>=57344?r+=i[224|o>>12]+i[128|o>>6&63]+i[128|63&o]:(n+=1,o=65536+((1023&o)<<10|1023&t.charCodeAt(n)),r+=i[240|o>>18]+i[128|o>>12&63]+i[128|o>>6&63]+i[128|63&o])}return r},r.compact=function(e){for(var t=[{obj:{o:e},prop:"o"}],r=[],n=0;n<t.length;++n)for(var i=t[n],o=i.obj[i.prop],s=Object.keys(o),a=0;a<s.length;++a){var c=s[a],l=o[c];"object"==typeof l&&null!==l&&-1===r.indexOf(l)&&(t.push({obj:o,prop:c}),r.push(l))}return function(e){for(var t;e.length;){var r=e.pop();if(t=r.obj[r.prop],Array.isArray(t)){for(var n=[],i=0;i<t.length;++i)void 0!==t[i]&&n.push(t[i]);r.obj[r.prop]=n}}return t}(t)},r.isRegExp=function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},r.isBuffer=function(e){return null!==e&&void 0!==e&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}},{}]},{},[7]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZSIsInQiLCJuIiwiciIsInMiLCJvIiwidSIsImEiLCJyZXF1aXJlIiwiaSIsImYiLCJFcnJvciIsImNvZGUiLCJsIiwiZXhwb3J0cyIsImNhbGwiLCJsZW5ndGgiLCIxIiwibW9kdWxlIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJIZWFkZXIiLCJjb250YWluZXIiLCJfdGhpcyIsInRoaXMiLCJpbnN0YW5jZSIsIlR5cGVFcnJvciIsIl9jbGFzc0NhbGxDaGVjayIsImhlYWRlciIsInRyaWdnZXIiLCJxdWVyeVNlbGVjdG9yIiwid3JhcHBlciIsImRyb3BEb3duIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZVZpc2liaWxpdHkiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9heGlvczIiLCJfcXMyIiwiTG9hZE1vcmUiLCJmb290ZXIiLCJkb2N1bWVudCIsIndhaXQiLCJwYWdlIiwiZGF0ZSIsInZhcnMiLCJwb3N0RGF0ZSIsImlkIiwicG9zdElEIiwicG9zdHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2VsZWN0Iiwid2luZG93Iiwic2Nyb2xsVG8iLCJsb2NhdGlvbiIsInJlbG9hZCIsImJvZHkiLCJzY3JvbGxIZWlnaHQiLCJkb2N1bWVudEVsZW1lbnQiLCJzY3JvbGxUb3AiLCJpbm5lckhlaWdodCIsIm9mZnNldEhlaWdodCIsImFkZFBvc3QiLCJnZXRBY3RpdmUiLCJfdGhpczIiLCJkYXRhIiwiYWN0aW9uIiwicG9zdF9kYXRlIiwicG9zdF9pZCIsInBvc3QiLCJhamF4dXJsIiwic3RyaW5naWZ5IiwidGhlbiIsInJlcyIsImZvckVhY2giLCJpbnNlcnRBZGphY2VudEhUTUwiLCJjb250ZW50IiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwidG9wIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidGl0bGUiLCJkYXRhc2V0IiwicGF0aCIsInVuZGVmaW5lZCIsInVwZGF0ZVBhZ2UiLCJoaXN0b3J5IiwicHVzaFN0YXRlIiwic2Nyb2xsUmVzdG9yYXRpb24iLCJheGlvcyIsInFzIiwiMyIsIlB1YmxpY2F0aW9ucyIsImhlYWRlcl9saXN0IiwiaGVhZGVyX2l0ZW1zIiwiaGVhZGVyX3ByZXYiLCJoZWFkZXJfbmV4dCIsImhlYWRlcl9pbmRleCIsImhlYWRlcl9vZmZzZXQiLCJoZWFkZXJfb2Zmc2V0V2lkdGgiLCJwYXJlbnROb2RlIiwib2Zmc2V0V2lkdGgiLCJpdGVtIiwiaW5kZXgiLCJjb250YWlucyIsInVwZGF0ZUhlYWRlciIsIm5ld0luZGV4IiwicmVtb3ZlIiwiYWRkIiwib2Zmc2V0Iiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCI0IiwiUmVzdWx0cyIsInJlc3VsdHNfYnV0dG9ucyIsInJlc3VsdHNfY291bnQiLCJyZXN1bHRzX3RhYnMiLCJyZXN1bHRzX2NvbnRhaW5lciIsInJlc3VsdHNfc2VsZWN0ZWQiLCJyZXN1bHRzX3NlbGVjdGVkX2NvbnRhaW5lciIsInJlc3VsdHNfc2VsZWN0ZWRfZGVsZXRlIiwicmVzdWx0c19zZWxlY3RlZF9tb2RlbCIsInJlc3VsdHNfc2VsZWN0ZWRfaXRlbXMiLCJmaWx0ZXJzX3Zpc2liaWxpdHkiLCJmaWx0ZXJzX2NvbnRhaW5lciIsImZpbHRlcnMiLCJjb250YWluZXJUb0ZpeCIsInNlbGVjdGVkX3RhYiIsInNlbGVjdGVkX2ZpbHRlcnMiLCJhdmFpbGFibGVfZmlsdGVycyIsImJ1dHRvbiIsInNldFRhYnMiLCJjdXJyZW50VGFyZ2V0IiwiY29udCIsIndpZHRoIiwiZmlsdGVyIiwidG9nZ2xlRmlsdGVyIiwic2VhcmNoIiwiY2xlYXJGaWx0ZXIiLCJlbGVtZW50Iiwic2x1ZyIsInRheG9ub215IiwibmFtZSIsInJlbW92ZUZpbHRlciIsInB1c2giLCJhZGRGaWx0ZXIiLCJjbG9uZU5vZGUiLCJ0ZXh0Q29udGVudCIsImFwcGVuZENoaWxkIiwiZmlsIiwic2V0U2VsZWN0ZWRWaXNpYmlsaXR5IiwiZmluZEluZGV4Iiwic2VsZWN0ZWQiLCJzcGxpY2UiLCJ1cGRhdGVGaWx0ZXJzVmlzaWJpbGl0eSIsIl90aGlzMyIsImluZGV4T2YiLCJfdGhpczQiLCJxdWVyeSIsInNlYXJjaHF1ZXJ5IiwicmVzcG9uc2UiLCJpbm5lckhUTUwiLCJyZXN1bHRzIiwicmVzdWx0IiwiNSIsIlJ1YnJpY3MiLCJkZXNrdG9wIiwiYXJndW1lbnRzIiwiYnV0dG9ucyIsIndyYXBwZXJzIiwibGFzdF9pbmRleCIsIkFycmF5IiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImNoaWxkRWxlbWVudENvdW50Iiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImJsb2NrIiwiaW5saW5lIiwicmVtb3ZlUHJvcGVydHkiLCI2IiwiVGF4b25vbXlUYWJzIiwidGFicyIsInJldHVybiIsInRhYnNXcmFwcGVyIiwiNyIsIl9IZWFkZXIyIiwiX1J1YnJpY3MyIiwiX1RheG9ub215VGFiczIiLCJfTG9hZE1vcmUyIiwiX1Jlc3VsdHMyIiwiX1B1YmxpY2F0aW9uczIiLCJwdWJsaWNhdGlvbnMiLCIuL0NsYXNzZXMvSGVhZGVyIiwiLi9DbGFzc2VzL0xvYWRNb3JlIiwiLi9DbGFzc2VzL1B1YmxpY2F0aW9ucyIsIi4vQ2xhc3Nlcy9SZXN1bHRzIiwiLi9DbGFzc2VzL1J1YnJpY3MiLCIuL0NsYXNzZXMvVGF4b25vbXlUYWJzIiwiOCIsIi4vbGliL2F4aW9zIiwiOSIsInByb2Nlc3MiLCJ1dGlscyIsInNldHRsZSIsImJ1aWxkVVJMIiwicGFyc2VIZWFkZXJzIiwiaXNVUkxTYW1lT3JpZ2luIiwiY3JlYXRlRXJyb3IiLCJidG9hIiwiYmluZCIsImNvbmZpZyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVxdWVzdERhdGEiLCJyZXF1ZXN0SGVhZGVycyIsImhlYWRlcnMiLCJpc0Zvcm1EYXRhIiwicmVxdWVzdCIsIlhNTEh0dHBSZXF1ZXN0IiwibG9hZEV2ZW50IiwieERvbWFpbiIsImVudiIsIk5PREVfRU5WIiwiWERvbWFpblJlcXVlc3QiLCJ1cmwiLCJvbnByb2dyZXNzIiwib250aW1lb3V0IiwiYXV0aCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJBdXRob3JpemF0aW9uIiwib3BlbiIsIm1ldGhvZCIsInRvVXBwZXJDYXNlIiwicGFyYW1zIiwicGFyYW1zU2VyaWFsaXplciIsInRpbWVvdXQiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwicmVzcG9uc2VVUkwiLCJyZXNwb25zZUhlYWRlcnMiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJzdGF0dXNUZXh0Iiwib25lcnJvciIsImlzU3RhbmRhcmRCcm93c2VyRW52IiwiY29va2llcyIsInhzcmZWYWx1ZSIsIndpdGhDcmVkZW50aWFscyIsInhzcmZDb29raWVOYW1lIiwicmVhZCIsInhzcmZIZWFkZXJOYW1lIiwidmFsIiwidG9Mb3dlckNhc2UiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib25Eb3dubG9hZFByb2dyZXNzIiwib25VcGxvYWRQcm9ncmVzcyIsInVwbG9hZCIsImNhbmNlbFRva2VuIiwicHJvbWlzZSIsImNhbmNlbCIsImFib3J0Iiwic2VuZCIsIi4uL2NvcmUvY3JlYXRlRXJyb3IiLCIuLy4uL2NvcmUvc2V0dGxlIiwiLi8uLi9oZWxwZXJzL2J0b2EiLCIuLy4uL2hlbHBlcnMvYnVpbGRVUkwiLCIuLy4uL2hlbHBlcnMvY29va2llcyIsIi4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4iLCIuLy4uL2hlbHBlcnMvcGFyc2VIZWFkZXJzIiwiLi8uLi91dGlscyIsIl9wcm9jZXNzIiwiMTAiLCJjcmVhdGVJbnN0YW5jZSIsImRlZmF1bHRDb25maWciLCJjb250ZXh0IiwiQXhpb3MiLCJleHRlbmQiLCJkZWZhdWx0cyIsImNyZWF0ZSIsImluc3RhbmNlQ29uZmlnIiwibWVyZ2UiLCJDYW5jZWwiLCJDYW5jZWxUb2tlbiIsImlzQ2FuY2VsIiwiYWxsIiwicHJvbWlzZXMiLCJzcHJlYWQiLCIuL2NhbmNlbC9DYW5jZWwiLCIuL2NhbmNlbC9DYW5jZWxUb2tlbiIsIi4vY2FuY2VsL2lzQ2FuY2VsIiwiLi9jb3JlL0F4aW9zIiwiLi9kZWZhdWx0cyIsIi4vaGVscGVycy9iaW5kIiwiLi9oZWxwZXJzL3NwcmVhZCIsIi4vdXRpbHMiLCIxMSIsIm1lc3NhZ2UiLCJ0b1N0cmluZyIsIl9fQ0FOQ0VMX18iLCIxMiIsImV4ZWN1dG9yIiwicmVzb2x2ZVByb21pc2UiLCJ0b2tlbiIsInJlYXNvbiIsInRocm93SWZSZXF1ZXN0ZWQiLCJzb3VyY2UiLCJjIiwiLi9DYW5jZWwiLCIxMyIsIjE0IiwiaW50ZXJjZXB0b3JzIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiZGlzcGF0Y2hSZXF1ZXN0IiwiY2hhaW4iLCJpbnRlcmNlcHRvciIsInVuc2hpZnQiLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsInNoaWZ0IiwiLi8uLi9kZWZhdWx0cyIsIi4vSW50ZXJjZXB0b3JNYW5hZ2VyIiwiLi9kaXNwYXRjaFJlcXVlc3QiLCIxNSIsImhhbmRsZXJzIiwidXNlIiwiZWplY3QiLCJmbiIsImgiLCIxNiIsImVuaGFuY2VFcnJvciIsImVycm9yIiwiLi9lbmhhbmNlRXJyb3IiLCIxNyIsInRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQiLCJ0cmFuc2Zvcm1EYXRhIiwiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwiYmFzZVVSTCIsInRyYW5zZm9ybVJlcXVlc3QiLCJjb21tb24iLCJhZGFwdGVyIiwidHJhbnNmb3JtUmVzcG9uc2UiLCIuLi9jYW5jZWwvaXNDYW5jZWwiLCIuLi9kZWZhdWx0cyIsIi4vLi4vaGVscGVycy9jb21iaW5lVVJMcyIsIi4vLi4vaGVscGVycy9pc0Fic29sdXRlVVJMIiwiLi90cmFuc2Zvcm1EYXRhIiwiMTgiLCIxOSIsInZhbGlkYXRlU3RhdHVzIiwiLi9jcmVhdGVFcnJvciIsIjIwIiwiZm5zIiwiMjEiLCJzZXRDb250ZW50VHlwZUlmVW5zZXQiLCJpc1VuZGVmaW5lZCIsIm5vcm1hbGl6ZUhlYWRlck5hbWUiLCJERUZBVUxUX0NPTlRFTlRfVFlQRSIsIkNvbnRlbnQtVHlwZSIsImdldERlZmF1bHRBZGFwdGVyIiwiaXNBcnJheUJ1ZmZlciIsImlzQnVmZmVyIiwiaXNTdHJlYW0iLCJpc0ZpbGUiLCJpc0Jsb2IiLCJpc0FycmF5QnVmZmVyVmlldyIsImJ1ZmZlciIsImlzVVJMU2VhcmNoUGFyYW1zIiwiaXNPYmplY3QiLCJKU09OIiwicGFyc2UiLCJtYXhDb250ZW50TGVuZ3RoIiwiQWNjZXB0IiwiLi9hZGFwdGVycy9odHRwIiwiLi9hZGFwdGVycy94aHIiLCIuL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZSIsIjIyIiwidGhpc0FyZyIsImFyZ3MiLCJhcHBseSIsIjIzIiwiRSIsImNoYXJzIiwiaW5wdXQiLCJjaGFyQ29kZSIsInN0ciIsIlN0cmluZyIsIm91dHB1dCIsImlkeCIsIm1hcCIsImNoYXJBdCIsImNoYXJDb2RlQXQiLCIyNCIsImVuY29kZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJzZXJpYWxpemVkUGFyYW1zIiwicGFydHMiLCJpc0FycmF5IiwidiIsImlzRGF0ZSIsInRvSVNPU3RyaW5nIiwiam9pbiIsIjI1IiwicmVsYXRpdmVVUkwiLCIyNiIsIndyaXRlIiwiZXhwaXJlcyIsImRvbWFpbiIsInNlY3VyZSIsImNvb2tpZSIsImlzTnVtYmVyIiwiRGF0ZSIsInRvR01UU3RyaW5nIiwiaXNTdHJpbmciLCJtYXRjaCIsIlJlZ0V4cCIsImRlY29kZVVSSUNvbXBvbmVudCIsIm5vdyIsIjI3IiwidGVzdCIsIjI4IiwicmVzb2x2ZVVSTCIsImhyZWYiLCJtc2llIiwidXJsUGFyc2luZ05vZGUiLCJzZXRBdHRyaWJ1dGUiLCJwcm90b2NvbCIsImhvc3QiLCJoYXNoIiwiaG9zdG5hbWUiLCJwb3J0IiwicGF0aG5hbWUiLCJvcmlnaW5VUkwiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJjcmVhdGVFbGVtZW50IiwicmVxdWVzdFVSTCIsInBhcnNlZCIsIjI5Iiwibm9ybWFsaXplZE5hbWUiLCIuLi91dGlscyIsIjMwIiwiaWdub3JlRHVwbGljYXRlT2YiLCJzcGxpdCIsImxpbmUiLCJ0cmltIiwic3Vic3RyIiwiY29uY2F0IiwiMzEiLCJjYWxsYmFjayIsImFyciIsIjMyIiwiaXNGdW5jdGlvbiIsImhhc093blByb3BlcnR5IiwiYXNzaWduVmFsdWUiLCJGb3JtRGF0YSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwicGlwZSIsIlVSTFNlYXJjaFBhcmFtcyIsInByb2R1Y3QiLCJiIiwiaXMtYnVmZmVyIiwiMzMiLCJjb25zdHJ1Y3RvciIsInJlYWRGbG9hdExFIiwic2xpY2UiLCJpc1Nsb3dCdWZmZXIiLCJfaXNCdWZmZXIiLCIzNCIsImRlZmF1bHRTZXRUaW1vdXQiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsImNhY2hlZFNldFRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiY2xlYW5VcE5leHRUaWNrIiwiZHJhaW5pbmciLCJjdXJyZW50UXVldWUiLCJxdWV1ZSIsInF1ZXVlSW5kZXgiLCJkcmFpblF1ZXVlIiwibGVuIiwicnVuIiwibWFya2VyIiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsImFycmF5Iiwibm9vcCIsIm5leHRUaWNrIiwiYnJvd3NlciIsImFyZ3YiLCJ2ZXJzaW9uIiwidmVyc2lvbnMiLCJvbiIsImFkZExpc3RlbmVyIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiZW1pdCIsInByZXBlbmRMaXN0ZW5lciIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJsaXN0ZW5lcnMiLCJiaW5kaW5nIiwiY3dkIiwiY2hkaXIiLCJkaXIiLCJ1bWFzayIsIjM1IiwicGVyY2VudFR3ZW50aWVzIiwiZm9ybWF0dGVycyIsIlJGQzE3MzgiLCJSRkMzOTg2IiwiMzYiLCJmb3JtYXRzIiwiLi9mb3JtYXRzIiwiLi9wYXJzZSIsIi4vc3RyaW5naWZ5IiwiMzciLCJoYXMiLCJhbGxvd0RvdHMiLCJhbGxvd1Byb3RvdHlwZXMiLCJhcnJheUxpbWl0IiwiZGVjb2RlciIsImRlY29kZSIsImRlbGltaXRlciIsImRlcHRoIiwicGFyYW1ldGVyTGltaXQiLCJwbGFpbk9iamVjdHMiLCJzdHJpY3ROdWxsSGFuZGxpbmciLCJwYXJzZUtleXMiLCJnaXZlbktleSIsIm9wdGlvbnMiLCJjaGlsZCIsInNlZ21lbnQiLCJleGVjIiwicGFyZW50Iiwia2V5cyIsImxlYWYiLCJyb290IiwiY2xlYW5Sb290IiwicGFyc2VJbnQiLCJpc05hTiIsInBhcnNlQXJyYXlzIiwicGFyc2VPYmplY3QiLCJvcHRzIiwiYXNzaWduIiwiaWdub3JlUXVlcnlQcmVmaXgiLCJpc1JlZ0V4cCIsInRlbXBPYmoiLCJjbGVhblN0ciIsImxpbWl0IiwiSW5maW5pdHkiLCJwYXJ0IiwiYnJhY2tldEVxdWFsc1BvcyIsInBvcyIsInBhcnNlVmFsdWVzIiwibmV3T2JqIiwiY29tcGFjdCIsIjM4IiwiYXJyYXlQcmVmaXhHZW5lcmF0b3JzIiwiYnJhY2tldHMiLCJwcmVmaXgiLCJpbmRpY2VzIiwicmVwZWF0IiwidG9JU08iLCJlbmNvZGVyIiwiZW5jb2RlVmFsdWVzT25seSIsInNlcmlhbGl6ZURhdGUiLCJza2lwTnVsbHMiLCJvYmplY3QiLCJnZW5lcmF0ZUFycmF5UHJlZml4Iiwic29ydCIsImZvcm1hdHRlciIsInZhbHVlcyIsIm9iaktleXMiLCJmb3JtYXQiLCJhcnJheUZvcm1hdCIsImpvaW5lZCIsImFkZFF1ZXJ5UHJlZml4IiwiMzkiLCJoZXhUYWJsZSIsImFycmF5VG9PYmplY3QiLCJtZXJnZVRhcmdldCIsInJlZHVjZSIsImFjYyIsInN0cmluZyIsIm91dCIsInByb3AiLCJyZWZzIiwiaiIsInBvcCIsImNvbXBhY3RlZCIsImNvbXBhY3RRdWV1ZSJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBVUEsRUFBRUMsRUFBRUMsRUFBRUMsR0FBRyxTQUFTQyxFQUFFQyxFQUFFQyxHQUFHLElBQUlKLEVBQUVHLEdBQUcsQ0FBQyxJQUFJSixFQUFFSSxHQUFHLENBQUMsSUFBSUUsRUFBa0IsbUJBQVRDLFNBQXFCQSxRQUFRLElBQUlGLEdBQUdDLEVBQUUsT0FBT0EsRUFBRUYsR0FBRSxHQUFJLEdBQUdJLEVBQUUsT0FBT0EsRUFBRUosR0FBRSxHQUFJLElBQUlLLEVBQUUsSUFBSUMsTUFBTSx1QkFBdUJOLEVBQUUsS0FBSyxNQUFNSyxFQUFFRSxLQUFLLG1CQUFtQkYsRUFBRSxJQUFJRyxFQUFFWCxFQUFFRyxJQUFJUyxZQUFZYixFQUFFSSxHQUFHLEdBQUdVLEtBQUtGLEVBQUVDLFFBQVEsU0FBU2QsR0FBRyxJQUFJRSxFQUFFRCxFQUFFSSxHQUFHLEdBQUdMLEdBQUcsT0FBT0ksRUFBRUYsR0FBSUYsSUFBSWEsRUFBRUEsRUFBRUMsUUFBUWQsRUFBRUMsRUFBRUMsRUFBRUMsR0FBRyxPQUFPRCxFQUFFRyxHQUFHUyxRQUFrRCxJQUFJLElBQTFDTCxFQUFrQixtQkFBVEQsU0FBcUJBLFFBQWdCSCxFQUFFLEVBQUVBLEVBQUVGLEVBQUVhLE9BQU9YLElBQUlELEVBQUVELEVBQUVFLElBQUksT0FBT0QsRUFBdmIsRUFBNGJhLEdBQUcsU0FBU1QsRUFBUVUsRUFBT0osR0FDdmQsYUFFQSxJQUFJSyxFQUFlLFdBQWMsU0FBU0MsRUFBaUJDLEVBQVFDLEdBQVMsSUFBSyxJQUFJYixFQUFJLEVBQUdBLEVBQUlhLEVBQU1OLE9BQVFQLElBQUssQ0FBRSxJQUFJYyxFQUFhRCxFQUFNYixHQUFJYyxFQUFXQyxXQUFhRCxFQUFXQyxhQUFjLEVBQU9E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LE1BRWhCemEsTUFBTXVPLFFBQVFsWCxHQUFNLENBR3BCLElBQUssSUFGRHdqQixLQUVLRixFQUFJLEVBQUdBLEVBQUl0akIsRUFBSXRDLFNBQVU0bEIsT0FDUixJQUFYdGpCLEVBQUlzakIsSUFDWEUsRUFBVXhjLEtBQUtoSCxFQUFJc2pCLElBSTNCaGYsRUFBS3RFLElBQUlzRSxFQUFLOGUsTUFBUUksR0FJOUIsT0FBT3hqQixFQTJKQXlqQixDQUFhckgsSUFHeEI1ZSxFQUFRb2pCLFNBQVcsU0FBa0I1Z0IsR0FDakMsTUFBK0Msb0JBQXhDM0IsT0FBT00sVUFBVWtTLFNBQVNwVCxLQUFLdUMsSUFHMUN4QyxFQUFRcVgsU0FBVyxTQUFrQjdVLEdBQ2pDLE9BQVksT0FBUkEsUUFBK0IsSUFBUkEsTUFJakJBLEVBQUlxYixhQUFlcmIsRUFBSXFiLFlBQVl4RyxVQUFZN1UsRUFBSXFiLFlBQVl4RyxTQUFTN1UsZUFHM0UiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIEhlYWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gSGVhZGVyKGNvbnRhaW5lcikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSGVhZGVyKTtcblxuICAgIHRoaXMuaGVhZGVyID0gY29udGFpbmVyO1xuICAgIHRoaXMudHJpZ2dlciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuc2l0ZS1oZWFkZXJfX25hdi10cmlnZ2VyJyk7XG4gICAgdGhpcy53cmFwcGVyID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5zaXRlLWhlYWRlcl9fd3JhcHBlcicpO1xuICAgIHRoaXMuZHJvcERvd24gPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLmRyb3BfX3RyaWdnZXInKTtcblxuICAgIHRoaXMudHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICBfdGhpcy50b2dnbGVWaXNpYmlsaXR5KCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmRyb3BEb3duLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhIZWFkZXIsIFt7XG4gICAga2V5OiAndG9nZ2xlVmlzaWJpbGl0eScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvZ2dsZVZpc2liaWxpdHkoKSB7XG4gICAgICB0aGlzLndyYXBwZXIuY2xhc3NMaXN0LnRvZ2dsZSgnc2l0ZS1oZWFkZXJfX3dyYXBwZXItLWhpZGUnKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSGVhZGVyO1xufSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEhlYWRlcjtcblxufSx7fV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfYXhpb3MgPSByZXF1aXJlKCdheGlvcycpO1xuXG52YXIgX2F4aW9zMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2F4aW9zKTtcblxudmFyIF9xcyA9IHJlcXVpcmUoJ3FzJyk7XG5cbnZhciBfcXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgTG9hZE1vcmUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIExvYWRNb3JlKGNvbnRhaW5lcikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9hZE1vcmUpO1xuXG4gICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgdGhpcy5mb290ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdmb290ZXIuc2l0ZS1mb290ZXInKTtcbiAgICB0aGlzLndhaXQgPSBmYWxzZTtcbiAgICB0aGlzLnBhZ2UgPSAxO1xuICAgIHRoaXMuZGF0ZSA9IHZhcnMucG9zdERhdGU7XG4gICAgdGhpcy5pZCA9IHZhcnMucG9zdElEO1xuICAgIHRoaXMucG9zdHMgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcucHVibGljYXRpb24td3JhcHBlcicpO1xuXG4gICAgdGhpcy5zZWxlY3QgPSB7fTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvbmxvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG4gICAgfSk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHNjcm9sbEJvdHRvbSA9IGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0IC0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCAtICh3aW5kb3cuaW5uZXJIZWlnaHQgKyBfdGhpcy5mb290ZXIub2Zmc2V0SGVpZ2h0KTtcblxuICAgICAgaWYgKHNjcm9sbEJvdHRvbSA8PSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAyICYmICFfdGhpcy53YWl0KSB7XG4gICAgICAgIF90aGlzLmFkZFBvc3QoKTtcbiAgICAgICAgX3RoaXMud2FpdCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIF90aGlzLmdldEFjdGl2ZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKExvYWRNb3JlLCBbe1xuICAgIGtleTogJ2FkZFBvc3QnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRQb3N0KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBkYXRhID0ge1xuICAgICAgICBhY3Rpb246ICdwdWJsaWNhdGlvbl9sb2FkX21vcmUnLFxuICAgICAgICBwb3N0X2RhdGU6IHRoaXMuZGF0ZSxcbiAgICAgICAgcG9zdF9pZDogdGhpcy5pZCxcbiAgICAgICAgcGFnZTogdGhpcy5wYWdlXG4gICAgICB9O1xuXG4gICAgICBfYXhpb3MyLmRlZmF1bHQucG9zdChhamF4dXJsLCBfcXMyLmRlZmF1bHQuc3RyaW5naWZ5KGRhdGEpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgcmVzLmRhdGEuZGF0YS5wb3N0cy5mb3JFYWNoKGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgICAgICAgX3RoaXMyLmNvbnRhaW5lci5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHBvc3QuY29udGVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICBfdGhpczIucG9zdHMgPSBfdGhpczIuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zaW5nbGVfX3dyYXBwZXInKTtcbiAgICAgICAgX3RoaXMyLnBhZ2UgKz0gMTtcbiAgICAgICAgX3RoaXMyLndhaXQgPSBmYWxzZTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldEFjdGl2ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEFjdGl2ZSgpIHtcbiAgICAgIHZhciBzZWxlY3QgPSB7fTtcbiAgICAgIHRoaXMucG9zdHMuZm9yRWFjaChmdW5jdGlvbiAocG9zdCkge1xuICAgICAgICB2YXIgX3Bvc3QkZ2V0Qm91bmRpbmdDbGllID0gcG9zdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgICAgICAgIHRvcCA9IF9wb3N0JGdldEJvdW5kaW5nQ2xpZS50b3A7XG5cbiAgICAgICAgaWYgKHRvcCA8IHdpbmRvdy5pbm5lckhlaWdodCAvIDIgJiYgdG9wID4gMCkge1xuICAgICAgICAgIHNlbGVjdCA9IHtcbiAgICAgICAgICAgIHRpdGxlOiBwb3N0LmRhdGFzZXQudGl0bGUsXG4gICAgICAgICAgICBwYXRoOiBwb3N0LmRhdGFzZXQucGF0aFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAodGhpcy5zZWxlY3QudGl0bGUgIT09IHNlbGVjdC50aXRsZSAmJiBzZWxlY3QudGl0bGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLnNlbGVjdCA9IHNlbGVjdDtcbiAgICAgICAgdGhpcy51cGRhdGVQYWdlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlUGFnZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVBhZ2UoKSB7XG4gICAgICBkb2N1bWVudC50aXRsZSA9IHRoaXMuc2VsZWN0LnRpdGxlICsgJyAtIEVjcml0dXJlcyBOdW1lcmlxdWVzJztcbiAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSh7fSwgJycsIHRoaXMuc2VsZWN0LnBhdGgpO1xuICAgICAgd2luZG93Lmhpc3Rvcnkuc2Nyb2xsUmVzdG9yYXRpb24gPSAnbWFudWFsJztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTG9hZE1vcmU7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IExvYWRNb3JlO1xuXG59LHtcImF4aW9zXCI6OCxcInFzXCI6MzZ9XSwzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFB1YmxpY2F0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUHVibGljYXRpb25zKGNvbnRhaW5lcikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHVibGljYXRpb25zKTtcblxuICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgIHRoaXMuaGVhZGVyX2xpc3QgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLmhlYWRlcl9fbGlzdCcpO1xuICAgIHRoaXMuaGVhZGVyX2l0ZW1zID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5oZWFkZXJfX2l0ZW0gYnV0dG9uJyk7XG4gICAgdGhpcy5oZWFkZXJfcHJldiA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19uYXYtLXByZXYnKTtcbiAgICB0aGlzLmhlYWRlcl9uZXh0ID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXJfX25hdi0tbmV4dCcpO1xuICAgIHRoaXMuaGVhZGVyX2luZGV4ID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuaGVhZGVyX29mZnNldCA9IDU7XG4gICAgdGhpcy5oZWFkZXJfb2Zmc2V0V2lkdGggPSB0aGlzLmhlYWRlcl9saXN0LnBhcmVudE5vZGUub2Zmc2V0V2lkdGggLyA1O1xuXG4gICAgdGhpcy5oZWFkZXJfaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIGlmIChpdGVtLmNsYXNzTGlzdC5jb250YWlucygnaXRlbS0tYWN0aXZlJykpIHtcbiAgICAgICAgX3RoaXMuaGVhZGVyX2luZGV4ID0gaW5kZXg7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLmhlYWRlcl9uZXh0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLmhlYWRlcl9pbmRleCA8IF90aGlzLmhlYWRlcl9pdGVtcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIF90aGlzLnVwZGF0ZUhlYWRlcihfdGhpcy5oZWFkZXJfaW5kZXggKyAxKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuaGVhZGVyX3ByZXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoX3RoaXMuaGVhZGVyX2luZGV4ID49IDEpIHtcbiAgICAgICAgX3RoaXMudXBkYXRlSGVhZGVyKF90aGlzLmhlYWRlcl9pbmRleCAtIDEpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFB1YmxpY2F0aW9ucywgW3tcbiAgICBrZXk6ICd1cGRhdGVIZWFkZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVIZWFkZXIobmV3SW5kZXgpIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuaGVhZGVyX2luZGV4KVxuICAgICAgLy8gY29uc29sZS5sb2cobmV3SW5kZXgpXG4gICAgICB0aGlzLmhlYWRlcl9pdGVtc1t0aGlzLmhlYWRlcl9pbmRleF0uY2xhc3NMaXN0LnJlbW92ZSgnaXRlbS0tYWN0aXZlJyk7XG5cbiAgICAgIHRoaXMuaGVhZGVyX2luZGV4ID0gbmV3SW5kZXg7XG4gICAgICB0aGlzLmhlYWRlcl9pdGVtc1t0aGlzLmhlYWRlcl9pbmRleF0uY2xhc3NMaXN0LmFkZCgnaXRlbS0tYWN0aXZlJyk7XG5cbiAgICAgIGlmICh0aGlzLmhlYWRlcl9pbmRleCA8PSAwKSB7XG4gICAgICAgIHRoaXMuaGVhZGVyX3ByZXYuY2xhc3NMaXN0LmFkZCgnaGVhZGVyX19uYXYtLWRpc2FibGUnKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5oZWFkZXJfaW5kZXggPj0gdGhpcy5oZWFkZXJfaXRlbXMubGVuZ3RoIC0gMSkge1xuICAgICAgICB0aGlzLmhlYWRlcl9uZXh0LmNsYXNzTGlzdC5hZGQoJ2hlYWRlcl9fbmF2LS1kaXNhYmxlJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmhlYWRlcl9uZXh0LmNsYXNzTGlzdC5yZW1vdmUoJ2hlYWRlcl9fbmF2LS1kaXNhYmxlJyk7XG4gICAgICAgIHRoaXMuaGVhZGVyX3ByZXYuY2xhc3NMaXN0LnJlbW92ZSgnaGVhZGVyX19uYXYtLWRpc2FibGUnKTtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2codGhpcy5oZWFkZXJfaW5kZXggLSB0aGlzLmhlYWRlcl9vZmZzZXQpO1xuICAgICAgaWYgKHRoaXMuaGVhZGVyX2luZGV4IC0gdGhpcy5oZWFkZXJfb2Zmc2V0ID49IDApIHtcbiAgICAgICAgdmFyIG9mZnNldCA9ICh0aGlzLmhlYWRlcl9pbmRleCAtIHRoaXMuaGVhZGVyX29mZnNldCArIDEpICogdGhpcy5oZWFkZXJfb2Zmc2V0V2lkdGg7XG5cbiAgICAgICAgdGhpcy5oZWFkZXJfbGlzdC5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWCgtJyArIG9mZnNldCArICdweCknO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5oZWFkZXJfbGlzdC5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWCgwcHgpJztcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUHVibGljYXRpb25zO1xufSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBQdWJsaWNhdGlvbnM7XG5cbn0se31dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2F4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcblxudmFyIF9heGlvczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9heGlvcyk7XG5cbnZhciBfcXMgPSByZXF1aXJlKCdxcycpO1xuXG52YXIgX3FzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3FzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFJlc3VsdHMgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFJlc3VsdHMoY29udGFpbmVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXN1bHRzKTtcblxuICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgIHRoaXMucmVzdWx0c19idXR0b25zID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5oZWFkZXJfX3N3aXRjaCcpO1xuICAgIHRoaXMucmVzdWx0c19jb3VudCA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcuaGVhZGVyX19idXR0b24gc3BhbicpO1xuXG4gICAgdGhpcy5yZXN1bHRzX3RhYnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmxpc3RfX2NvbnRhaW5lcicpO1xuICAgIHRoaXMucmVzdWx0c19jb250YWluZXIgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmxpc3QnKTtcblxuICAgIHRoaXMucmVzdWx0c19zZWxlY3RlZCA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucmVzdWx0c19fc2VsZWN0ZWQtZmlsdGVycycpO1xuICAgIHRoaXMucmVzdWx0c19zZWxlY3RlZF9jb250YWluZXIgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkX19jb250YWluZXInKTtcbiAgICB0aGlzLnJlc3VsdHNfc2VsZWN0ZWRfZGVsZXRlID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5zZWxlY3RlZF9fZGVsZXRlJyk7XG4gICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkX21vZGVsID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5pdGVtLS1tb2RlbCcpO1xuICAgIHRoaXMucmVzdWx0c19zZWxlY3RlZF9pdGVtcyA9IFtdO1xuXG4gICAgdGhpcy5maWx0ZXJzX3Zpc2liaWxpdHkgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLmhlYWRlcl9fYnV0dG9uLS1maWx0ZXInKTtcbiAgICB0aGlzLmZpbHRlcnNfY29udGFpbmVyID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRzX19maWx0ZXJzJyk7XG4gICAgdGhpcy5maWx0ZXJzID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5maWx0ZXInKTtcblxuICAgIHRoaXMuY29udGFpbmVyVG9GaXggPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnRheG9ub215LWZpeCcpO1xuXG4gICAgdGhpcy5zZWxlY3RlZF90YWIgPSAwO1xuICAgIHRoaXMuc2VsZWN0ZWRfZmlsdGVycyA9IFtdO1xuICAgIHRoaXMuYXZhaWxhYmxlX2ZpbHRlcnMgPSBbXTtcblxuICAgIHRoaXMucmVzdWx0c19idXR0b25zLmZvckVhY2goZnVuY3Rpb24gKGJ1dHRvbikge1xuICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgX3RoaXMuc2V0VGFicyhlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pbmRleCk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHRoaXMuZmlsdGVyc192aXNpYmlsaXR5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuZmlsdGVyc19jb250YWluZXIuY2xhc3NMaXN0LnRvZ2dsZSgncmVzdWx0c19fZmlsdGVycy0tYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNvbnRhaW5lclRvRml4LmZvckVhY2goZnVuY3Rpb24gKGNvbnQpIHtcbiAgICAgIHZhciBfY29udCRxdWVyeVNlbGVjdG9yJGcgPSBjb250LnF1ZXJ5U2VsZWN0b3IoJ2xpJykuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICAgICAgd2lkdGggPSBfY29udCRxdWVyeVNlbGVjdG9yJGcud2lkdGg7XG5cbiAgICAgIGNvbnQuc3R5bGUud2lkdGggPSB3aWR0aCAqIDIgKyAncHgnO1xuICAgIH0pO1xuXG4gICAgdGhpcy5maWx0ZXJzLmZvckVhY2goZnVuY3Rpb24gKGZpbHRlcikge1xuICAgICAgZmlsdGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgX3RoaXMudG9nZ2xlRmlsdGVyKGUuY3VycmVudFRhcmdldCk7XG4gICAgICAgIF90aGlzLnNlYXJjaCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnJlc3VsdHNfc2VsZWN0ZWRfZGVsZXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuY2xlYXJGaWx0ZXIoKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhSZXN1bHRzLCBbe1xuICAgIGtleTogJ3NldFRhYnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRUYWJzKGluZGV4KSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZF90YWIgIT09IGluZGV4KSB7XG4gICAgICAgIHRoaXMucmVzdWx0c190YWJzW3RoaXMuc2VsZWN0ZWRfdGFiXS5jbGFzc0xpc3QucmVtb3ZlKCdsaXN0X19jb250YWluZXItLWFjdGl2ZScpO1xuICAgICAgICB0aGlzLnJlc3VsdHNfYnV0dG9uc1t0aGlzLnNlbGVjdGVkX3RhYl0uY2xhc3NMaXN0LnJlbW92ZSgnaGVhZGVyX19idXR0b24tLWFjdGl2ZScpO1xuXG4gICAgICAgIHRoaXMucmVzdWx0c190YWJzW2luZGV4XS5jbGFzc0xpc3QuYWRkKCdsaXN0X19jb250YWluZXItLWFjdGl2ZScpO1xuICAgICAgICB0aGlzLnJlc3VsdHNfYnV0dG9uc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnaGVhZGVyX19idXR0b24tLWFjdGl2ZScpO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRfdGFiID0gaW5kZXg7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndG9nZ2xlRmlsdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlRmlsdGVyKGVsZW1lbnQpIHtcbiAgICAgIHZhciBmaWx0ZXIgPSB7XG4gICAgICAgIHNsdWc6IGVsZW1lbnQuZGF0YXNldC5zbHVnLFxuICAgICAgICB0YXhvbm9teTogZWxlbWVudC5kYXRhc2V0LnRheG9ub215LFxuICAgICAgICBuYW1lOiBlbGVtZW50LmRhdGFzZXQubmFtZVxuICAgICAgfTtcbiAgICAgIGlmICghZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZpbHRlci0tYWN0aXZlJykpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZF9maWx0ZXJzLnB1c2goZmlsdGVyKTtcbiAgICAgICAgdGhpcy5hZGRGaWx0ZXIoZmlsdGVyKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRmlsdGVyKGZpbHRlcik7XG4gICAgICB9XG5cbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnZmlsdGVyLS1hY3RpdmUnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdhZGRGaWx0ZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRGaWx0ZXIoZmlsdGVyKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLnJlc3VsdHNfc2VsZWN0ZWRfbW9kZWwuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuaXRlbV9fbGFiZWwnKS50ZXh0Q29udGVudCA9IGZpbHRlci5uYW1lO1xuICAgICAgZWxlbWVudC5kYXRhc2V0LnNsdWcgPSBmaWx0ZXIuc2x1ZztcbiAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnaXRlbS0tbW9kZWwnKTtcblxuICAgICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkX2NvbnRhaW5lci5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICAgIHRoaXMucmVzdWx0c19zZWxlY3RlZF9pdGVtcy5wdXNoKGVsZW1lbnQpO1xuXG4gICAgICBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pdGVtX19kZWxldGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBmaWwgPSB7XG4gICAgICAgICAgc2x1ZzogZS5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUuZGF0YXNldC5zbHVnLFxuICAgICAgICAgIHRheG9ub215OiBlLmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5kYXRhc2V0LnRheG9ub215LFxuICAgICAgICAgIG5hbWU6IGUuY3VycmVudFRhcmdldC5wYXJlbnROb2RlLmRhdGFzZXQubmFtZVxuICAgICAgICB9O1xuXG4gICAgICAgIF90aGlzMi5yZW1vdmVGaWx0ZXIoZmlsKTtcbiAgICAgICAgX3RoaXMyLnNlYXJjaCgpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnNldFNlbGVjdGVkVmlzaWJpbGl0eSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbW92ZUZpbHRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZUZpbHRlcihmaWx0ZXIpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkX19pdGVtW2RhdGEtc2x1Zz0nICsgZmlsdGVyLnNsdWcgKyAnXScpO1xuICAgICAgZWxlbWVudC5yZW1vdmUoKTtcblxuICAgICAgdmFyIGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXhvbm9teV9fZmlsdGVycyAuZmlsdGVyW2RhdGEtc2x1Zz0nICsgZmlsdGVyLnNsdWcgKyAnXScpO1xuICAgICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2ZpbHRlci0tYWN0aXZlJyk7XG5cbiAgICAgIHZhciBpbmRleCA9IHRoaXMuc2VsZWN0ZWRfZmlsdGVycy5maW5kSW5kZXgoZnVuY3Rpb24gKHNlbGVjdGVkKSB7XG4gICAgICAgIHJldHVybiBzZWxlY3RlZC5zbHVnID09PSBmaWx0ZXIuc2x1ZyAmJiBzZWxlY3RlZC50YXhvbm9teSA9PT0gZmlsdGVyLnRheG9ub215O1xuICAgICAgfSk7XG4gICAgICB0aGlzLnNlbGVjdGVkX2ZpbHRlcnMuc3BsaWNlKGluZGV4LCAxKTtcblxuICAgICAgdGhpcy5zZXRTZWxlY3RlZFZpc2liaWxpdHkoKTtcbiAgICAgIHRoaXMudXBkYXRlRmlsdGVyc1Zpc2liaWxpdHkoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjbGVhckZpbHRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsZWFyRmlsdGVyKCkge1xuICAgICAgdGhpcy5maWx0ZXJzLmZvckVhY2goZnVuY3Rpb24gKGZpbHRlcikge1xuICAgICAgICBmaWx0ZXIuY2xhc3NMaXN0LnJlbW92ZSgnZmlsdGVyLS1hY3RpdmUnKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5zZWxlY3RlZF9maWx0ZXJzID0gW107XG5cbiAgICAgIHRoaXMucmVzdWx0c19zZWxlY3RlZF9pdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIGl0ZW0ucmVtb3ZlKCk7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5zZXRTZWxlY3RlZFZpc2liaWxpdHkoKTtcblxuICAgICAgdGhpcy5zZWFyY2goKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZXRTZWxlY3RlZFZpc2liaWxpdHknLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRTZWxlY3RlZFZpc2liaWxpdHkoKSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZF9maWx0ZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkLmNsYXNzTGlzdC5hZGQoJ3Jlc3VsdHNfX3NlbGVjdGVkLWZpbHRlcnMtLWFjdGl2ZScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkLmNsYXNzTGlzdC5yZW1vdmUoJ3Jlc3VsdHNfX3NlbGVjdGVkLWZpbHRlcnMtLWFjdGl2ZScpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZUZpbHRlcnNWaXNpYmlsaXR5JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlRmlsdGVyc1Zpc2liaWxpdHkoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdGhpcy5maWx0ZXJzLmZvckVhY2goZnVuY3Rpb24gKGZpbHRlcikge1xuICAgICAgICBpZiAoX3RoaXMzLmF2YWlsYWJsZV9maWx0ZXJzLmluZGV4T2YoZmlsdGVyLmRhdGFzZXQuc2x1ZykgPT09IC0xKSB7XG4gICAgICAgICAgZmlsdGVyLmNsYXNzTGlzdC5hZGQoJ2ZpbHRlci0taW5hY3RpdmUnKTtcbiAgICAgICAgICBmaWx0ZXIuY2xhc3NMaXN0LnJlbW92ZSgnZmlsdGVyLS1hY3RpdmUnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmaWx0ZXIuY2xhc3NMaXN0LnJlbW92ZSgnZmlsdGVyLS1pbmFjdGl2ZScpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZWFyY2gnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZWFyY2goKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIGFjdGlvbjogJ3NlYXJjaF9maWx0ZXJzJyxcbiAgICAgICAgcXVlcnk6IHNlYXJjaHF1ZXJ5LFxuICAgICAgICBmaWx0ZXJzOiB0aGlzLnNlbGVjdGVkX2ZpbHRlcnNcbiAgICAgIH07XG5cbiAgICAgIF9heGlvczIuZGVmYXVsdC5wb3N0KGFqYXh1cmwsIF9xczIuZGVmYXVsdC5zdHJpbmdpZnkoZGF0YSkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIF90aGlzNC5yZXN1bHRzX2NvbnRhaW5lci5mb3JFYWNoKGZ1bmN0aW9uIChjb250YWluZXIsIGluZGV4KSB7XG4gICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgIF90aGlzNC5yZXN1bHRzX2NvdW50W2luZGV4XS5pbm5lckhUTUwgPSByZXNwb25zZS5kYXRhLmRhdGEucmVzdWx0c1tpbmRleF0ubGVuZ3RoO1xuICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZGF0YS5yZXN1bHRzW2luZGV4XS5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGNvbnRhaW5lci5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHJlc3VsdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF90aGlzNC5hdmFpbGFibGVfZmlsdGVycyA9IHJlc3BvbnNlLmRhdGEuZGF0YS5hdmFpbGFibGVfZmlsdGVycztcbiAgICAgICAgX3RoaXM0LnVwZGF0ZUZpbHRlcnNWaXNpYmlsaXR5KCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVzdWx0cztcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZXN1bHRzO1xuXG59LHtcImF4aW9zXCI6OCxcInFzXCI6MzZ9XSw1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFJ1YnJpY3MgPSBmdW5jdGlvbiBSdWJyaWNzKGNvbnRhaW5lcikge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIHZhciBkZXNrdG9wID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0cnVlO1xuXG4gIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSdWJyaWNzKTtcblxuICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgdGhpcy5idXR0b25zID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5pdGVtX19idXR0b24nKTtcbiAgdGhpcy53cmFwcGVycyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcuaXRlbV9fd3JhcHBlcicpO1xuICB0aGlzLmxhc3RfaW5kZXggPSBudWxsO1xuICB0aGlzLmRlc2t0b3AgPSBkZXNrdG9wO1xuXG4gIHRoaXMuYnV0dG9ucy5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdmFyIGluZGV4ID0gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChfdGhpcy5idXR0b25zLCBidXR0b24pO1xuXG4gICAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCA3MDApIHtcbiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21vYmlsZS1hY3RpdmUnKTtcbiAgICAgICAgX3RoaXMud3JhcHBlcnNbaW5kZXhdLnN0eWxlLmhlaWdodCA9IF90aGlzLndyYXBwZXJzW2luZGV4XS5jaGlsZEVsZW1lbnRDb3VudCAqIDYwICsgJ3B4JztcbiAgICAgICAgX3RoaXMuY29udGFpbmVyLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ3N0YXJ0JywgaW5saW5lOiAnbmVhcmVzdCcgfSk7XG5cbiAgICAgICAgX3RoaXMud3JhcHBlcnMuZm9yRWFjaChmdW5jdGlvbiAod3JhcHBlciwgaSkge1xuICAgICAgICAgIGlmIChpICE9PSBpbmRleCB8fCBpbmRleCA9PT0gX3RoaXMubGFzdF9pbmRleCkge1xuICAgICAgICAgICAgd3JhcHBlci5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgnaGVpZ2h0Jyk7XG4gICAgICAgICAgICBfdGhpcy5idXR0b25zW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ21vYmlsZS1hY3RpdmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChkZXNrdG9wKSB7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdkZXNrdG9wLWFjdGl2ZScpO1xuICAgICAgICBfdGhpcy53cmFwcGVyc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnZGVza3RvcC1hY3RpdmUnKTtcblxuICAgICAgICBfdGhpcy53cmFwcGVycy5mb3JFYWNoKGZ1bmN0aW9uICh3cmFwcGVyLCBpKSB7XG4gICAgICAgICAgX3RoaXMud3JhcHBlcnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnbW9iaWxlLWFjdGl2ZScpO1xuICAgICAgICAgIF90aGlzLmJ1dHRvbnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnbW9iaWxlLWFjdGl2ZScpO1xuICAgICAgICAgIHdyYXBwZXIuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ2hlaWdodCcpO1xuICAgICAgICAgIGlmIChpICE9PSBpbmRleCkge1xuICAgICAgICAgICAgX3RoaXMud3JhcHBlcnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnZGVza3RvcC1hY3RpdmUnKTtcbiAgICAgICAgICAgIF90aGlzLmJ1dHRvbnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnZGVza3RvcC1hY3RpdmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5sYXN0X2luZGV4ID0gX3RoaXMubGFzdF9pbmRleCA9PT0gaW5kZXggPyBudWxsIDogaW5kZXg7XG4gICAgfSk7XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSdWJyaWNzO1xuXG59LHt9XSw2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFRheG9ub215VGFicyA9IGZ1bmN0aW9uIFRheG9ub215VGFicyhjb250YWluZXIpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcblxuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGF4b25vbXlUYWJzKTtcblxuICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgdGhpcy50YWJzID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ3NlY3Rpb24ucmVsYXRlZF9fc2VjdGlvbicpO1xuICB0aGlzLmJ1dHRvbnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uLmhlYWRlcl9fYnV0dG9uJyk7XG4gIHRoaXMud3JhcHBlciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucmVsYXRlZF9fY29udGFpbmVyJyk7XG4gIHRoaXMucmV0dXJuID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5yZWxhdGVkX19yZXR1cm4nKTtcbiAgdGhpcy50YWJzV3JhcHBlciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucmVsYXRlZF9fd3JhcHBlcicpO1xuICB0aGlzLmxhc3RfaW5kZXggPSAwO1xuXG4gIHRoaXMuYnV0dG9ucy5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIGluZGV4ID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaW5kZXg7XG5cblxuICAgICAgaWYgKGluZGV4ICE9PSBfdGhpcy5sYXN0X2luZGV4KSB7XG4gICAgICAgIF90aGlzLmJ1dHRvbnNbX3RoaXMubGFzdF9pbmRleF0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICAgIF90aGlzLnRhYnNbX3RoaXMubGFzdF9pbmRleF0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG5cbiAgICAgICAgX3RoaXMuYnV0dG9uc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgICAgIF90aGlzLnRhYnNbaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuXG4gICAgICAgIF90aGlzLmxhc3RfaW5kZXggPSBpbmRleDtcbiAgICAgIH1cblxuICAgICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoIDw9IDcwMCkge1xuICAgICAgICBfdGhpcy53cmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRhaW5lci0tc2xpZGUnKTtcbiAgICAgICAgX3RoaXMudGFic1dyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZSgnd3JhcHBlci0taGlkZScpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxuICB0aGlzLnJldHVybi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPD0gNzAwKSB7XG4gICAgICBfdGhpcy53cmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2NvbnRhaW5lci0tc2xpZGUnKTtcbiAgICAgIF90aGlzLnRhYnNXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3dyYXBwZXItLWhpZGUnKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBUYXhvbm9teVRhYnM7XG5cbn0se31dLDc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX0hlYWRlciA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9IZWFkZXInKTtcblxudmFyIF9IZWFkZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfSGVhZGVyKTtcblxudmFyIF9SdWJyaWNzID0gcmVxdWlyZSgnLi9DbGFzc2VzL1J1YnJpY3MnKTtcblxudmFyIF9SdWJyaWNzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1J1YnJpY3MpO1xuXG52YXIgX1RheG9ub215VGFicyA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9UYXhvbm9teVRhYnMnKTtcblxudmFyIF9UYXhvbm9teVRhYnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVGF4b25vbXlUYWJzKTtcblxudmFyIF9Mb2FkTW9yZSA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9Mb2FkTW9yZScpO1xuXG52YXIgX0xvYWRNb3JlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0xvYWRNb3JlKTtcblxudmFyIF9SZXN1bHRzID0gcmVxdWlyZSgnLi9DbGFzc2VzL1Jlc3VsdHMnKTtcblxudmFyIF9SZXN1bHRzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1Jlc3VsdHMpO1xuXG52YXIgX1B1YmxpY2F0aW9ucyA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9QdWJsaWNhdGlvbnMnKTtcblxudmFyIF9QdWJsaWNhdGlvbnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUHVibGljYXRpb25zKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIGhlYWRlciA9IG5ldyBfSGVhZGVyMi5kZWZhdWx0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaXRlLWhlYWRlcicpKTtcblxuaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ob21lLXNlY3Rpb24ucnVicmljcycpKSB7XG4gIHZhciBob21lUnVicmljcyA9IG5ldyBfUnVicmljczIuZGVmYXVsdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaG9tZS1zZWN0aW9uLnJ1YnJpY3MnKSwgdHJ1ZSk7XG59XG5cbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGF4b25vbXlfX3JlbGF0ZWQnKSkge1xuICB2YXIgdGFicyA9IG5ldyBfVGF4b25vbXlUYWJzMi5kZWZhdWx0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXhvbm9teV9fcmVsYXRlZCcpKTtcbn1cblxuaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlLXJ1YnJpY3MnKSkge1xuICB2YXIgcGFnZVJ1YnJpY3MgPSBuZXcgX1J1YnJpY3MyLmRlZmF1bHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UtcnVicmljcycpLCBmYWxzZSk7XG59XG5cbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHVibGljYXRpb25fX2NvbnRhaW5lcicpKSB7XG4gIHZhciBsb2FkTW9yZSA9IG5ldyBfTG9hZE1vcmUyLmRlZmF1bHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnB1YmxpY2F0aW9uX19jb250YWluZXInKSk7XG59XG5cbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVzdWx0cycpKSB7XG4gIHZhciByZXN1bHRzID0gbmV3IF9SZXN1bHRzMi5kZWZhdWx0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRzJykpO1xufVxuXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnB1YmxpY2F0aW9ucycpKSB7XG4gIHZhciBwdWJsaWNhdGlvbnMgPSBuZXcgX1B1YmxpY2F0aW9uczIuZGVmYXVsdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHVibGljYXRpb25zJykpO1xuICBjb25zb2xlLmxvZyhwdWJsaWNhdGlvbnMpO1xufVxuXG59LHtcIi4vQ2xhc3Nlcy9IZWFkZXJcIjoxLFwiLi9DbGFzc2VzL0xvYWRNb3JlXCI6MixcIi4vQ2xhc3Nlcy9QdWJsaWNhdGlvbnNcIjozLFwiLi9DbGFzc2VzL1Jlc3VsdHNcIjo0LFwiLi9DbGFzc2VzL1J1YnJpY3NcIjo1LFwiLi9DbGFzc2VzL1RheG9ub215VGFic1wiOjZ9XSw4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTtcbn0se1wiLi9saWIvYXhpb3NcIjoxMH1dLDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuKGZ1bmN0aW9uIChwcm9jZXNzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHNldHRsZSA9IHJlcXVpcmUoJy4vLi4vY29yZS9zZXR0bGUnKTtcbnZhciBidWlsZFVSTCA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9idWlsZFVSTCcpO1xudmFyIHBhcnNlSGVhZGVycyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9wYXJzZUhlYWRlcnMnKTtcbnZhciBpc1VSTFNhbWVPcmlnaW4gPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luJyk7XG52YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCcuLi9jb3JlL2NyZWF0ZUVycm9yJyk7XG52YXIgYnRvYSA9ICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuYnRvYSAmJiB3aW5kb3cuYnRvYS5iaW5kKHdpbmRvdykpIHx8IHJlcXVpcmUoJy4vLi4vaGVscGVycy9idG9hJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24geGhyQWRhcHRlcihjb25maWcpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIGRpc3BhdGNoWGhyUmVxdWVzdChyZXNvbHZlLCByZWplY3QpIHtcbiAgICB2YXIgcmVxdWVzdERhdGEgPSBjb25maWcuZGF0YTtcbiAgICB2YXIgcmVxdWVzdEhlYWRlcnMgPSBjb25maWcuaGVhZGVycztcblxuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKHJlcXVlc3REYXRhKSkge1xuICAgICAgZGVsZXRlIHJlcXVlc3RIZWFkZXJzWydDb250ZW50LVR5cGUnXTsgLy8gTGV0IHRoZSBicm93c2VyIHNldCBpdFxuICAgIH1cblxuICAgIHZhciByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgdmFyIGxvYWRFdmVudCA9ICdvbnJlYWR5c3RhdGVjaGFuZ2UnO1xuICAgIHZhciB4RG9tYWluID0gZmFsc2U7XG5cbiAgICAvLyBGb3IgSUUgOC85IENPUlMgc3VwcG9ydFxuICAgIC8vIE9ubHkgc3VwcG9ydHMgUE9TVCBhbmQgR0VUIGNhbGxzIGFuZCBkb2Vzbid0IHJldHVybnMgdGhlIHJlc3BvbnNlIGhlYWRlcnMuXG4gICAgLy8gRE9OJ1QgZG8gdGhpcyBmb3IgdGVzdGluZyBiL2MgWE1MSHR0cFJlcXVlc3QgaXMgbW9ja2VkLCBub3QgWERvbWFpblJlcXVlc3QuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAndGVzdCcgJiZcbiAgICAgICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgd2luZG93LlhEb21haW5SZXF1ZXN0ICYmICEoJ3dpdGhDcmVkZW50aWFscycgaW4gcmVxdWVzdCkgJiZcbiAgICAgICAgIWlzVVJMU2FtZU9yaWdpbihjb25maWcudXJsKSkge1xuICAgICAgcmVxdWVzdCA9IG5ldyB3aW5kb3cuWERvbWFpblJlcXVlc3QoKTtcbiAgICAgIGxvYWRFdmVudCA9ICdvbmxvYWQnO1xuICAgICAgeERvbWFpbiA9IHRydWU7XG4gICAgICByZXF1ZXN0Lm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbiBoYW5kbGVQcm9ncmVzcygpIHt9O1xuICAgICAgcmVxdWVzdC5vbnRpbWVvdXQgPSBmdW5jdGlvbiBoYW5kbGVUaW1lb3V0KCkge307XG4gICAgfVxuXG4gICAgLy8gSFRUUCBiYXNpYyBhdXRoZW50aWNhdGlvblxuICAgIGlmIChjb25maWcuYXV0aCkge1xuICAgICAgdmFyIHVzZXJuYW1lID0gY29uZmlnLmF1dGgudXNlcm5hbWUgfHwgJyc7XG4gICAgICB2YXIgcGFzc3dvcmQgPSBjb25maWcuYXV0aC5wYXNzd29yZCB8fCAnJztcbiAgICAgIHJlcXVlc3RIZWFkZXJzLkF1dGhvcml6YXRpb24gPSAnQmFzaWMgJyArIGJ0b2EodXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCk7XG4gICAgfVxuXG4gICAgcmVxdWVzdC5vcGVuKGNvbmZpZy5tZXRob2QudG9VcHBlckNhc2UoKSwgYnVpbGRVUkwoY29uZmlnLnVybCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHJlYWR5IHN0YXRlXG4gICAgcmVxdWVzdFtsb2FkRXZlbnRdID0gZnVuY3Rpb24gaGFuZGxlTG9hZCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCB8fCAocmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0ICYmICF4RG9tYWluKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSByZXF1ZXN0IGVycm9yZWQgb3V0IGFuZCB3ZSBkaWRuJ3QgZ2V0IGEgcmVzcG9uc2UsIHRoaXMgd2lsbCBiZVxuICAgICAgLy8gaGFuZGxlZCBieSBvbmVycm9yIGluc3RlYWRcbiAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAvLyB3aWxsIHJldHVybiBzdGF0dXMgYXMgMCBldmVuIHRob3VnaCBpdCdzIGEgc3VjY2Vzc2Z1bCByZXF1ZXN0XG4gICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgIShyZXF1ZXN0LnJlc3BvbnNlVVJMICYmIHJlcXVlc3QucmVzcG9uc2VVUkwuaW5kZXhPZignZmlsZTonKSA9PT0gMCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIHRoZSByZXNwb25zZVxuICAgICAgdmFyIHJlc3BvbnNlSGVhZGVycyA9ICdnZXRBbGxSZXNwb25zZUhlYWRlcnMnIGluIHJlcXVlc3QgPyBwYXJzZUhlYWRlcnMocmVxdWVzdC5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkgOiBudWxsO1xuICAgICAgdmFyIHJlc3BvbnNlRGF0YSA9ICFjb25maWcucmVzcG9uc2VUeXBlIHx8IGNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICd0ZXh0JyA/IHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICAvLyBJRSBzZW5kcyAxMjIzIGluc3RlYWQgb2YgMjA0IChodHRwczovL2dpdGh1Yi5jb20vYXhpb3MvYXhpb3MvaXNzdWVzLzIwMSlcbiAgICAgICAgc3RhdHVzOiByZXF1ZXN0LnN0YXR1cyA9PT0gMTIyMyA/IDIwNCA6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1cyA9PT0gMTIyMyA/ICdObyBDb250ZW50JyA6IHJlcXVlc3Quc3RhdHVzVGV4dCxcbiAgICAgICAgaGVhZGVyczogcmVzcG9uc2VIZWFkZXJzLFxuICAgICAgICBjb25maWc6IGNvbmZpZyxcbiAgICAgICAgcmVxdWVzdDogcmVxdWVzdFxuICAgICAgfTtcblxuICAgICAgc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignTmV0d29yayBFcnJvcicsIGNvbmZpZywgbnVsbCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoJ3RpbWVvdXQgb2YgJyArIGNvbmZpZy50aW1lb3V0ICsgJ21zIGV4Y2VlZGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJyxcbiAgICAgICAgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gICAgLy8gVGhpcyBpcyBvbmx5IGRvbmUgaWYgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnQuXG4gICAgLy8gU3BlY2lmaWNhbGx5IG5vdCBpZiB3ZSdyZSBpbiBhIHdlYiB3b3JrZXIsIG9yIHJlYWN0LW5hdGl2ZS5cbiAgICBpZiAodXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSkge1xuICAgICAgdmFyIGNvb2tpZXMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvY29va2llcycpO1xuXG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIHZhciB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oY29uZmlnLnVybCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgICAgY29va2llcy5yZWFkKGNvbmZpZy54c3JmQ29va2llTmFtZSkgOlxuICAgICAgICAgIHVuZGVmaW5lZDtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICByZXF1ZXN0SGVhZGVyc1tjb25maWcueHNyZkhlYWRlck5hbWVdID0geHNyZlZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0XG4gICAgaWYgKCdzZXRSZXF1ZXN0SGVhZGVyJyBpbiByZXF1ZXN0KSB7XG4gICAgICB1dGlscy5mb3JFYWNoKHJlcXVlc3RIZWFkZXJzLCBmdW5jdGlvbiBzZXRSZXF1ZXN0SGVhZGVyKHZhbCwga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdERhdGEgPT09ICd1bmRlZmluZWQnICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC10eXBlJykge1xuICAgICAgICAgIC8vIFJlbW92ZSBDb250ZW50LVR5cGUgaWYgZGF0YSBpcyB1bmRlZmluZWRcbiAgICAgICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNba2V5XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2UgYWRkIGhlYWRlciB0byB0aGUgcmVxdWVzdFxuICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihrZXksIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEFkZCB3aXRoQ3JlZGVudGlhbHMgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoY29uZmlnLndpdGhDcmVkZW50aWFscykge1xuICAgICAgcmVxdWVzdC53aXRoQ3JlZGVudGlhbHMgPSB0cnVlO1xuICAgIH1cblxuICAgIC8vIEFkZCByZXNwb25zZVR5cGUgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBFeHBlY3RlZCBET01FeGNlcHRpb24gdGhyb3duIGJ5IGJyb3dzZXJzIG5vdCBjb21wYXRpYmxlIFhNTEh0dHBSZXF1ZXN0IExldmVsIDIuXG4gICAgICAgIC8vIEJ1dCwgdGhpcyBjYW4gYmUgc3VwcHJlc3NlZCBmb3IgJ2pzb24nIHR5cGUgYXMgaXQgY2FuIGJlIHBhcnNlZCBieSBkZWZhdWx0ICd0cmFuc2Zvcm1SZXNwb25zZScgZnVuY3Rpb24uXG4gICAgICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlICE9PSAnanNvbicpIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHByb2dyZXNzIGlmIG5lZWRlZFxuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25VcGxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgICAgLy8gSGFuZGxlIGNhbmNlbGxhdGlvblxuICAgICAgY29uZmlnLmNhbmNlbFRva2VuLnByb21pc2UudGhlbihmdW5jdGlvbiBvbkNhbmNlbGVkKGNhbmNlbCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXF1ZXN0LmFib3J0KCk7XG4gICAgICAgIHJlamVjdChjYW5jZWwpO1xuICAgICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHJlcXVlc3REYXRhID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlcXVlc3REYXRhID0gbnVsbDtcbiAgICB9XG5cbiAgICAvLyBTZW5kIHRoZSByZXF1ZXN0XG4gICAgcmVxdWVzdC5zZW5kKHJlcXVlc3REYXRhKTtcbiAgfSk7XG59O1xuXG59KS5jYWxsKHRoaXMscmVxdWlyZSgnX3Byb2Nlc3MnKSlcblxufSx7XCIuLi9jb3JlL2NyZWF0ZUVycm9yXCI6MTYsXCIuLy4uL2NvcmUvc2V0dGxlXCI6MTksXCIuLy4uL2hlbHBlcnMvYnRvYVwiOjIzLFwiLi8uLi9oZWxwZXJzL2J1aWxkVVJMXCI6MjQsXCIuLy4uL2hlbHBlcnMvY29va2llc1wiOjI2LFwiLi8uLi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpblwiOjI4LFwiLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVyc1wiOjMwLFwiLi8uLi91dGlsc1wiOjMyLFwiX3Byb2Nlc3NcIjozNH1dLDEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xudmFyIEF4aW9zID0gcmVxdWlyZSgnLi9jb3JlL0F4aW9zJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqIEByZXR1cm4ge0F4aW9zfSBBIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICovXG5mdW5jdGlvbiBjcmVhdGVJbnN0YW5jZShkZWZhdWx0Q29uZmlnKSB7XG4gIHZhciBjb250ZXh0ID0gbmV3IEF4aW9zKGRlZmF1bHRDb25maWcpO1xuICB2YXIgaW5zdGFuY2UgPSBiaW5kKEF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0LCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGF4aW9zLnByb3RvdHlwZSB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIEF4aW9zLnByb3RvdHlwZSwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBjb250ZXh0IHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgY29udGV4dCk7XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbnZhciBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBGYWN0b3J5IGZvciBjcmVhdGluZyBuZXcgaW5zdGFuY2VzXG5heGlvcy5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaW5zdGFuY2VDb25maWcpIHtcbiAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKHV0aWxzLm1lcmdlKGRlZmF1bHRzLCBpbnN0YW5jZUNvbmZpZykpO1xufTtcblxuLy8gRXhwb3NlIENhbmNlbCAmIENhbmNlbFRva2VuXG5heGlvcy5DYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWwnKTtcbmF4aW9zLkNhbmNlbFRva2VuID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsVG9rZW4nKTtcbmF4aW9zLmlzQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvaXNDYW5jZWwnKTtcblxuLy8gRXhwb3NlIGFsbC9zcHJlYWRcbmF4aW9zLmFsbCA9IGZ1bmN0aW9uIGFsbChwcm9taXNlcykge1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufTtcbmF4aW9zLnNwcmVhZCA9IHJlcXVpcmUoJy4vaGVscGVycy9zcHJlYWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBheGlvcztcblxuLy8gQWxsb3cgdXNlIG9mIGRlZmF1bHQgaW1wb3J0IHN5bnRheCBpbiBUeXBlU2NyaXB0XG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gYXhpb3M7XG5cbn0se1wiLi9jYW5jZWwvQ2FuY2VsXCI6MTEsXCIuL2NhbmNlbC9DYW5jZWxUb2tlblwiOjEyLFwiLi9jYW5jZWwvaXNDYW5jZWxcIjoxMyxcIi4vY29yZS9BeGlvc1wiOjE0LFwiLi9kZWZhdWx0c1wiOjIxLFwiLi9oZWxwZXJzL2JpbmRcIjoyMixcIi4vaGVscGVycy9zcHJlYWRcIjozMSxcIi4vdXRpbHNcIjozMn1dLDExOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuXG59LHt9XSwxMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuXG59LHtcIi4vQ2FuY2VsXCI6MTF9XSwxMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufTtcblxufSx7fV0sMTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLy4uL2RlZmF1bHRzJyk7XG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gdXRpbHMubWVyZ2Uoe1xuICAgICAgdXJsOiBhcmd1bWVudHNbMF1cbiAgICB9LCBhcmd1bWVudHNbMV0pO1xuICB9XG5cbiAgY29uZmlnID0gdXRpbHMubWVyZ2UoZGVmYXVsdHMsIHttZXRob2Q6ICdnZXQnfSwgdGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKTtcblxuICAvLyBIb29rIHVwIGludGVyY2VwdG9ycyBtaWRkbGV3YXJlXG4gIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG4gIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbiBwdXNoUmVzcG9uc2VJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXRpbHMubWVyZ2UoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBkYXRhLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KHV0aWxzLm1lcmdlKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IGRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBeGlvcztcblxufSx7XCIuLy4uL2RlZmF1bHRzXCI6MjEsXCIuLy4uL3V0aWxzXCI6MzIsXCIuL0ludGVyY2VwdG9yTWFuYWdlclwiOjE1LFwiLi9kaXNwYXRjaFJlcXVlc3RcIjoxN31dLDE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG5cbn0se1wiLi8uLi91dGlsc1wiOjMyfV0sMTY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW5oYW5jZUVycm9yID0gcmVxdWlyZSgnLi9lbmhhbmNlRXJyb3InKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlRXJyb3IobWVzc2FnZSwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIHJldHVybiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpO1xufTtcblxufSx7XCIuL2VuaGFuY2VFcnJvclwiOjE4fV0sMTc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgdHJhbnNmb3JtRGF0YSA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtRGF0YScpO1xudmFyIGlzQ2FuY2VsID0gcmVxdWlyZSgnLi4vY2FuY2VsL2lzQ2FuY2VsJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xudmFyIGlzQWJzb2x1dGVVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2NvbWJpbmVVUkxzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gU3VwcG9ydCBiYXNlVVJMIGNvbmZpZ1xuICBpZiAoY29uZmlnLmJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwoY29uZmlnLnVybCkpIHtcbiAgICBjb25maWcudXJsID0gY29tYmluZVVSTHMoY29uZmlnLmJhc2VVUkwsIGNvbmZpZy51cmwpO1xuICB9XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVycyB8fCB7fVxuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG5cbn0se1wiLi4vY2FuY2VsL2lzQ2FuY2VsXCI6MTMsXCIuLi9kZWZhdWx0c1wiOjIxLFwiLi8uLi9oZWxwZXJzL2NvbWJpbmVVUkxzXCI6MjUsXCIuLy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTFwiOjI3LFwiLi8uLi91dGlsc1wiOjMyLFwiLi90cmFuc2Zvcm1EYXRhXCI6MjB9XSwxODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXBkYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBjb25maWcsIGVycm9yIGNvZGUsIGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBUaGUgZXJyb3IgdG8gdXBkYXRlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgZXJyb3IuY29uZmlnID0gY29uZmlnO1xuICBpZiAoY29kZSkge1xuICAgIGVycm9yLmNvZGUgPSBjb2RlO1xuICB9XG4gIGVycm9yLnJlcXVlc3QgPSByZXF1ZXN0O1xuICBlcnJvci5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICByZXR1cm4gZXJyb3I7XG59O1xuXG59LHt9XSwxOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4vY3JlYXRlRXJyb3InKTtcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICB2YXIgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIC8vIE5vdGU6IHN0YXR1cyBpcyBub3QgZXhwb3NlZCBieSBYRG9tYWluUmVxdWVzdFxuICBpZiAoIXJlc3BvbnNlLnN0YXR1cyB8fCAhdmFsaWRhdGVTdGF0dXMgfHwgdmFsaWRhdGVTdGF0dXMocmVzcG9uc2Uuc3RhdHVzKSkge1xuICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICB9IGVsc2Uge1xuICAgIHJlamVjdChjcmVhdGVFcnJvcihcbiAgICAgICdSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlICcgKyByZXNwb25zZS5zdGF0dXMsXG4gICAgICByZXNwb25zZS5jb25maWcsXG4gICAgICBudWxsLFxuICAgICAgcmVzcG9uc2UucmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlXG4gICAgKSk7XG4gIH1cbn07XG5cbn0se1wiLi9jcmVhdGVFcnJvclwiOjE2fV0sMjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuXG59LHtcIi4vLi4vdXRpbHNcIjozMn1dLDIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBub3JtYWxpemVIZWFkZXJOYW1lID0gcmVxdWlyZSgnLi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUnKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG52YXIgZGVmYXVsdHMgPSB7XG4gIGFkYXB0ZXI6IGdldERlZmF1bHRBZGFwdGVyKCksXG5cbiAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlcXVlc3QoZGF0YSwgaGVhZGVycykge1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScpO1xuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0FycmF5QnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0J1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNTdHJlYW0oZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzRmlsZShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCbG9iKGRhdGEpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXJWaWV3KGRhdGEpKSB7XG4gICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7IC8qIElnbm9yZSAqLyB9XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICAvKipcbiAgICogQSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byBhYm9ydCBhIHJlcXVlc3QuIElmIHNldCB0byAwIChkZWZhdWx0KSBhXG4gICAqIHRpbWVvdXQgaXMgbm90IGNyZWF0ZWQuXG4gICAqL1xuICB0aW1lb3V0OiAwLFxuXG4gIHhzcmZDb29raWVOYW1lOiAnWFNSRi1UT0tFTicsXG4gIHhzcmZIZWFkZXJOYW1lOiAnWC1YU1JGLVRPS0VOJyxcblxuICBtYXhDb250ZW50TGVuZ3RoOiAtMSxcblxuICB2YWxpZGF0ZVN0YXR1czogZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXMoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwO1xuICB9XG59O1xuXG5kZWZhdWx0cy5oZWFkZXJzID0ge1xuICBjb21tb246IHtcbiAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKidcbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB7fTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB1dGlscy5tZXJnZShERUZBVUxUX0NPTlRFTlRfVFlQRSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0cztcblxufSkuY2FsbCh0aGlzLHJlcXVpcmUoJ19wcm9jZXNzJykpXG5cbn0se1wiLi9hZGFwdGVycy9odHRwXCI6OSxcIi4vYWRhcHRlcnMveGhyXCI6OSxcIi4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lXCI6MjksXCIuL3V0aWxzXCI6MzIsXCJfcHJvY2Vzc1wiOjM0fV0sMjI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuXG59LHt9XSwyMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8vIGJ0b2EgcG9seWZpbGwgZm9yIElFPDEwIGNvdXJ0ZXN5IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXZpZGNoYW1iZXJzL0Jhc2U2NC5qc1xuXG52YXIgY2hhcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nO1xuXG5mdW5jdGlvbiBFKCkge1xuICB0aGlzLm1lc3NhZ2UgPSAnU3RyaW5nIGNvbnRhaW5zIGFuIGludmFsaWQgY2hhcmFjdGVyJztcbn1cbkUucHJvdG90eXBlID0gbmV3IEVycm9yO1xuRS5wcm90b3R5cGUuY29kZSA9IDU7XG5FLnByb3RvdHlwZS5uYW1lID0gJ0ludmFsaWRDaGFyYWN0ZXJFcnJvcic7XG5cbmZ1bmN0aW9uIGJ0b2EoaW5wdXQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhpbnB1dCk7XG4gIHZhciBvdXRwdXQgPSAnJztcbiAgZm9yIChcbiAgICAvLyBpbml0aWFsaXplIHJlc3VsdCBhbmQgY291bnRlclxuICAgIHZhciBibG9jaywgY2hhckNvZGUsIGlkeCA9IDAsIG1hcCA9IGNoYXJzO1xuICAgIC8vIGlmIHRoZSBuZXh0IHN0ciBpbmRleCBkb2VzIG5vdCBleGlzdDpcbiAgICAvLyAgIGNoYW5nZSB0aGUgbWFwcGluZyB0YWJsZSB0byBcIj1cIlxuICAgIC8vICAgY2hlY2sgaWYgZCBoYXMgbm8gZnJhY3Rpb25hbCBkaWdpdHNcbiAgICBzdHIuY2hhckF0KGlkeCB8IDApIHx8IChtYXAgPSAnPScsIGlkeCAlIDEpO1xuICAgIC8vIFwiOCAtIGlkeCAlIDEgKiA4XCIgZ2VuZXJhdGVzIHRoZSBzZXF1ZW5jZSAyLCA0LCA2LCA4XG4gICAgb3V0cHV0ICs9IG1hcC5jaGFyQXQoNjMgJiBibG9jayA+PiA4IC0gaWR4ICUgMSAqIDgpXG4gICkge1xuICAgIGNoYXJDb2RlID0gc3RyLmNoYXJDb2RlQXQoaWR4ICs9IDMgLyA0KTtcbiAgICBpZiAoY2hhckNvZGUgPiAweEZGKSB7XG4gICAgICB0aHJvdyBuZXcgRSgpO1xuICAgIH1cbiAgICBibG9jayA9IGJsb2NrIDw8IDggfCBjaGFyQ29kZTtcbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ0b2E7XG5cbn0se31dLDI0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBlbmNvZGUodmFsKSB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodmFsKS5cbiAgICByZXBsYWNlKC8lNDAvZ2ksICdAJykuXG4gICAgcmVwbGFjZSgvJTNBL2dpLCAnOicpLlxuICAgIHJlcGxhY2UoLyUyNC9nLCAnJCcpLlxuICAgIHJlcGxhY2UoLyUyQy9naSwgJywnKS5cbiAgICByZXBsYWNlKC8lMjAvZywgJysnKS5cbiAgICByZXBsYWNlKC8lNUIvZ2ksICdbJykuXG4gICAgcmVwbGFjZSgvJTVEL2dpLCAnXScpO1xufVxuXG4vKipcbiAqIEJ1aWxkIGEgVVJMIGJ5IGFwcGVuZGluZyBwYXJhbXMgdG8gdGhlIGVuZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIGJhc2Ugb2YgdGhlIHVybCAoZS5nLiwgaHR0cDovL3d3dy5nb29nbGUuY29tKVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIFRoZSBwYXJhbXMgdG8gYmUgYXBwZW5kZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkUGFyYW1zO1xuICBpZiAocGFyYW1zU2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXNTZXJpYWxpemVyKHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSkge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFydHMgPSBbXTtcblxuICAgIHV0aWxzLmZvckVhY2gocGFyYW1zLCBmdW5jdGlvbiBzZXJpYWxpemUodmFsLCBrZXkpIHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodXRpbHMuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIGtleSA9IGtleSArICdbXSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWwgPSBbdmFsXTtcbiAgICAgIH1cblxuICAgICAgdXRpbHMuZm9yRWFjaCh2YWwsIGZ1bmN0aW9uIHBhcnNlVmFsdWUodikge1xuICAgICAgICBpZiAodXRpbHMuaXNEYXRlKHYpKSB7XG4gICAgICAgICAgdiA9IHYudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdCh2KSkge1xuICAgICAgICAgIHYgPSBKU09OLnN0cmluZ2lmeSh2KTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0cy5wdXNoKGVuY29kZShrZXkpICsgJz0nICsgZW5jb2RlKHYpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcnRzLmpvaW4oJyYnKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG5cbn0se1wiLi8uLi91dGlsc1wiOjMyfV0sMjU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgc3BlY2lmaWVkIFVSTHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGl2ZVVSTCBUaGUgcmVsYXRpdmUgVVJMXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgVVJMXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVsYXRpdmVVUkwpIHtcbiAgcmV0dXJuIHJlbGF0aXZlVVJMXG4gICAgPyBiYXNlVVJMLnJlcGxhY2UoL1xcLyskLywgJycpICsgJy8nICsgcmVsYXRpdmVVUkwucmVwbGFjZSgvXlxcLysvLCAnJylcbiAgICA6IGJhc2VVUkw7XG59O1xuXG59LHt9XSwyNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHJldHVybiB7XG4gICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgIGlmICh1dGlscy5pc051bWJlcihleHBpcmVzKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhwYXRoKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhkb21haW4pKSB7XG4gICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzZWN1cmUgPT09IHRydWUpIHtcbiAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICAgIH0sXG5cbiAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICB2YXIgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgfSxcblxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgfVxuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9KSgpXG4pO1xuXG59LHtcIi4vLi4vdXRpbHNcIjozMn1dLDI3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuXG59LHt9XSwyODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBoYXZlIGZ1bGwgc3VwcG9ydCBvZiB0aGUgQVBJcyBuZWVkZWQgdG8gdGVzdFxuICAvLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgfVxuXG4gICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICB9O1xuICAgIH1cblxuICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgLyoqXG4gICAgKiBEZXRlcm1pbmUgaWYgYSBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgY3VycmVudCBsb2NhdGlvblxuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0VVJMIFRoZSBVUkwgdG8gdGVzdFxuICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4sIG90aGVyd2lzZSBmYWxzZVxuICAgICovXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7XG4gICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgcmV0dXJuIChwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJlxuICAgICAgICAgICAgcGFyc2VkLmhvc3QgPT09IG9yaWdpblVSTC5ob3N0KTtcbiAgICB9O1xuICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICB9KSgpXG4pO1xuXG59LHtcIi4vLi4vdXRpbHNcIjozMn1dLDI5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcblxufSx7XCIuLi91dGlsc1wiOjMyfV0sMzA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcblxufSx7XCIuLy4uL3V0aWxzXCI6MzJ9XSwzMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG5cbn0se31dLDMyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xudmFyIGlzQnVmZmVyID0gcmVxdWlyZSgnaXMtYnVmZmVyJyk7XG5cbi8qZ2xvYmFsIHRvU3RyaW5nOnRydWUqL1xuXG4vLyB1dGlscyBpcyBhIGxpYnJhcnkgb2YgZ2VuZXJpYyBoZWxwZXIgZnVuY3Rpb25zIG5vbi1zcGVjaWZpYyB0byBheGlvc1xuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXksIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5KHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRm9ybURhdGFcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBGb3JtRGF0YSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRm9ybURhdGEodmFsKSB7XG4gIHJldHVybiAodHlwZW9mIEZvcm1EYXRhICE9PSAndW5kZWZpbmVkJykgJiYgKHZhbCBpbnN0YW5jZW9mIEZvcm1EYXRhKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyh2YWwpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKCh0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnKSAmJiAoQXJyYXlCdWZmZXIuaXNWaWV3KSkge1xuICAgIHJlc3VsdCA9IEFycmF5QnVmZmVyLmlzVmlldyh2YWwpO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9ICh2YWwpICYmICh2YWwuYnVmZmVyKSAmJiAodmFsLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyaW5nXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJpbmcsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgTnVtYmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBOdW1iZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc051bWJlcih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIHVuZGVmaW5lZFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSB2YWx1ZSBpcyB1bmRlZmluZWQsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRGF0ZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRGF0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRGF0ZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRmlsZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRmlsZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRmlsZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRmlsZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgQmxvYlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQmxvYiwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQmxvYih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQmxvYl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEZ1bmN0aW9uLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmVhbVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyZWFtLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJlYW0odmFsKSB7XG4gIHJldHVybiBpc09iamVjdCh2YWwpICYmIGlzRnVuY3Rpb24odmFsLnBpcGUpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVVJMU2VhcmNoUGFyYW1zKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsIGluc3RhbmNlb2YgVVJMU2VhcmNoUGFyYW1zO1xufVxuXG4vKipcbiAqIFRyaW0gZXhjZXNzIHdoaXRlc3BhY2Ugb2ZmIHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiBhIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIFN0cmluZyB0byB0cmltXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgU3RyaW5nIGZyZWVkIG9mIGV4Y2VzcyB3aGl0ZXNwYWNlXG4gKi9cbmZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXlxccyovLCAnJykucmVwbGFjZSgvXFxzKiQvLCAnJyk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICovXG5mdW5jdGlvbiBpc1N0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiByZXN1bHRba2V5XSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBFeHRlbmRzIG9iamVjdCBhIGJ5IG11dGFibHkgYWRkaW5nIHRvIGl0IHRoZSBwcm9wZXJ0aWVzIG9mIG9iamVjdCBiLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhIFRoZSBvYmplY3QgdG8gYmUgZXh0ZW5kZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBiIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb21cbiAqIEBwYXJhbSB7T2JqZWN0fSB0aGlzQXJnIFRoZSBvYmplY3QgdG8gYmluZCBmdW5jdGlvbiB0b1xuICogQHJldHVybiB7T2JqZWN0fSBUaGUgcmVzdWx0aW5nIHZhbHVlIG9mIG9iamVjdCBhXG4gKi9cbmZ1bmN0aW9uIGV4dGVuZChhLCBiLCB0aGlzQXJnKSB7XG4gIGZvckVhY2goYiwgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAodGhpc0FyZyAmJiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhW2tleV0gPSBiaW5kKHZhbCwgdGhpc0FyZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFba2V5XSA9IHZhbDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gYTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzQXJyYXk6IGlzQXJyYXksXG4gIGlzQXJyYXlCdWZmZXI6IGlzQXJyYXlCdWZmZXIsXG4gIGlzQnVmZmVyOiBpc0J1ZmZlcixcbiAgaXNGb3JtRGF0YTogaXNGb3JtRGF0YSxcbiAgaXNBcnJheUJ1ZmZlclZpZXc6IGlzQXJyYXlCdWZmZXJWaWV3LFxuICBpc1N0cmluZzogaXNTdHJpbmcsXG4gIGlzTnVtYmVyOiBpc051bWJlcixcbiAgaXNPYmplY3Q6IGlzT2JqZWN0LFxuICBpc1VuZGVmaW5lZDogaXNVbmRlZmluZWQsXG4gIGlzRGF0ZTogaXNEYXRlLFxuICBpc0ZpbGU6IGlzRmlsZSxcbiAgaXNCbG9iOiBpc0Jsb2IsXG4gIGlzRnVuY3Rpb246IGlzRnVuY3Rpb24sXG4gIGlzU3RyZWFtOiBpc1N0cmVhbSxcbiAgaXNVUkxTZWFyY2hQYXJhbXM6IGlzVVJMU2VhcmNoUGFyYW1zLFxuICBpc1N0YW5kYXJkQnJvd3NlckVudjogaXNTdGFuZGFyZEJyb3dzZXJFbnYsXG4gIGZvckVhY2g6IGZvckVhY2gsXG4gIG1lcmdlOiBtZXJnZSxcbiAgZXh0ZW5kOiBleHRlbmQsXG4gIHRyaW06IHRyaW1cbn07XG5cbn0se1wiLi9oZWxwZXJzL2JpbmRcIjoyMixcImlzLWJ1ZmZlclwiOjMzfV0sMzM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuLyohXG4gKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIGEgQnVmZmVyXG4gKlxuICogQGF1dGhvciAgIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuXG4vLyBUaGUgX2lzQnVmZmVyIGNoZWNrIGlzIGZvciBTYWZhcmkgNS03IHN1cHBvcnQsIGJlY2F1c2UgaXQncyBtaXNzaW5nXG4vLyBPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yLiBSZW1vdmUgdGhpcyBldmVudHVhbGx5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPSBudWxsICYmIChpc0J1ZmZlcihvYmopIHx8IGlzU2xvd0J1ZmZlcihvYmopIHx8ICEhb2JqLl9pc0J1ZmZlcilcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKG9iaikge1xuICByZXR1cm4gISFvYmouY29uc3RydWN0b3IgJiYgdHlwZW9mIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKVxufVxuXG4vLyBGb3IgTm9kZSB2MC4xMCBzdXBwb3J0LiBSZW1vdmUgdGhpcyBldmVudHVhbGx5LlxuZnVuY3Rpb24gaXNTbG93QnVmZmVyIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmoucmVhZEZsb2F0TEUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG9iai5zbGljZSA9PT0gJ2Z1bmN0aW9uJyAmJiBpc0J1ZmZlcihvYmouc2xpY2UoMCwgMCkpXG59XG5cbn0se31dLDM0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG5cbn0se31dLDM1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHJlcGxhY2UgPSBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2U7XG52YXIgcGVyY2VudFR3ZW50aWVzID0gLyUyMC9nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAnZGVmYXVsdCc6ICdSRkMzOTg2JyxcbiAgICBmb3JtYXR0ZXJzOiB7XG4gICAgICAgIFJGQzE3Mzg6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlcGxhY2UuY2FsbCh2YWx1ZSwgcGVyY2VudFR3ZW50aWVzLCAnKycpO1xuICAgICAgICB9LFxuICAgICAgICBSRkMzOTg2OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgUkZDMTczODogJ1JGQzE3MzgnLFxuICAgIFJGQzM5ODY6ICdSRkMzOTg2J1xufTtcblxufSx7fV0sMzY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9zdHJpbmdpZnknKTtcbnZhciBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKTtcbnZhciBmb3JtYXRzID0gcmVxdWlyZSgnLi9mb3JtYXRzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGZvcm1hdHM6IGZvcm1hdHMsXG4gICAgcGFyc2U6IHBhcnNlLFxuICAgIHN0cmluZ2lmeTogc3RyaW5naWZ5XG59O1xuXG59LHtcIi4vZm9ybWF0c1wiOjM1LFwiLi9wYXJzZVwiOjM3LFwiLi9zdHJpbmdpZnlcIjozOH1dLDM3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIGRlZmF1bHRzID0ge1xuICAgIGFsbG93RG90czogZmFsc2UsXG4gICAgYWxsb3dQcm90b3R5cGVzOiBmYWxzZSxcbiAgICBhcnJheUxpbWl0OiAyMCxcbiAgICBkZWNvZGVyOiB1dGlscy5kZWNvZGUsXG4gICAgZGVsaW1pdGVyOiAnJicsXG4gICAgZGVwdGg6IDUsXG4gICAgcGFyYW1ldGVyTGltaXQ6IDEwMDAsXG4gICAgcGxhaW5PYmplY3RzOiBmYWxzZSxcbiAgICBzdHJpY3ROdWxsSGFuZGxpbmc6IGZhbHNlXG59O1xuXG52YXIgcGFyc2VWYWx1ZXMgPSBmdW5jdGlvbiBwYXJzZVF1ZXJ5U3RyaW5nVmFsdWVzKHN0ciwgb3B0aW9ucykge1xuICAgIHZhciBvYmogPSB7fTtcbiAgICB2YXIgY2xlYW5TdHIgPSBvcHRpb25zLmlnbm9yZVF1ZXJ5UHJlZml4ID8gc3RyLnJlcGxhY2UoL15cXD8vLCAnJykgOiBzdHI7XG4gICAgdmFyIGxpbWl0ID0gb3B0aW9ucy5wYXJhbWV0ZXJMaW1pdCA9PT0gSW5maW5pdHkgPyB1bmRlZmluZWQgOiBvcHRpb25zLnBhcmFtZXRlckxpbWl0O1xuICAgIHZhciBwYXJ0cyA9IGNsZWFuU3RyLnNwbGl0KG9wdGlvbnMuZGVsaW1pdGVyLCBsaW1pdCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBwYXJ0ID0gcGFydHNbaV07XG5cbiAgICAgICAgdmFyIGJyYWNrZXRFcXVhbHNQb3MgPSBwYXJ0LmluZGV4T2YoJ109Jyk7XG4gICAgICAgIHZhciBwb3MgPSBicmFja2V0RXF1YWxzUG9zID09PSAtMSA/IHBhcnQuaW5kZXhPZignPScpIDogYnJhY2tldEVxdWFsc1BvcyArIDE7XG5cbiAgICAgICAgdmFyIGtleSwgdmFsO1xuICAgICAgICBpZiAocG9zID09PSAtMSkge1xuICAgICAgICAgICAga2V5ID0gb3B0aW9ucy5kZWNvZGVyKHBhcnQsIGRlZmF1bHRzLmRlY29kZXIpO1xuICAgICAgICAgICAgdmFsID0gb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPyBudWxsIDogJyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBrZXkgPSBvcHRpb25zLmRlY29kZXIocGFydC5zbGljZSgwLCBwb3MpLCBkZWZhdWx0cy5kZWNvZGVyKTtcbiAgICAgICAgICAgIHZhbCA9IG9wdGlvbnMuZGVjb2RlcihwYXJ0LnNsaWNlKHBvcyArIDEpLCBkZWZhdWx0cy5kZWNvZGVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaGFzLmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICBvYmpba2V5XSA9IFtdLmNvbmNhdChvYmpba2V5XSkuY29uY2F0KHZhbCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmpba2V5XSA9IHZhbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBvYmo7XG59O1xuXG52YXIgcGFyc2VPYmplY3QgPSBmdW5jdGlvbiAoY2hhaW4sIHZhbCwgb3B0aW9ucykge1xuICAgIHZhciBsZWFmID0gdmFsO1xuXG4gICAgZm9yICh2YXIgaSA9IGNoYWluLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBvYmo7XG4gICAgICAgIHZhciByb290ID0gY2hhaW5baV07XG5cbiAgICAgICAgaWYgKHJvb3QgPT09ICdbXScpIHtcbiAgICAgICAgICAgIG9iaiA9IFtdO1xuICAgICAgICAgICAgb2JqID0gb2JqLmNvbmNhdChsZWFmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iaiA9IG9wdGlvbnMucGxhaW5PYmplY3RzID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IHt9O1xuICAgICAgICAgICAgdmFyIGNsZWFuUm9vdCA9IHJvb3QuY2hhckF0KDApID09PSAnWycgJiYgcm9vdC5jaGFyQXQocm9vdC5sZW5ndGggLSAxKSA9PT0gJ10nID8gcm9vdC5zbGljZSgxLCAtMSkgOiByb290O1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gcGFyc2VJbnQoY2xlYW5Sb290LCAxMCk7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgIWlzTmFOKGluZGV4KVxuICAgICAgICAgICAgICAgICYmIHJvb3QgIT09IGNsZWFuUm9vdFxuICAgICAgICAgICAgICAgICYmIFN0cmluZyhpbmRleCkgPT09IGNsZWFuUm9vdFxuICAgICAgICAgICAgICAgICYmIGluZGV4ID49IDBcbiAgICAgICAgICAgICAgICAmJiAob3B0aW9ucy5wYXJzZUFycmF5cyAmJiBpbmRleCA8PSBvcHRpb25zLmFycmF5TGltaXQpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBvYmogPSBbXTtcbiAgICAgICAgICAgICAgICBvYmpbaW5kZXhdID0gbGVhZjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgb2JqW2NsZWFuUm9vdF0gPSBsZWFmO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbGVhZiA9IG9iajtcbiAgICB9XG5cbiAgICByZXR1cm4gbGVhZjtcbn07XG5cbnZhciBwYXJzZUtleXMgPSBmdW5jdGlvbiBwYXJzZVF1ZXJ5U3RyaW5nS2V5cyhnaXZlbktleSwgdmFsLCBvcHRpb25zKSB7XG4gICAgaWYgKCFnaXZlbktleSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVHJhbnNmb3JtIGRvdCBub3RhdGlvbiB0byBicmFja2V0IG5vdGF0aW9uXG4gICAgdmFyIGtleSA9IG9wdGlvbnMuYWxsb3dEb3RzID8gZ2l2ZW5LZXkucmVwbGFjZSgvXFwuKFteLltdKykvZywgJ1skMV0nKSA6IGdpdmVuS2V5O1xuXG4gICAgLy8gVGhlIHJlZ2V4IGNodW5rc1xuXG4gICAgdmFyIGJyYWNrZXRzID0gLyhcXFtbXltcXF1dKl0pLztcbiAgICB2YXIgY2hpbGQgPSAvKFxcW1teW1xcXV0qXSkvZztcblxuICAgIC8vIEdldCB0aGUgcGFyZW50XG5cbiAgICB2YXIgc2VnbWVudCA9IGJyYWNrZXRzLmV4ZWMoa2V5KTtcbiAgICB2YXIgcGFyZW50ID0gc2VnbWVudCA/IGtleS5zbGljZSgwLCBzZWdtZW50LmluZGV4KSA6IGtleTtcblxuICAgIC8vIFN0YXNoIHRoZSBwYXJlbnQgaWYgaXQgZXhpc3RzXG5cbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgLy8gSWYgd2UgYXJlbid0IHVzaW5nIHBsYWluIG9iamVjdHMsIG9wdGlvbmFsbHkgcHJlZml4IGtleXNcbiAgICAgICAgLy8gdGhhdCB3b3VsZCBvdmVyd3JpdGUgb2JqZWN0IHByb3RvdHlwZSBwcm9wZXJ0aWVzXG4gICAgICAgIGlmICghb3B0aW9ucy5wbGFpbk9iamVjdHMgJiYgaGFzLmNhbGwoT2JqZWN0LnByb3RvdHlwZSwgcGFyZW50KSkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmFsbG93UHJvdG90eXBlcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGtleXMucHVzaChwYXJlbnQpO1xuICAgIH1cblxuICAgIC8vIExvb3AgdGhyb3VnaCBjaGlsZHJlbiBhcHBlbmRpbmcgdG8gdGhlIGFycmF5IHVudGlsIHdlIGhpdCBkZXB0aFxuXG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlICgoc2VnbWVudCA9IGNoaWxkLmV4ZWMoa2V5KSkgIT09IG51bGwgJiYgaSA8IG9wdGlvbnMuZGVwdGgpIHtcbiAgICAgICAgaSArPSAxO1xuICAgICAgICBpZiAoIW9wdGlvbnMucGxhaW5PYmplY3RzICYmIGhhcy5jYWxsKE9iamVjdC5wcm90b3R5cGUsIHNlZ21lbnRbMV0uc2xpY2UoMSwgLTEpKSkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmFsbG93UHJvdG90eXBlcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBrZXlzLnB1c2goc2VnbWVudFsxXSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhlcmUncyBhIHJlbWFpbmRlciwganVzdCBhZGQgd2hhdGV2ZXIgaXMgbGVmdFxuXG4gICAgaWYgKHNlZ21lbnQpIHtcbiAgICAgICAga2V5cy5wdXNoKCdbJyArIGtleS5zbGljZShzZWdtZW50LmluZGV4KSArICddJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcnNlT2JqZWN0KGtleXMsIHZhbCwgb3B0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIsIG9wdHMpIHtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgPyB1dGlscy5hc3NpZ24oe30sIG9wdHMpIDoge307XG5cbiAgICBpZiAob3B0aW9ucy5kZWNvZGVyICE9PSBudWxsICYmIG9wdGlvbnMuZGVjb2RlciAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmRlY29kZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRGVjb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBvcHRpb25zLmlnbm9yZVF1ZXJ5UHJlZml4ID0gb3B0aW9ucy5pZ25vcmVRdWVyeVByZWZpeCA9PT0gdHJ1ZTtcbiAgICBvcHRpb25zLmRlbGltaXRlciA9IHR5cGVvZiBvcHRpb25zLmRlbGltaXRlciA9PT0gJ3N0cmluZycgfHwgdXRpbHMuaXNSZWdFeHAob3B0aW9ucy5kZWxpbWl0ZXIpID8gb3B0aW9ucy5kZWxpbWl0ZXIgOiBkZWZhdWx0cy5kZWxpbWl0ZXI7XG4gICAgb3B0aW9ucy5kZXB0aCA9IHR5cGVvZiBvcHRpb25zLmRlcHRoID09PSAnbnVtYmVyJyA/IG9wdGlvbnMuZGVwdGggOiBkZWZhdWx0cy5kZXB0aDtcbiAgICBvcHRpb25zLmFycmF5TGltaXQgPSB0eXBlb2Ygb3B0aW9ucy5hcnJheUxpbWl0ID09PSAnbnVtYmVyJyA/IG9wdGlvbnMuYXJyYXlMaW1pdCA6IGRlZmF1bHRzLmFycmF5TGltaXQ7XG4gICAgb3B0aW9ucy5wYXJzZUFycmF5cyA9IG9wdGlvbnMucGFyc2VBcnJheXMgIT09IGZhbHNlO1xuICAgIG9wdGlvbnMuZGVjb2RlciA9IHR5cGVvZiBvcHRpb25zLmRlY29kZXIgPT09ICdmdW5jdGlvbicgPyBvcHRpb25zLmRlY29kZXIgOiBkZWZhdWx0cy5kZWNvZGVyO1xuICAgIG9wdGlvbnMuYWxsb3dEb3RzID0gdHlwZW9mIG9wdGlvbnMuYWxsb3dEb3RzID09PSAnYm9vbGVhbicgPyBvcHRpb25zLmFsbG93RG90cyA6IGRlZmF1bHRzLmFsbG93RG90cztcbiAgICBvcHRpb25zLnBsYWluT2JqZWN0cyA9IHR5cGVvZiBvcHRpb25zLnBsYWluT2JqZWN0cyA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5wbGFpbk9iamVjdHMgOiBkZWZhdWx0cy5wbGFpbk9iamVjdHM7XG4gICAgb3B0aW9ucy5hbGxvd1Byb3RvdHlwZXMgPSB0eXBlb2Ygb3B0aW9ucy5hbGxvd1Byb3RvdHlwZXMgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuYWxsb3dQcm90b3R5cGVzIDogZGVmYXVsdHMuYWxsb3dQcm90b3R5cGVzO1xuICAgIG9wdGlvbnMucGFyYW1ldGVyTGltaXQgPSB0eXBlb2Ygb3B0aW9ucy5wYXJhbWV0ZXJMaW1pdCA9PT0gJ251bWJlcicgPyBvcHRpb25zLnBhcmFtZXRlckxpbWl0IDogZGVmYXVsdHMucGFyYW1ldGVyTGltaXQ7XG4gICAgb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPSB0eXBlb2Ygb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuc3RyaWN0TnVsbEhhbmRsaW5nIDogZGVmYXVsdHMuc3RyaWN0TnVsbEhhbmRsaW5nO1xuXG4gICAgaWYgKHN0ciA9PT0gJycgfHwgc3RyID09PSBudWxsIHx8IHR5cGVvZiBzdHIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zLnBsYWluT2JqZWN0cyA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiB7fTtcbiAgICB9XG5cbiAgICB2YXIgdGVtcE9iaiA9IHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gcGFyc2VWYWx1ZXMoc3RyLCBvcHRpb25zKSA6IHN0cjtcbiAgICB2YXIgb2JqID0gb3B0aW9ucy5wbGFpbk9iamVjdHMgPyBPYmplY3QuY3JlYXRlKG51bGwpIDoge307XG5cbiAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIGtleXMgYW5kIHNldHVwIHRoZSBuZXcgb2JqZWN0XG5cbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHRlbXBPYmopO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgdmFyIG5ld09iaiA9IHBhcnNlS2V5cyhrZXksIHRlbXBPYmpba2V5XSwgb3B0aW9ucyk7XG4gICAgICAgIG9iaiA9IHV0aWxzLm1lcmdlKG9iaiwgbmV3T2JqLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXRpbHMuY29tcGFjdChvYmopO1xufTtcblxufSx7XCIuL3V0aWxzXCI6Mzl9XSwzODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBmb3JtYXRzID0gcmVxdWlyZSgnLi9mb3JtYXRzJyk7XG5cbnZhciBhcnJheVByZWZpeEdlbmVyYXRvcnMgPSB7XG4gICAgYnJhY2tldHM6IGZ1bmN0aW9uIGJyYWNrZXRzKHByZWZpeCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGZ1bmMtbmFtZS1tYXRjaGluZ1xuICAgICAgICByZXR1cm4gcHJlZml4ICsgJ1tdJztcbiAgICB9LFxuICAgIGluZGljZXM6IGZ1bmN0aW9uIGluZGljZXMocHJlZml4LCBrZXkpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBmdW5jLW5hbWUtbWF0Y2hpbmdcbiAgICAgICAgcmV0dXJuIHByZWZpeCArICdbJyArIGtleSArICddJztcbiAgICB9LFxuICAgIHJlcGVhdDogZnVuY3Rpb24gcmVwZWF0KHByZWZpeCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGZ1bmMtbmFtZS1tYXRjaGluZ1xuICAgICAgICByZXR1cm4gcHJlZml4O1xuICAgIH1cbn07XG5cbnZhciB0b0lTTyA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nO1xuXG52YXIgZGVmYXVsdHMgPSB7XG4gICAgZGVsaW1pdGVyOiAnJicsXG4gICAgZW5jb2RlOiB0cnVlLFxuICAgIGVuY29kZXI6IHV0aWxzLmVuY29kZSxcbiAgICBlbmNvZGVWYWx1ZXNPbmx5OiBmYWxzZSxcbiAgICBzZXJpYWxpemVEYXRlOiBmdW5jdGlvbiBzZXJpYWxpemVEYXRlKGRhdGUpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBmdW5jLW5hbWUtbWF0Y2hpbmdcbiAgICAgICAgcmV0dXJuIHRvSVNPLmNhbGwoZGF0ZSk7XG4gICAgfSxcbiAgICBza2lwTnVsbHM6IGZhbHNlLFxuICAgIHN0cmljdE51bGxIYW5kbGluZzogZmFsc2Vcbn07XG5cbnZhciBzdHJpbmdpZnkgPSBmdW5jdGlvbiBzdHJpbmdpZnkoIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgZnVuYy1uYW1lLW1hdGNoaW5nXG4gICAgb2JqZWN0LFxuICAgIHByZWZpeCxcbiAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgIHN0cmljdE51bGxIYW5kbGluZyxcbiAgICBza2lwTnVsbHMsXG4gICAgZW5jb2RlcixcbiAgICBmaWx0ZXIsXG4gICAgc29ydCxcbiAgICBhbGxvd0RvdHMsXG4gICAgc2VyaWFsaXplRGF0ZSxcbiAgICBmb3JtYXR0ZXIsXG4gICAgZW5jb2RlVmFsdWVzT25seVxuKSB7XG4gICAgdmFyIG9iaiA9IG9iamVjdDtcbiAgICBpZiAodHlwZW9mIGZpbHRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBvYmogPSBmaWx0ZXIocHJlZml4LCBvYmopO1xuICAgIH0gZWxzZSBpZiAob2JqIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICBvYmogPSBzZXJpYWxpemVEYXRlKG9iaik7XG4gICAgfSBlbHNlIGlmIChvYmogPT09IG51bGwpIHtcbiAgICAgICAgaWYgKHN0cmljdE51bGxIYW5kbGluZykge1xuICAgICAgICAgICAgcmV0dXJuIGVuY29kZXIgJiYgIWVuY29kZVZhbHVlc09ubHkgPyBlbmNvZGVyKHByZWZpeCwgZGVmYXVsdHMuZW5jb2RlcikgOiBwcmVmaXg7XG4gICAgICAgIH1cblxuICAgICAgICBvYmogPSAnJztcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG9iaiA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG9iaiA9PT0gJ251bWJlcicgfHwgdHlwZW9mIG9iaiA9PT0gJ2Jvb2xlYW4nIHx8IHV0aWxzLmlzQnVmZmVyKG9iaikpIHtcbiAgICAgICAgaWYgKGVuY29kZXIpIHtcbiAgICAgICAgICAgIHZhciBrZXlWYWx1ZSA9IGVuY29kZVZhbHVlc09ubHkgPyBwcmVmaXggOiBlbmNvZGVyKHByZWZpeCwgZGVmYXVsdHMuZW5jb2Rlcik7XG4gICAgICAgICAgICByZXR1cm4gW2Zvcm1hdHRlcihrZXlWYWx1ZSkgKyAnPScgKyBmb3JtYXR0ZXIoZW5jb2RlcihvYmosIGRlZmF1bHRzLmVuY29kZXIpKV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtmb3JtYXR0ZXIocHJlZml4KSArICc9JyArIGZvcm1hdHRlcihTdHJpbmcob2JqKSldO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZXMgPSBbXTtcblxuICAgIGlmICh0eXBlb2Ygb2JqID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH1cblxuICAgIHZhciBvYmpLZXlzO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGZpbHRlcikpIHtcbiAgICAgICAgb2JqS2V5cyA9IGZpbHRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgICAgIG9iaktleXMgPSBzb3J0ID8ga2V5cy5zb3J0KHNvcnQpIDoga2V5cztcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iaktleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGtleSA9IG9iaktleXNbaV07XG5cbiAgICAgICAgaWYgKHNraXBOdWxscyAmJiBvYmpba2V5XSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgICAgICB2YWx1ZXMgPSB2YWx1ZXMuY29uY2F0KHN0cmluZ2lmeShcbiAgICAgICAgICAgICAgICBvYmpba2V5XSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4KHByZWZpeCwga2V5KSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgICAgIHN0cmljdE51bGxIYW5kbGluZyxcbiAgICAgICAgICAgICAgICBza2lwTnVsbHMsXG4gICAgICAgICAgICAgICAgZW5jb2RlcixcbiAgICAgICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICAgICAgc29ydCxcbiAgICAgICAgICAgICAgICBhbGxvd0RvdHMsXG4gICAgICAgICAgICAgICAgc2VyaWFsaXplRGF0ZSxcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZXIsXG4gICAgICAgICAgICAgICAgZW5jb2RlVmFsdWVzT25seVxuICAgICAgICAgICAgKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YWx1ZXMgPSB2YWx1ZXMuY29uY2F0KHN0cmluZ2lmeShcbiAgICAgICAgICAgICAgICBvYmpba2V5XSxcbiAgICAgICAgICAgICAgICBwcmVmaXggKyAoYWxsb3dEb3RzID8gJy4nICsga2V5IDogJ1snICsga2V5ICsgJ10nKSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgICAgIHN0cmljdE51bGxIYW5kbGluZyxcbiAgICAgICAgICAgICAgICBza2lwTnVsbHMsXG4gICAgICAgICAgICAgICAgZW5jb2RlcixcbiAgICAgICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICAgICAgc29ydCxcbiAgICAgICAgICAgICAgICBhbGxvd0RvdHMsXG4gICAgICAgICAgICAgICAgc2VyaWFsaXplRGF0ZSxcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZXIsXG4gICAgICAgICAgICAgICAgZW5jb2RlVmFsdWVzT25seVxuICAgICAgICAgICAgKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWVzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBvcHRzKSB7XG4gICAgdmFyIG9iaiA9IG9iamVjdDtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgPyB1dGlscy5hc3NpZ24oe30sIG9wdHMpIDoge307XG5cbiAgICBpZiAob3B0aW9ucy5lbmNvZGVyICE9PSBudWxsICYmIG9wdGlvbnMuZW5jb2RlciAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmVuY29kZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRW5jb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICB2YXIgZGVsaW1pdGVyID0gdHlwZW9mIG9wdGlvbnMuZGVsaW1pdGVyID09PSAndW5kZWZpbmVkJyA/IGRlZmF1bHRzLmRlbGltaXRlciA6IG9wdGlvbnMuZGVsaW1pdGVyO1xuICAgIHZhciBzdHJpY3ROdWxsSGFuZGxpbmcgPSB0eXBlb2Ygb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuc3RyaWN0TnVsbEhhbmRsaW5nIDogZGVmYXVsdHMuc3RyaWN0TnVsbEhhbmRsaW5nO1xuICAgIHZhciBza2lwTnVsbHMgPSB0eXBlb2Ygb3B0aW9ucy5za2lwTnVsbHMgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuc2tpcE51bGxzIDogZGVmYXVsdHMuc2tpcE51bGxzO1xuICAgIHZhciBlbmNvZGUgPSB0eXBlb2Ygb3B0aW9ucy5lbmNvZGUgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuZW5jb2RlIDogZGVmYXVsdHMuZW5jb2RlO1xuICAgIHZhciBlbmNvZGVyID0gdHlwZW9mIG9wdGlvbnMuZW5jb2RlciA9PT0gJ2Z1bmN0aW9uJyA/IG9wdGlvbnMuZW5jb2RlciA6IGRlZmF1bHRzLmVuY29kZXI7XG4gICAgdmFyIHNvcnQgPSB0eXBlb2Ygb3B0aW9ucy5zb3J0ID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5zb3J0IDogbnVsbDtcbiAgICB2YXIgYWxsb3dEb3RzID0gdHlwZW9mIG9wdGlvbnMuYWxsb3dEb3RzID09PSAndW5kZWZpbmVkJyA/IGZhbHNlIDogb3B0aW9ucy5hbGxvd0RvdHM7XG4gICAgdmFyIHNlcmlhbGl6ZURhdGUgPSB0eXBlb2Ygb3B0aW9ucy5zZXJpYWxpemVEYXRlID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5zZXJpYWxpemVEYXRlIDogZGVmYXVsdHMuc2VyaWFsaXplRGF0ZTtcbiAgICB2YXIgZW5jb2RlVmFsdWVzT25seSA9IHR5cGVvZiBvcHRpb25zLmVuY29kZVZhbHVlc09ubHkgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuZW5jb2RlVmFsdWVzT25seSA6IGRlZmF1bHRzLmVuY29kZVZhbHVlc09ubHk7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZvcm1hdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgb3B0aW9ucy5mb3JtYXQgPSBmb3JtYXRzWydkZWZhdWx0J107XG4gICAgfSBlbHNlIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGZvcm1hdHMuZm9ybWF0dGVycywgb3B0aW9ucy5mb3JtYXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZm9ybWF0IG9wdGlvbiBwcm92aWRlZC4nKTtcbiAgICB9XG4gICAgdmFyIGZvcm1hdHRlciA9IGZvcm1hdHMuZm9ybWF0dGVyc1tvcHRpb25zLmZvcm1hdF07XG4gICAgdmFyIG9iaktleXM7XG4gICAgdmFyIGZpbHRlcjtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5maWx0ZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgZmlsdGVyID0gb3B0aW9ucy5maWx0ZXI7XG4gICAgICAgIG9iaiA9IGZpbHRlcignJywgb2JqKTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob3B0aW9ucy5maWx0ZXIpKSB7XG4gICAgICAgIGZpbHRlciA9IG9wdGlvbnMuZmlsdGVyO1xuICAgICAgICBvYmpLZXlzID0gZmlsdGVyO1xuICAgIH1cblxuICAgIHZhciBrZXlzID0gW107XG5cbiAgICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgfHwgb2JqID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG5cbiAgICB2YXIgYXJyYXlGb3JtYXQ7XG4gICAgaWYgKG9wdGlvbnMuYXJyYXlGb3JtYXQgaW4gYXJyYXlQcmVmaXhHZW5lcmF0b3JzKSB7XG4gICAgICAgIGFycmF5Rm9ybWF0ID0gb3B0aW9ucy5hcnJheUZvcm1hdDtcbiAgICB9IGVsc2UgaWYgKCdpbmRpY2VzJyBpbiBvcHRpb25zKSB7XG4gICAgICAgIGFycmF5Rm9ybWF0ID0gb3B0aW9ucy5pbmRpY2VzID8gJ2luZGljZXMnIDogJ3JlcGVhdCc7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYXJyYXlGb3JtYXQgPSAnaW5kaWNlcyc7XG4gICAgfVxuXG4gICAgdmFyIGdlbmVyYXRlQXJyYXlQcmVmaXggPSBhcnJheVByZWZpeEdlbmVyYXRvcnNbYXJyYXlGb3JtYXRdO1xuXG4gICAgaWYgKCFvYmpLZXlzKSB7XG4gICAgICAgIG9iaktleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgIH1cblxuICAgIGlmIChzb3J0KSB7XG4gICAgICAgIG9iaktleXMuc29ydChzb3J0KTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iaktleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGtleSA9IG9iaktleXNbaV07XG5cbiAgICAgICAgaWYgKHNraXBOdWxscyAmJiBvYmpba2V5XSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBrZXlzID0ga2V5cy5jb25jYXQoc3RyaW5naWZ5KFxuICAgICAgICAgICAgb2JqW2tleV0sXG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgc3RyaWN0TnVsbEhhbmRsaW5nLFxuICAgICAgICAgICAgc2tpcE51bGxzLFxuICAgICAgICAgICAgZW5jb2RlID8gZW5jb2RlciA6IG51bGwsXG4gICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICBzb3J0LFxuICAgICAgICAgICAgYWxsb3dEb3RzLFxuICAgICAgICAgICAgc2VyaWFsaXplRGF0ZSxcbiAgICAgICAgICAgIGZvcm1hdHRlcixcbiAgICAgICAgICAgIGVuY29kZVZhbHVlc09ubHlcbiAgICAgICAgKSk7XG4gICAgfVxuXG4gICAgdmFyIGpvaW5lZCA9IGtleXMuam9pbihkZWxpbWl0ZXIpO1xuICAgIHZhciBwcmVmaXggPSBvcHRpb25zLmFkZFF1ZXJ5UHJlZml4ID09PSB0cnVlID8gJz8nIDogJyc7XG5cbiAgICByZXR1cm4gam9pbmVkLmxlbmd0aCA+IDAgPyBwcmVmaXggKyBqb2luZWQgOiAnJztcbn07XG5cbn0se1wiLi9mb3JtYXRzXCI6MzUsXCIuL3V0aWxzXCI6Mzl9XSwzOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXMgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgaGV4VGFibGUgPSAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBhcnJheSA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgICAgICAgYXJyYXkucHVzaCgnJScgKyAoKGkgPCAxNiA/ICcwJyA6ICcnKSArIGkudG9TdHJpbmcoMTYpKS50b1VwcGVyQ2FzZSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyYXk7XG59KCkpO1xuXG52YXIgY29tcGFjdFF1ZXVlID0gZnVuY3Rpb24gY29tcGFjdFF1ZXVlKHF1ZXVlKSB7XG4gICAgdmFyIG9iajtcblxuICAgIHdoaWxlIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBxdWV1ZS5wb3AoKTtcbiAgICAgICAgb2JqID0gaXRlbS5vYmpbaXRlbS5wcm9wXTtcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgICAgICB2YXIgY29tcGFjdGVkID0gW107XG5cbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgb2JqLmxlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvYmpbal0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBhY3RlZC5wdXNoKG9ialtqXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpdGVtLm9ialtpdGVtLnByb3BdID0gY29tcGFjdGVkO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG9iajtcbn07XG5cbmV4cG9ydHMuYXJyYXlUb09iamVjdCA9IGZ1bmN0aW9uIGFycmF5VG9PYmplY3Qoc291cmNlLCBvcHRpb25zKSB7XG4gICAgdmFyIG9iaiA9IG9wdGlvbnMgJiYgb3B0aW9ucy5wbGFpbk9iamVjdHMgPyBPYmplY3QuY3JlYXRlKG51bGwpIDoge307XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzb3VyY2VbaV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBvYmpbaV0gPSBzb3VyY2VbaV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gb2JqO1xufTtcblxuZXhwb3J0cy5tZXJnZSA9IGZ1bmN0aW9uIG1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG4gICAgaWYgKCFzb3VyY2UpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHNvdXJjZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSkge1xuICAgICAgICAgICAgdGFyZ2V0LnB1c2goc291cmNlKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMucGxhaW5PYmplY3RzIHx8IG9wdGlvbnMuYWxsb3dQcm90b3R5cGVzIHx8ICFoYXMuY2FsbChPYmplY3QucHJvdG90eXBlLCBzb3VyY2UpKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0W3NvdXJjZV0gPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFt0YXJnZXQsIHNvdXJjZV07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdGFyZ2V0ICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gW3RhcmdldF0uY29uY2F0KHNvdXJjZSk7XG4gICAgfVxuXG4gICAgdmFyIG1lcmdlVGFyZ2V0ID0gdGFyZ2V0O1xuICAgIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkgJiYgIUFycmF5LmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgICBtZXJnZVRhcmdldCA9IGV4cG9ydHMuYXJyYXlUb09iamVjdCh0YXJnZXQsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkgJiYgQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICAgIHNvdXJjZS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpKSB7XG4gICAgICAgICAgICBpZiAoaGFzLmNhbGwodGFyZ2V0LCBpKSkge1xuICAgICAgICAgICAgICAgIGlmICh0YXJnZXRbaV0gJiYgdHlwZW9mIHRhcmdldFtpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0W2ldID0gZXhwb3J0cy5tZXJnZSh0YXJnZXRbaV0sIGl0ZW0sIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0W2ldID0gaXRlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHNvdXJjZSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgICAgICB2YXIgdmFsdWUgPSBzb3VyY2Vba2V5XTtcblxuICAgICAgICBpZiAoaGFzLmNhbGwoYWNjLCBrZXkpKSB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IGV4cG9ydHMubWVyZ2UoYWNjW2tleV0sIHZhbHVlLCBvcHRpb25zKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCBtZXJnZVRhcmdldCk7XG59O1xuXG5leHBvcnRzLmFzc2lnbiA9IGZ1bmN0aW9uIGFzc2lnblNpbmdsZVNvdXJjZSh0YXJnZXQsIHNvdXJjZSkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhzb3VyY2UpLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrZXkpIHtcbiAgICAgICAgYWNjW2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB0YXJnZXQpO1xufTtcblxuZXhwb3J0cy5kZWNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChzdHIucmVwbGFjZSgvXFwrL2csICcgJykpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG59O1xuXG5leHBvcnRzLmVuY29kZSA9IGZ1bmN0aW9uIGVuY29kZShzdHIpIHtcbiAgICAvLyBUaGlzIGNvZGUgd2FzIG9yaWdpbmFsbHkgd3JpdHRlbiBieSBCcmlhbiBXaGl0ZSAobXNjZGV4KSBmb3IgdGhlIGlvLmpzIGNvcmUgcXVlcnlzdHJpbmcgbGlicmFyeS5cbiAgICAvLyBJdCBoYXMgYmVlbiBhZGFwdGVkIGhlcmUgZm9yIHN0cmljdGVyIGFkaGVyZW5jZSB0byBSRkMgMzk4NlxuICAgIGlmIChzdHIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuXG4gICAgdmFyIHN0cmluZyA9IHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gc3RyIDogU3RyaW5nKHN0cik7XG5cbiAgICB2YXIgb3V0ID0gJyc7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGMgPSBzdHJpbmcuY2hhckNvZGVBdChpKTtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjID09PSAweDJEIC8vIC1cbiAgICAgICAgICAgIHx8IGMgPT09IDB4MkUgLy8gLlxuICAgICAgICAgICAgfHwgYyA9PT0gMHg1RiAvLyBfXG4gICAgICAgICAgICB8fCBjID09PSAweDdFIC8vIH5cbiAgICAgICAgICAgIHx8IChjID49IDB4MzAgJiYgYyA8PSAweDM5KSAvLyAwLTlcbiAgICAgICAgICAgIHx8IChjID49IDB4NDEgJiYgYyA8PSAweDVBKSAvLyBhLXpcbiAgICAgICAgICAgIHx8IChjID49IDB4NjEgJiYgYyA8PSAweDdBKSAvLyBBLVpcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBvdXQgKz0gc3RyaW5nLmNoYXJBdChpKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGMgPCAweDgwKSB7XG4gICAgICAgICAgICBvdXQgPSBvdXQgKyBoZXhUYWJsZVtjXTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGMgPCAweDgwMCkge1xuICAgICAgICAgICAgb3V0ID0gb3V0ICsgKGhleFRhYmxlWzB4QzAgfCAoYyA+PiA2KV0gKyBoZXhUYWJsZVsweDgwIHwgKGMgJiAweDNGKV0pO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoYyA8IDB4RDgwMCB8fCBjID49IDB4RTAwMCkge1xuICAgICAgICAgICAgb3V0ID0gb3V0ICsgKGhleFRhYmxlWzB4RTAgfCAoYyA+PiAxMildICsgaGV4VGFibGVbMHg4MCB8ICgoYyA+PiA2KSAmIDB4M0YpXSArIGhleFRhYmxlWzB4ODAgfCAoYyAmIDB4M0YpXSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGkgKz0gMTtcbiAgICAgICAgYyA9IDB4MTAwMDAgKyAoKChjICYgMHgzRkYpIDw8IDEwKSB8IChzdHJpbmcuY2hhckNvZGVBdChpKSAmIDB4M0ZGKSk7XG4gICAgICAgIG91dCArPSBoZXhUYWJsZVsweEYwIHwgKGMgPj4gMTgpXVxuICAgICAgICAgICAgKyBoZXhUYWJsZVsweDgwIHwgKChjID4+IDEyKSAmIDB4M0YpXVxuICAgICAgICAgICAgKyBoZXhUYWJsZVsweDgwIHwgKChjID4+IDYpICYgMHgzRildXG4gICAgICAgICAgICArIGhleFRhYmxlWzB4ODAgfCAoYyAmIDB4M0YpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gb3V0O1xufTtcblxuZXhwb3J0cy5jb21wYWN0ID0gZnVuY3Rpb24gY29tcGFjdCh2YWx1ZSkge1xuICAgIHZhciBxdWV1ZSA9IFt7IG9iajogeyBvOiB2YWx1ZSB9LCBwcm9wOiAnbycgfV07XG4gICAgdmFyIHJlZnMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcXVldWUubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBxdWV1ZVtpXTtcbiAgICAgICAgdmFyIG9iaiA9IGl0ZW0ub2JqW2l0ZW0ucHJvcF07XG5cbiAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGtleXMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBrZXlzW2pdO1xuICAgICAgICAgICAgdmFyIHZhbCA9IG9ialtrZXldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmIHZhbCAhPT0gbnVsbCAmJiByZWZzLmluZGV4T2YodmFsKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBxdWV1ZS5wdXNoKHsgb2JqOiBvYmosIHByb3A6IGtleSB9KTtcbiAgICAgICAgICAgICAgICByZWZzLnB1c2godmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBjb21wYWN0UXVldWUocXVldWUpO1xufTtcblxuZXhwb3J0cy5pc1JlZ0V4cCA9IGZ1bmN0aW9uIGlzUmVnRXhwKG9iaikge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59O1xuXG5leHBvcnRzLmlzQnVmZmVyID0gZnVuY3Rpb24gaXNCdWZmZXIob2JqKSB7XG4gICAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuICEhKG9iai5jb25zdHJ1Y3RvciAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIgJiYgb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyKG9iaikpO1xufTtcblxufSx7fV19LHt9LFs3XSlcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0poYzNObGRITXZjM0pqTDJwekwwTnNZWE56WlhNdlNHVmhaR1Z5TG1weklpd2lZWE56WlhSekwzTnlZeTlxY3k5RGJHRnpjMlZ6TDB4dllXUk5iM0psTG1weklpd2lZWE56WlhSekwzTnlZeTlxY3k5RGJHRnpjMlZ6TDFCMVlteHBZMkYwYVc5dWN5NXFjeUlzSW1GemMyVjBjeTl6Y21NdmFuTXZRMnhoYzNObGN5OVNaWE4xYkhSekxtcHpJaXdpWVhOelpYUnpMM055WXk5cWN5OURiR0Z6YzJWekwxSjFZbkpwWTNNdWFuTWlMQ0poYzNObGRITXZjM0pqTDJwekwwTnNZWE56WlhNdlZHRjRiMjV2YlhsVVlXSnpMbXB6SWl3aVlYTnpaWFJ6TDNOeVl5OXFjeTl0WVdsdUxtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJsdVpHVjRMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTloWkdGd2RHVnljeTk0YUhJdWFuTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdllYaHBiM012YkdsaUwyRjRhVzl6TG1weklpd2libTlrWlY5dGIyUjFiR1Z6TDJGNGFXOXpMMnhwWWk5allXNWpaV3d2UTJGdVkyVnNMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlqWVc1alpXd3ZRMkZ1WTJWc1ZHOXJaVzR1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJOaGJtTmxiQzlwYzBOaGJtTmxiQzVxY3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTloZUdsdmN5OXNhV0l2WTI5eVpTOUJlR2x2Y3k1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdlkyOXlaUzlKYm5SbGNtTmxjSFJ2Y2sxaGJtRm5aWEl1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJOdmNtVXZZM0psWVhSbFJYSnliM0l1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJOdmNtVXZaR2x6Y0dGMFkyaFNaWEYxWlhOMExtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOWpiM0psTDJWdWFHRnVZMlZGY25KdmNpNXFjeUlzSW01dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZZMjl5WlM5elpYUjBiR1V1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJOdmNtVXZkSEpoYm5ObWIzSnRSR0YwWVM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdlpHVm1ZWFZzZEhNdWFuTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdllYaHBiM012YkdsaUwyaGxiSEJsY25NdlltbHVaQzVxY3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTloZUdsdmN5OXNhV0l2YUdWc2NHVnljeTlpZEc5aExtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOW9aV3h3WlhKekwySjFhV3hrVlZKTUxtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOW9aV3h3WlhKekwyTnZiV0pwYm1WVlVreHpMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlvWld4d1pYSnpMMk52YjJ0cFpYTXVhbk1pTENKdWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMmhsYkhCbGNuTXZhWE5CWW5OdmJIVjBaVlZTVEM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmFHVnNjR1Z5Y3k5cGMxVlNURk5oYldWUGNtbG5hVzR1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJobGJIQmxjbk12Ym05eWJXRnNhWHBsU0dWaFpHVnlUbUZ0WlM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmFHVnNjR1Z5Y3k5d1lYSnpaVWhsWVdSbGNuTXVhbk1pTENKdWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMmhsYkhCbGNuTXZjM0J5WldGa0xtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOTFkR2xzY3k1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5cGN5MWlkV1ptWlhJdmFXNWtaWGd1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12Y0hKdlkyVnpjeTlpY205M2MyVnlMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMM0Z6TDJ4cFlpOW1iM0p0WVhSekxtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwzRnpMMnhwWWk5cGJtUmxlQzVxY3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTl4Y3k5c2FXSXZjR0Z5YzJVdWFuTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdmNYTXZiR2xpTDNOMGNtbHVaMmxtZVM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5eGN5OXNhV0l2ZFhScGJITXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN096czdPenM3U1VOQlRTeE5PMEZCUTBvc2EwSkJRVmtzVTBGQldpeEZRVUYxUWp0QlFVRkJPenRCUVVGQk96dEJRVU55UWl4VFFVRkxMRTFCUVV3c1IwRkJZeXhUUVVGa08wRkJRMEVzVTBGQlN5eFBRVUZNTEVkQlFXVXNWVUZCVlN4aFFVRldMRU5CUVhkQ0xESkNRVUY0UWl4RFFVRm1PMEZCUTBFc1UwRkJTeXhQUVVGTUxFZEJRV1VzVlVGQlZTeGhRVUZXTEVOQlFYZENMSFZDUVVGNFFpeERRVUZtTzBGQlEwRXNVMEZCU3l4UlFVRk1MRWRCUVdkQ0xGVkJRVlVzWVVGQlZpeERRVUYzUWl4blFrRkJlRUlzUTBGQmFFSTdPMEZCUlVFc1UwRkJTeXhQUVVGTUxFTkJRV0VzWjBKQlFXSXNRMEZCT0VJc1QwRkJPVUlzUlVGQmRVTXNWVUZCUXl4RFFVRkVMRVZCUVU4N1FVRkROVU1zV1VGQlN5eG5Ra0ZCVER0QlFVTkVMRXRCUmtRN08wRkJTVUVzVTBGQlN5eFJRVUZNTEVOQlFXTXNaMEpCUVdRc1EwRkJLMElzVDBGQkwwSXNSVUZCZDBNc1ZVRkJReXhEUVVGRUxFVkJRVTg3UVVGRE4wTXNVVUZCUlN4alFVRkdPMEZCUTBRc1MwRkdSRHRCUVVkRU96czdPM1ZEUVVWclFqdEJRVU5xUWl4WFFVRkxMRTlCUVV3c1EwRkJZU3hUUVVGaUxFTkJRWFZDTEUxQlFYWkNMRU5CUVRoQ0xEUkNRVUU1UWp0QlFVTkVPenM3T3pzN1FVRkhTQ3hQUVVGUExFOUJRVkFzUjBGQmFVSXNUVUZCYWtJN096czdPenM3T3pzN08wRkRja0pCT3pzN08wRkJRMEU3T3pzN096czdPMGxCUlhGQ0xGRTdRVUZEYmtJc2IwSkJRVmtzVTBGQldpeEZRVUYxUWp0QlFVRkJPenRCUVVGQk96dEJRVU55UWl4VFFVRkxMRk5CUVV3c1IwRkJhVUlzVTBGQmFrSTdRVUZEUVN4VFFVRkxMRTFCUVV3c1IwRkJZeXhUUVVGVExHRkJRVlFzUTBGQmRVSXNiMEpCUVhaQ0xFTkJRV1E3UVVGRFFTeFRRVUZMTEVsQlFVd3NSMEZCV1N4TFFVRmFPMEZCUTBFc1UwRkJTeXhKUVVGTUxFZEJRVmtzUTBGQldqdEJRVU5CTEZOQlFVc3NTVUZCVEN4SFFVRlpMRXRCUVVzc1VVRkJha0k3UVVGRFFTeFRRVUZMTEVWQlFVd3NSMEZCVlN4TFFVRkxMRTFCUVdZN1FVRkRRU3hUUVVGTExFdEJRVXdzUjBGQllTeExRVUZMTEZOQlFVd3NRMEZCWlN4blFrRkJaaXhEUVVGblF5eHpRa0ZCYUVNc1EwRkJZanM3UVVGRlFTeFRRVUZMTEUxQlFVd3NSMEZCWXl4RlFVRmtPenRCUVVWQkxGZEJRVThzWjBKQlFWQXNRMEZCZDBJc1VVRkJlRUlzUlVGQmEwTXNXVUZCVFR0QlFVTjBReXhoUVVGUExGRkJRVkFzUTBGQlowSXNRMEZCYUVJc1JVRkJiVUlzUTBGQmJrSTdRVUZEUkN4TFFVWkVPenRCUVVsQkxGZEJRVThzWjBKQlFWQXNRMEZCZDBJc1ZVRkJlRUlzUlVGQmIwTXNZVUZCU3p0QlFVTjJReXhsUVVGVExFMUJRVlE3UVVGRFJDeExRVVpFT3p0QlFVbEJMRmRCUVU4c1owSkJRVkFzUTBGQmQwSXNVVUZCZUVJc1JVRkJhME1zV1VGQlRUdEJRVU4wUXl4VlFVRk5MR1ZCUVdVc1UwRkJVeXhKUVVGVUxFTkJRV01zV1VGQlpDeEhRVUUyUWl4VFFVRlRMR1ZCUVZRc1EwRkJlVUlzVTBGQmRFUXNTVUZCYlVVc1QwRkJUeXhYUVVGUUxFZEJRWEZDTEUxQlFVc3NUVUZCVEN4RFFVRlpMRmxCUVhCSExFTkJRWEpDT3p0QlFVVkJMRlZCUVVrc1owSkJRV2xDTEU5QlFVOHNWMEZCVUN4SFFVRnhRaXhEUVVGMFF5eEpRVUUwUXl4RFFVRkRMRTFCUVVzc1NVRkJkRVFzUlVGQk5FUTdRVUZETVVRc1kwRkJTeXhQUVVGTU8wRkJRMEVzWTBGQlN5eEpRVUZNTEVkQlFWa3NTVUZCV2p0QlFVTkVPenRCUVVWRUxGbEJRVXNzVTBGQlREdEJRVU5FTEV0QlZFUTdRVUZWUkRzN096czRRa0ZGVXp0QlFVRkJPenRCUVVOU0xGVkJRVTBzVDBGQlR6dEJRVU5ZTEdkQ1FVRlJMSFZDUVVSSE8wRkJSVmdzYlVKQlFWY3NTMEZCU3l4SlFVWk1PMEZCUjFnc2FVSkJRVk1zUzBGQlN5eEZRVWhJTzBGQlNWZ3NZMEZCVFN4TFFVRkxPMEZCU2tFc1QwRkJZanM3UVVGUFFTeHpRa0ZCVFN4SlFVRk9MRU5CUVZjc1QwRkJXQ3hGUVVGdlFpeGhRVUZITEZOQlFVZ3NRMEZCWVN4SlFVRmlMRU5CUVhCQ0xFVkJRMGNzU1VGRVNDeERRVU5STEdWQlFVODdRVUZEV0N4WlFVRkpMRWxCUVVvc1EwRkJVeXhKUVVGVUxFTkJRV01zUzBGQlpDeERRVUZ2UWl4UFFVRndRaXhEUVVFMFFpeG5Ra0ZCVVR0QlFVTnNReXhwUWtGQlN5eFRRVUZNTEVOQlFXVXNhMEpCUVdZc1EwRkJhME1zVjBGQmJFTXNSVUZCSzBNc1MwRkJTeXhQUVVGd1JEdEJRVU5FTEZOQlJrUTdRVUZIUVN4bFFVRkxMRXRCUVV3c1IwRkJZU3hQUVVGTExGTkJRVXdzUTBGQlpTeG5Ra0ZCWml4RFFVRm5ReXhyUWtGQmFFTXNRMEZCWWp0QlFVTkJMR1ZCUVVzc1NVRkJUQ3hKUVVGaExFTkJRV0k3UVVGRFFTeGxRVUZMTEVsQlFVd3NSMEZCV1N4TFFVRmFPMEZCUTBRc1QwRlNTQ3hGUVZOSExFdEJWRWdzUTBGVFV5eGxRVUZQTzBGQlExb3NaMEpCUVZFc1IwRkJVaXhEUVVGWkxFZEJRVm83UVVGRFJDeFBRVmhJTzBGQldVUTdPenRuUTBGRlZ6dEJRVU5XTEZWQlFVa3NVMEZCVXl4RlFVRmlPMEZCUTBFc1YwRkJTeXhMUVVGTUxFTkJRVmNzVDBGQldDeERRVUZ0UWl4blFrRkJVVHRCUVVGQkxHOURRVU5VTEV0QlFVc3NjVUpCUVV3c1JVRkVVenRCUVVGQkxGbEJRMnBDTEVkQlJHbENMSGxDUVVOcVFpeEhRVVJwUWpzN1FVRkZla0lzV1VGQlNTeE5RVUZOTEU5QlFVOHNWMEZCVUN4SFFVRnhRaXhEUVVFelFpeEpRVUZuUXl4TlFVRk5MRU5CUVRGRExFVkJRVFpETzBGQlF6TkRMRzFDUVVGVE8wRkJRMUFzYlVKQlFVOHNTMEZCU3l4UFFVRk1MRU5CUVdFc1MwRkVZanRCUVVWUUxHdENRVUZOTEV0QlFVc3NUMEZCVEN4RFFVRmhPMEZCUmxvc1YwRkJWRHRCUVVsRU8wRkJRMFlzVDBGU1JEczdRVUZWUVN4VlFVRkpMRXRCUVVzc1RVRkJUQ3hEUVVGWkxFdEJRVm9zUzBGQmMwSXNUMEZCVHl4TFFVRTNRaXhKUVVGelF5eFBRVUZQTEV0QlFWQXNTMEZCYVVJc1UwRkJNMFFzUlVGQmMwVTdRVUZEY0VVc1lVRkJTeXhOUVVGTUxFZEJRV01zVFVGQlpEdEJRVU5CTEdGQlFVc3NWVUZCVER0QlFVTkVPMEZCUTBZN096dHBRMEZGV1R0QlFVTllMR1ZCUVZNc1MwRkJWQ3hIUVVGdlFpeExRVUZMTEUxQlFVd3NRMEZCV1N4TFFVRm9RenRCUVVOQkxHRkJRVThzVDBGQlVDeERRVUZsTEZOQlFXWXNRMEZCZVVJc1JVRkJla0lzUlVGQk5rSXNSVUZCTjBJc1JVRkJhVU1zUzBGQlN5eE5RVUZNTEVOQlFWa3NTVUZCTjBNN1FVRkRRU3hoUVVGUExFOUJRVkFzUTBGQlpTeHBRa0ZCWml4SFFVRnRReXhSUVVGdVF6dEJRVU5FT3pzN096czdhMEpCTlVWclFpeFJPenM3T3pzN096czdPenM3TzBsRFNFRXNXVHRCUVVOdVFpeDNRa0ZCV1N4VFFVRmFMRVZCUVhWQ08wRkJRVUU3TzBGQlFVRTdPMEZCUTNKQ0xGTkJRVXNzVTBGQlRDeEhRVUZwUWl4VFFVRnFRanRCUVVOQkxGTkJRVXNzVjBGQlRDeEhRVUZ0UWl4VlFVRlZMR0ZCUVZZc1EwRkJkMElzWlVGQmVFSXNRMEZCYmtJN1FVRkRRU3hUUVVGTExGbEJRVXdzUjBGQmIwSXNWVUZCVlN4blFrRkJWaXhEUVVFeVFpeHpRa0ZCTTBJc1EwRkJjRUk3UVVGRFFTeFRRVUZMTEZkQlFVd3NSMEZCYlVJc1ZVRkJWU3hoUVVGV0xFTkJRWGRDTEc5Q1FVRjRRaXhEUVVGdVFqdEJRVU5CTEZOQlFVc3NWMEZCVEN4SFFVRnRRaXhWUVVGVkxHRkJRVllzUTBGQmQwSXNiMEpCUVhoQ0xFTkJRVzVDTzBGQlEwRXNVMEZCU3l4WlFVRk1MRWRCUVc5Q0xGTkJRWEJDTzBGQlEwRXNVMEZCU3l4aFFVRk1MRWRCUVhGQ0xFTkJRWEpDTzBGQlEwRXNVMEZCU3l4clFrRkJUQ3hIUVVFd1FpeExRVUZMTEZkQlFVd3NRMEZCYVVJc1ZVRkJha0lzUTBGQk5FSXNWMEZCTlVJc1IwRkJNRU1zUTBGQmNFVTdPMEZCUlVFc1UwRkJTeXhaUVVGTUxFTkJRV3RDTEU5QlFXeENMRU5CUVRCQ0xGVkJRVU1zU1VGQlJDeEZRVUZQTEV0QlFWQXNSVUZCYVVJN1FVRkRla01zVlVGQlNTeExRVUZMTEZOQlFVd3NRMEZCWlN4UlFVRm1MRU5CUVhkQ0xHTkJRWGhDTEVOQlFVb3NSVUZCTmtNN1FVRkRNME1zWTBGQlN5eFpRVUZNTEVkQlFXOUNMRXRCUVhCQ08wRkJRMFE3UVVGRFJpeExRVXBFT3p0QlFVMUJMRk5CUVVzc1YwRkJUQ3hEUVVGcFFpeG5Ra0ZCYWtJc1EwRkJhME1zVDBGQmJFTXNSVUZCTWtNc1dVRkJUVHRCUVVNdlF5eFZRVUZKTEUxQlFVc3NXVUZCVEN4SFFVRnZRaXhOUVVGTExGbEJRVXdzUTBGQmEwSXNUVUZCYkVJc1IwRkJNa0lzUTBGQmJrUXNSVUZCYzBRN1FVRkRjRVFzWTBGQlN5eFpRVUZNTEVOQlFXdENMRTFCUVVzc1dVRkJUQ3hIUVVGdlFpeERRVUYwUXp0QlFVTkVPMEZCUTBZc1MwRktSRHM3UVVGTlFTeFRRVUZMTEZkQlFVd3NRMEZCYVVJc1owSkJRV3BDTEVOQlFXdERMRTlCUVd4RExFVkJRVEpETEZsQlFVMDdRVUZETDBNc1ZVRkJTU3hOUVVGTExGbEJRVXdzU1VGQmNVSXNRMEZCZWtJc1JVRkJORUk3UVVGRE1VSXNZMEZCU3l4WlFVRk1MRU5CUVd0Q0xFMUJRVXNzV1VGQlRDeEhRVUZ2UWl4RFFVRjBRenRCUVVORU8wRkJRMFlzUzBGS1JEdEJRVXRFT3pzN08ybERRVVZaTEZFc1JVRkJWVHRCUVVOeVFqdEJRVU5CTzBGQlEwRXNWMEZCU3l4WlFVRk1MRU5CUVd0Q0xFdEJRVXNzV1VGQmRrSXNSVUZCY1VNc1UwRkJja01zUTBGQkswTXNUVUZCTDBNc1EwRkJjMFFzWTBGQmRFUTdPMEZCUlVFc1YwRkJTeXhaUVVGTUxFZEJRVzlDTEZGQlFYQkNPMEZCUTBFc1YwRkJTeXhaUVVGTUxFTkJRV3RDTEV0QlFVc3NXVUZCZGtJc1JVRkJjVU1zVTBGQmNrTXNRMEZCSzBNc1IwRkJMME1zUTBGQmJVUXNZMEZCYmtRN08wRkJSVUVzVlVGQlNTeExRVUZMTEZsQlFVd3NTVUZCY1VJc1EwRkJla0lzUlVGQk5FSTdRVUZETVVJc1lVRkJTeXhYUVVGTUxFTkJRV2xDTEZOQlFXcENMRU5CUVRKQ0xFZEJRVE5DTEVOQlFTdENMSE5DUVVFdlFqdEJRVU5FTEU5QlJrUXNUVUZGVHl4SlFVRkpMRXRCUVVzc1dVRkJUQ3hKUVVGeFFpeExRVUZMTEZsQlFVd3NRMEZCYTBJc1RVRkJiRUlzUjBGQk1rSXNRMEZCY0VRc1JVRkJkVVE3UVVGRE5VUXNZVUZCU3l4WFFVRk1MRU5CUVdsQ0xGTkJRV3BDTEVOQlFUSkNMRWRCUVROQ0xFTkJRU3RDTEhOQ1FVRXZRanRCUVVORUxFOUJSazBzVFVGRlFUdEJRVU5NTEdGQlFVc3NWMEZCVEN4RFFVRnBRaXhUUVVGcVFpeERRVUV5UWl4TlFVRXpRaXhEUVVGclF5eHpRa0ZCYkVNN1FVRkRRU3hoUVVGTExGZEJRVXdzUTBGQmFVSXNVMEZCYWtJc1EwRkJNa0lzVFVGQk0wSXNRMEZCYTBNc2MwSkJRV3hETzBGQlEwUTdPMEZCUlVRc1kwRkJVU3hIUVVGU0xFTkJRVmtzUzBGQlN5eFpRVUZNTEVkQlFXOUNMRXRCUVVzc1lVRkJja003UVVGRFFTeFZRVUZKTEV0QlFVc3NXVUZCVEN4SFFVRnZRaXhMUVVGTExHRkJRWHBDTEVsQlFUQkRMRU5CUVRsRExFVkJRV2xFTzBGQlF5OURMRmxCUVUwc1UwRkJVeXhEUVVGRkxFdEJRVXNzV1VGQlRDeEhRVUZ2UWl4TFFVRkxMR0ZCUVRGQ0xFZEJRVEpETEVOQlFUVkRMRWxCUVdsRUxFdEJRVXNzYTBKQlFYSkZPenRCUVVWQkxHRkJRVXNzVjBGQlRDeERRVUZwUWl4TFFVRnFRaXhEUVVGMVFpeFRRVUYyUWl4dlFrRkJhMFFzVFVGQmJFUTdRVUZEUkN4UFFVcEVMRTFCU1U4N1FVRkRUQ3hoUVVGTExGZEJRVXdzUTBGQmFVSXNTMEZCYWtJc1EwRkJkVUlzVTBGQmRrSXNSMEZCYlVNc2FVSkJRVzVETzBGQlEwUTdRVUZEUmpzN096czdPMnRDUVhaRWEwSXNXVHM3T3pzN096dEJRMEZ5UWpzN096dEJRVU5CT3pzN096czdPenRKUVVWTkxFODdRVUZEU2l4dFFrRkJXU3hUUVVGYUxFVkJRWFZDTzBGQlFVRTdPMEZCUVVFN08wRkJSWEpDTEZOQlFVc3NVMEZCVEN4SFFVRnBRaXhUUVVGcVFqdEJRVU5CTEZOQlFVc3NaVUZCVEN4SFFVRjFRaXhWUVVGVkxHZENRVUZXTEVOQlFUSkNMR2xDUVVFelFpeERRVUYyUWp0QlFVTkJMRk5CUVVzc1lVRkJUQ3hIUVVGeFFpeFZRVUZWTEdkQ1FVRldMRU5CUVRKQ0xITkNRVUV6UWl4RFFVRnlRanM3UVVGRlFTeFRRVUZMTEZsQlFVd3NSMEZCYjBJc1ZVRkJWU3huUWtGQlZpeERRVUV5UWl4clFrRkJNMElzUTBGQmNFSTdRVUZEUVN4VFFVRkxMR2xDUVVGTUxFZEJRWGxDTEZWQlFWVXNaMEpCUVZZc1EwRkJNa0lzVDBGQk0wSXNRMEZCZWtJN08wRkJSVUVzVTBGQlN5eG5Ra0ZCVEN4SFFVRjNRaXhWUVVGVkxHRkJRVllzUTBGQmQwSXNORUpCUVhoQ0xFTkJRWGhDTzBGQlEwRXNVMEZCU3l3d1FrRkJUQ3hIUVVGclF5eFZRVUZWTEdGQlFWWXNRMEZCZDBJc2MwSkJRWGhDTEVOQlFXeERPMEZCUTBFc1UwRkJTeXgxUWtGQlRDeEhRVUVyUWl4VlFVRlZMR0ZCUVZZc1EwRkJkMElzYlVKQlFYaENMRU5CUVM5Q08wRkJRMEVzVTBGQlN5eHpRa0ZCVEN4SFFVRTRRaXhWUVVGVkxHRkJRVllzUTBGQmQwSXNZMEZCZUVJc1EwRkJPVUk3UVVGRFFTeFRRVUZMTEhOQ1FVRk1MRWRCUVRoQ0xFVkJRVGxDT3p0QlFVVkJMRk5CUVVzc2EwSkJRVXdzUjBGQk1FSXNWVUZCVlN4aFFVRldMRU5CUVhkQ0xIbENRVUY0UWl4RFFVRXhRanRCUVVOQkxGTkJRVXNzYVVKQlFVd3NSMEZCZVVJc1ZVRkJWU3hoUVVGV0xFTkJRWGRDTEcxQ1FVRjRRaXhEUVVGNlFqdEJRVU5CTEZOQlFVc3NUMEZCVEN4SFFVRmxMRlZCUVZVc1owSkJRVllzUTBGQk1rSXNVMEZCTTBJc1EwRkJaanM3UVVGRlFTeFRRVUZMTEdOQlFVd3NSMEZCYzBJc1ZVRkJWU3huUWtGQlZpeERRVUV5UWl4bFFVRXpRaXhEUVVGMFFqczdRVUZGUVN4VFFVRkxMRmxCUVV3c1IwRkJiMElzUTBGQmNFSTdRVUZEUVN4VFFVRkxMR2RDUVVGTUxFZEJRWGRDTEVWQlFYaENPMEZCUTBFc1UwRkJTeXhwUWtGQlRDeEhRVUY1UWl4RlFVRjZRanM3UVVGRlFTeFRRVUZMTEdWQlFVd3NRMEZCY1VJc1QwRkJja0lzUTBGQk5rSXNhMEpCUVZVN1FVRkRja01zWVVGQlR5eG5Ra0ZCVUN4RFFVRjNRaXhQUVVGNFFpeEZRVUZwUXl4aFFVRkxPMEZCUTNCRExHTkJRVXNzVDBGQlRDeERRVUZoTEVWQlFVVXNZVUZCUml4RFFVRm5RaXhQUVVGb1FpeERRVUYzUWl4TFFVRnlRenRCUVVORUxFOUJSa1E3UVVGSFJDeExRVXBFT3p0QlFVMUJMRk5CUVVzc2EwSkJRVXdzUTBGQmQwSXNaMEpCUVhoQ0xFTkJRWGxETEU5QlFYcERMRVZCUVd0RUxGbEJRVTA3UVVGRGRFUXNXVUZCU3l4cFFrRkJUQ3hEUVVGMVFpeFRRVUYyUWl4RFFVRnBReXhOUVVGcVF5eERRVUYzUXl3d1FrRkJlRU03UVVGRFJDeExRVVpFT3p0QlFVbEJMRk5CUVVzc1kwRkJUQ3hEUVVGdlFpeFBRVUZ3UWl4RFFVRTBRaXhuUWtGQlVUdEJRVUZCTEd0RFFVTm9RaXhMUVVGTExHRkJRVXdzUTBGQmJVSXNTVUZCYmtJc1JVRkJlVUlzY1VKQlFYcENMRVZCUkdkQ08wRkJRVUVzVlVGRE1VSXNTMEZFTUVJc2VVSkJRekZDTEV0QlJEQkNPenRCUVVWc1F5eFhRVUZMTEV0QlFVd3NRMEZCVnl4TFFVRllMRWRCUVhOQ0xGRkJRVkVzUTBGQk9VSTdRVUZEUkN4TFFVaEVPenRCUVV0QkxGTkJRVXNzVDBGQlRDeERRVUZoTEU5QlFXSXNRMEZCY1VJc2EwSkJRVlU3UVVGRE4wSXNZVUZCVHl4blFrRkJVQ3hEUVVGM1FpeFBRVUY0UWl4RlFVRnBReXhoUVVGTE8wRkJRM0JETEdOQlFVc3NXVUZCVEN4RFFVRnJRaXhGUVVGRkxHRkJRWEJDTzBGQlEwRXNZMEZCU3l4TlFVRk1PMEZCUTBRc1QwRklSRHRCUVVsRUxFdEJURVE3TzBGQlQwRXNVMEZCU3l4MVFrRkJUQ3hEUVVFMlFpeG5Ra0ZCTjBJc1EwRkJPRU1zVDBGQk9VTXNSVUZCZFVRc1dVRkJUVHRCUVVNelJDeFpRVUZMTEZkQlFVdzdRVUZEUkN4TFFVWkVPMEZCUjBRN096czdORUpCUlU4c1N5eEZRVUZQTzBGQlEySXNWVUZCU1N4TFFVRkxMRmxCUVV3c1MwRkJjMElzUzBGQk1VSXNSVUZCYVVNN1FVRkRMMElzWVVGQlN5eFpRVUZNTEVOQlFXdENMRXRCUVVzc1dVRkJka0lzUlVGQmNVTXNVMEZCY2tNc1EwRkJLME1zVFVGQkwwTXNRMEZCYzBRc2VVSkJRWFJFTzBGQlEwRXNZVUZCU3l4bFFVRk1MRU5CUVhGQ0xFdEJRVXNzV1VGQk1VSXNSVUZCZDBNc1UwRkJlRU1zUTBGQmEwUXNUVUZCYkVRc1EwRkJlVVFzZDBKQlFYcEVPenRCUVVWQkxHRkJRVXNzV1VGQlRDeERRVUZyUWl4TFFVRnNRaXhGUVVGNVFpeFRRVUY2UWl4RFFVRnRReXhIUVVGdVF5eERRVUYxUXl4NVFrRkJka003UVVGRFFTeGhRVUZMTEdWQlFVd3NRMEZCY1VJc1MwRkJja0lzUlVGQk5FSXNVMEZCTlVJc1EwRkJjME1zUjBGQmRFTXNRMEZCTUVNc2QwSkJRVEZET3p0QlFVVkJMR0ZCUVVzc1dVRkJUQ3hIUVVGdlFpeExRVUZ3UWp0QlFVTkVPMEZCUTBZN096dHBRMEZGV1N4UExFVkJRVk03UVVGRGNFSXNWVUZCVFN4VFFVRlRPMEZCUTJJc1kwRkJUU3hSUVVGUkxFOUJRVklzUTBGQlowSXNTVUZFVkR0QlFVVmlMR3RDUVVGVkxGRkJRVkVzVDBGQlVpeERRVUZuUWl4UlFVWmlPMEZCUjJJc1kwRkJUU3hSUVVGUkxFOUJRVklzUTBGQlowSTdRVUZJVkN4UFFVRm1PMEZCUzBFc1ZVRkJTU3hEUVVGRExGRkJRVkVzVTBGQlVpeERRVUZyUWl4UlFVRnNRaXhEUVVFeVFpeG5Ra0ZCTTBJc1EwRkJUQ3hGUVVGdFJEdEJRVU5xUkN4aFFVRkxMR2RDUVVGTUxFTkJRWE5DTEVsQlFYUkNMRU5CUVRKQ0xFMUJRVE5DTzBGQlEwRXNZVUZCU3l4VFFVRk1MRU5CUVdVc1RVRkJaanRCUVVORUxFOUJTRVFzVFVGSFR6dEJRVU5NTEdGQlFVc3NXVUZCVEN4RFFVRnJRaXhOUVVGc1FqdEJRVU5FT3p0QlFVVkVMR05CUVZFc1UwRkJVaXhEUVVGclFpeE5RVUZzUWl4RFFVRjVRaXhuUWtGQmVrSTdRVUZEUkRzN096aENRVVZUTEUwc1JVRkJVVHRCUVVGQk96dEJRVU5vUWl4VlFVRk5MRlZCUVZVc1MwRkJTeXh6UWtGQlRDeERRVUUwUWl4VFFVRTFRaXhEUVVGelF5eEpRVUYwUXl4RFFVRm9RanRCUVVOQkxHTkJRVkVzWVVGQlVpeERRVUZ6UWl4alFVRjBRaXhGUVVGelF5eFhRVUYwUXl4SFFVRnZSQ3hQUVVGUExFbEJRVE5FTzBGQlEwRXNZMEZCVVN4UFFVRlNMRU5CUVdkQ0xFbEJRV2hDTEVkQlFYVkNMRTlCUVU4c1NVRkJPVUk3UVVGRFFTeGpRVUZSTEZOQlFWSXNRMEZCYTBJc1RVRkJiRUlzUTBGQmVVSXNZVUZCZWtJN08wRkJSVUVzVjBGQlN5d3dRa0ZCVEN4RFFVRm5ReXhYUVVGb1F5eERRVUUwUXl4UFFVRTFRenRCUVVOQkxGZEJRVXNzYzBKQlFVd3NRMEZCTkVJc1NVRkJOVUlzUTBGQmFVTXNUMEZCYWtNN08wRkJSVUVzWTBGQlVTeGhRVUZTTEVOQlFYTkNMR1ZCUVhSQ0xFVkJRWFZETEdkQ1FVRjJReXhEUVVGM1JDeFBRVUY0UkN4RlFVRnBSU3hoUVVGTE8wRkJRM0JGTEZsQlFVMHNUVUZCVFR0QlFVTldMR2RDUVVGTkxFVkJRVVVzWVVGQlJpeERRVUZuUWl4VlFVRm9RaXhEUVVFeVFpeFBRVUV6UWl4RFFVRnRReXhKUVVRdlFqdEJRVVZXTEc5Q1FVRlZMRVZCUVVVc1lVRkJSaXhEUVVGblFpeFZRVUZvUWl4RFFVRXlRaXhQUVVFelFpeERRVUZ0UXl4UlFVWnVRenRCUVVkV0xHZENRVUZOTEVWQlFVVXNZVUZCUml4RFFVRm5RaXhWUVVGb1FpeERRVUV5UWl4UFFVRXpRaXhEUVVGdFF6dEJRVWd2UWl4VFFVRmFPenRCUVUxQkxHVkJRVXNzV1VGQlRDeERRVUZyUWl4SFFVRnNRanRCUVVOQkxHVkJRVXNzVFVGQlREdEJRVU5FTEU5QlZFUTdRVUZWUVN4WFFVRkxMSEZDUVVGTU8wRkJRMFE3T3p0cFEwRkZXU3hOTEVWQlFWRTdRVUZEYmtJc1ZVRkJUU3hWUVVGVkxGTkJRVk1zWVVGQlZDeG5RMEZCYjBRc1QwRkJUeXhKUVVFelJDeFBRVUZvUWp0QlFVTkJMR05CUVZFc1RVRkJVanM3UVVGRlFTeFZRVUZOTEZOQlFWTXNVMEZCVXl4aFFVRlVMREpEUVVFclJDeFBRVUZQTEVsQlFYUkZMRTlCUVdZN1FVRkRRU3hoUVVGUExGTkJRVkFzUTBGQmFVSXNUVUZCYWtJc1EwRkJkMElzWjBKQlFYaENPenRCUVVWQkxGVkJRVTBzVVVGQlVTeExRVUZMTEdkQ1FVRk1MRU5CUVhOQ0xGTkJRWFJDTEVOQlFXZERMRzlDUVVGWk8wRkJRM2hFTEdWQlFVOHNVMEZCVXl4SlFVRlVMRXRCUVd0Q0xFOUJRVThzU1VGQmVrSXNTVUZCYVVNc1UwRkJVeXhSUVVGVUxFdEJRWE5DTEU5QlFVOHNVVUZCY2tVN1FVRkRSQ3hQUVVaaExFTkJRV1E3UVVGSFFTeFhRVUZMTEdkQ1FVRk1MRU5CUVhOQ0xFMUJRWFJDTEVOQlFUWkNMRXRCUVRkQ0xFVkJRVzlETEVOQlFYQkRPenRCUVVWQkxGZEJRVXNzY1VKQlFVdzdRVUZEUVN4WFFVRkxMSFZDUVVGTU8wRkJRMFE3T3p0clEwRkZZVHRCUVVOYUxGZEJRVXNzVDBGQlRDeERRVUZoTEU5QlFXSXNRMEZCY1VJc2EwSkJRVlU3UVVGRE4wSXNaVUZCVHl4VFFVRlFMRU5CUVdsQ0xFMUJRV3BDTEVOQlFYZENMR2RDUVVGNFFqdEJRVU5FTEU5QlJrUTdRVUZIUVN4WFFVRkxMR2RDUVVGTUxFZEJRWGRDTEVWQlFYaENPenRCUVVWQkxGZEJRVXNzYzBKQlFVd3NRMEZCTkVJc1QwRkJOVUlzUTBGQmIwTXNaMEpCUVZFN1FVRkRNVU1zWVVGQlN5eE5RVUZNTzBGQlEwUXNUMEZHUkRzN1FVRkpRU3hYUVVGTExIRkNRVUZNT3p0QlFVVkJMRmRCUVVzc1RVRkJURHRCUVVORU96czdORU5CUlhWQ08wRkJRM1JDTEZWQlFVa3NTMEZCU3l4blFrRkJUQ3hEUVVGelFpeE5RVUYwUWl4SFFVRXJRaXhEUVVGdVF5eEZRVUZ6UXp0QlFVTndReXhoUVVGTExHZENRVUZNTEVOQlFYTkNMRk5CUVhSQ0xFTkJRV2RETEVkQlFXaERMRU5CUVc5RExHMURRVUZ3UXp0QlFVTkVMRTlCUmtRc1RVRkZUenRCUVVOTUxHRkJRVXNzWjBKQlFVd3NRMEZCYzBJc1UwRkJkRUlzUTBGQlowTXNUVUZCYUVNc1EwRkJkVU1zYlVOQlFYWkRPMEZCUTBRN1FVRkRSanM3T3poRFFVVjVRanRCUVVGQk96dEJRVU40UWl4WFFVRkxMRTlCUVV3c1EwRkJZU3hQUVVGaUxFTkJRWEZDTEd0Q1FVRlZPMEZCUXpkQ0xGbEJRVWtzVDBGQlN5eHBRa0ZCVEN4RFFVRjFRaXhQUVVGMlFpeERRVUVyUWl4UFFVRlBMRTlCUVZBc1EwRkJaU3hKUVVFNVF5eE5RVUYzUkN4RFFVRkRMRU5CUVRkRUxFVkJRV2RGTzBGQlF6bEVMR2xDUVVGUExGTkJRVkFzUTBGQmFVSXNSMEZCYWtJc1EwRkJjVUlzYTBKQlFYSkNPMEZCUTBFc2FVSkJRVThzVTBGQlVDeERRVUZwUWl4TlFVRnFRaXhEUVVGM1FpeG5Ra0ZCZUVJN1FVRkRSQ3hUUVVoRUxFMUJSMDg3UVVGRFRDeHBRa0ZCVHl4VFFVRlFMRU5CUVdsQ0xFMUJRV3BDTEVOQlFYZENMR3RDUVVGNFFqdEJRVU5FTzBGQlEwWXNUMEZRUkR0QlFWRkVPenM3TmtKQlJWRTdRVUZCUVRzN1FVRkRVQ3hWUVVGTkxFOUJRVTg3UVVGRFdDeG5Ra0ZCVVN4blFrRkVSenRCUVVWWUxHVkJRVThzVjBGR1NUdEJRVWRZTEdsQ1FVRlRMRXRCUVVzN1FVRklTQ3hQUVVGaU96dEJRVTFCTEhOQ1FVRk5MRWxCUVU0c1EwRkJWeXhQUVVGWUxFVkJRVzlDTEdGQlFVY3NVMEZCU0N4RFFVRmhMRWxCUVdJc1EwRkJjRUlzUlVGRFJ5eEpRVVJJTEVOQlExRXNiMEpCUVZrN1FVRkRhRUlzWlVGQlN5eHBRa0ZCVEN4RFFVRjFRaXhQUVVGMlFpeERRVUVyUWl4VlFVRkRMRk5CUVVRc1JVRkJXU3hMUVVGYUxFVkJRWE5DTzBGQlEyNUVMRzlDUVVGVkxGTkJRVllzUjBGQmMwSXNSVUZCZEVJN1FVRkRRU3hwUWtGQlN5eGhRVUZNTEVOQlFXMUNMRXRCUVc1Q0xFVkJRVEJDTEZOQlFURkNMRWRCUVhORExGTkJRVk1zU1VGQlZDeERRVUZqTEVsQlFXUXNRMEZCYlVJc1QwRkJia0lzUTBGQk1rSXNTMEZCTTBJc1JVRkJhME1zVFVGQmVFVTdRVUZEUVN4dFFrRkJVeXhKUVVGVUxFTkJRV01zU1VGQlpDeERRVUZ0UWl4UFFVRnVRaXhEUVVFeVFpeExRVUV6UWl4RlFVRnJReXhQUVVGc1F5eERRVUV3UXl4clFrRkJWVHRCUVVOc1JDeHpRa0ZCVlN4clFrRkJWaXhEUVVFMlFpeFhRVUUzUWl4RlFVRXdReXhOUVVFeFF6dEJRVU5FTEZkQlJrUTdRVUZIUkN4VFFVNUVPenRCUVZGQkxHVkJRVXNzYVVKQlFVd3NSMEZCZVVJc1UwRkJVeXhKUVVGVUxFTkJRV01zU1VGQlpDeERRVUZ0UWl4cFFrRkJOVU03UVVGRFFTeGxRVUZMTEhWQ1FVRk1PMEZCUTBRc1QwRmFTRHRCUVdGRU96czdPenM3UVVGSFNDeFBRVUZQTEU5QlFWQXNSMEZCYVVJc1QwRkJha0k3T3pzN096czdTVU51VEUwc1R5eEhRVU5LTEdsQ1FVRlpMRk5CUVZvc1JVRkJkVU03UVVGQlFUczdRVUZCUVN4TlFVRm9RaXhQUVVGblFpeDFSVUZCVGl4SlFVRk5PenRCUVVGQk96dEJRVU55UXl4UFFVRkxMRk5CUVV3c1IwRkJhVUlzVTBGQmFrSTdRVUZEUVN4UFFVRkxMRTlCUVV3c1IwRkJaU3hWUVVGVkxHZENRVUZXTEVOQlFUSkNMR1ZCUVROQ0xFTkJRV1k3UVVGRFFTeFBRVUZMTEZGQlFVd3NSMEZCWjBJc1ZVRkJWU3huUWtGQlZpeERRVUV5UWl4blFrRkJNMElzUTBGQmFFSTdRVUZEUVN4UFFVRkxMRlZCUVV3c1IwRkJhMElzU1VGQmJFSTdRVUZEUVN4UFFVRkxMRTlCUVV3c1IwRkJaU3hQUVVGbU96dEJRVVZCTEU5QlFVc3NUMEZCVEN4RFFVRmhMRTlCUVdJc1EwRkJjVUlzYTBKQlFWVTdRVUZETjBJc1YwRkJUeXhuUWtGQlVDeERRVUYzUWl4UFFVRjRRaXhGUVVGcFF5eGhRVUZMTzBGQlEzQkRMRkZCUVVVc1kwRkJSanRCUVVOQkxGVkJRVTBzVVVGQlVTeE5RVUZOTEZOQlFVNHNRMEZCWjBJc1QwRkJhRUlzUTBGQmQwSXNTVUZCZUVJc1EwRkJOa0lzVFVGQlN5eFBRVUZzUXl4RlFVRXlReXhOUVVFelF5eERRVUZrT3p0QlFVVkJMRlZCUVVrc1QwRkJUeXhWUVVGUUxFZEJRVzlDTEVkQlFYaENMRVZCUVRaQ08wRkJRek5DTEdWQlFVOHNVMEZCVUN4RFFVRnBRaXhIUVVGcVFpeERRVUZ4UWl4bFFVRnlRanRCUVVOQkxHTkJRVXNzVVVGQlRDeERRVUZqTEV0QlFXUXNSVUZCY1VJc1MwRkJja0lzUTBGQk1rSXNUVUZCTTBJc1IwRkJkVU1zVFVGQlN5eFJRVUZNTEVOQlFXTXNTMEZCWkN4RlFVRnhRaXhwUWtGQmNrSXNSMEZCZVVNc1JVRkJhRVk3UVVGRFFTeGpRVUZMTEZOQlFVd3NRMEZCWlN4alFVRm1MRU5CUVRoQ0xFVkJRVVVzVlVGQlZTeFJRVUZhTEVWQlFYTkNMRTlCUVU4c1QwRkJOMElzUlVGQmMwTXNVVUZCVVN4VFFVRTVReXhGUVVFNVFqczdRVUZGUVN4alFVRkxMRkZCUVV3c1EwRkJZeXhQUVVGa0xFTkJRWE5DTEZWQlFVTXNUMEZCUkN4RlFVRlZMRU5CUVZZc1JVRkJaMEk3UVVGRGNFTXNZMEZCU1N4TlFVRk5MRXRCUVU0c1NVRkJaU3hWUVVGVkxFMUJRVXNzVlVGQmJFTXNSVUZCT0VNN1FVRkROVU1zYjBKQlFWRXNTMEZCVWl4RFFVRmpMR05CUVdRc1EwRkJOa0lzVVVGQk4wSTdRVUZEUVN4clFrRkJTeXhQUVVGTUxFTkJRV0VzUTBGQllpeEZRVUZuUWl4VFFVRm9RaXhEUVVFd1FpeE5RVUV4UWl4RFFVRnBReXhsUVVGcVF6dEJRVU5FTzBGQlEwWXNVMEZNUkR0QlFVOUVMRTlCV2tRc1RVRlpUeXhKUVVGSkxFOUJRVW9zUlVGQllUdEJRVU5zUWl4bFFVRlBMRk5CUVZBc1EwRkJhVUlzUjBGQmFrSXNRMEZCY1VJc1owSkJRWEpDTzBGQlEwRXNZMEZCU3l4UlFVRk1MRU5CUVdNc1MwRkJaQ3hGUVVGeFFpeFRRVUZ5UWl4RFFVRXJRaXhIUVVFdlFpeERRVUZ0UXl4blFrRkJia003TzBGQlJVRXNZMEZCU3l4UlFVRk1MRU5CUVdNc1QwRkJaQ3hEUVVGelFpeFZRVUZETEU5QlFVUXNSVUZCVlN4RFFVRldMRVZCUVdkQ08wRkJRM0JETEdkQ1FVRkxMRkZCUVV3c1EwRkJZeXhEUVVGa0xFVkJRV2xDTEZOQlFXcENMRU5CUVRKQ0xFMUJRVE5DTEVOQlFXdERMR1ZCUVd4RE8wRkJRMEVzWjBKQlFVc3NUMEZCVEN4RFFVRmhMRU5CUVdJc1JVRkJaMElzVTBGQmFFSXNRMEZCTUVJc1RVRkJNVUlzUTBGQmFVTXNaVUZCYWtNN1FVRkRRU3hyUWtGQlVTeExRVUZTTEVOQlFXTXNZMEZCWkN4RFFVRTJRaXhSUVVFM1FqdEJRVU5CTEdOQlFVa3NUVUZCVFN4TFFVRldMRVZCUVdsQ08wRkJRMllzYTBKQlFVc3NVVUZCVEN4RFFVRmpMRU5CUVdRc1JVRkJhVUlzVTBGQmFrSXNRMEZCTWtJc1RVRkJNMElzUTBGQmEwTXNaMEpCUVd4RE8wRkJRMEVzYTBKQlFVc3NUMEZCVEN4RFFVRmhMRU5CUVdJc1JVRkJaMElzVTBGQmFFSXNRMEZCTUVJc1RVRkJNVUlzUTBGQmFVTXNaMEpCUVdwRE8wRkJRMFE3UVVGRFJpeFRRVkpFTzBGQlUwUTdPMEZCUlVRc1dVRkJTeXhWUVVGTUxFZEJRV3RDTEUxQlFVc3NWVUZCVEN4TFFVRnZRaXhMUVVGd1FpeEhRVUUwUWl4SlFVRTFRaXhIUVVGdFF5eExRVUZ5UkR0QlFVTkVMRXRCYUVORU8wRkJhVU5FTEVkQmJFTkVPMEZCYlVORUxFTTdPMEZCUjBnc1QwRkJUeXhQUVVGUUxFZEJRV2xDTEU5QlFXcENPenM3T3pzN08wbERPVU5OTEZrc1IwRkRTaXh6UWtGQldTeFRRVUZhTEVWQlFYVkNPMEZCUVVFN08wRkJRVUU3TzBGQlEzSkNMRTlCUVVzc1UwRkJUQ3hIUVVGcFFpeFRRVUZxUWp0QlFVTkJMRTlCUVVzc1NVRkJUQ3hIUVVGWkxGVkJRVlVzWjBKQlFWWXNRMEZCTWtJc01FSkJRVE5DTEVOQlFWbzdRVUZEUVN4UFFVRkxMRTlCUVV3c1IwRkJaU3hWUVVGVkxHZENRVUZXTEVOQlFUSkNMSFZDUVVFelFpeERRVUZtTzBGQlEwRXNUMEZCU3l4UFFVRk1MRWRCUVdVc1ZVRkJWU3hoUVVGV0xFTkJRWGRDTEhGQ1FVRjRRaXhEUVVGbU8wRkJRMEVzVDBGQlN5eE5RVUZNTEVkQlFXTXNWVUZCVlN4aFFVRldMRU5CUVhkQ0xHdENRVUY0UWl4RFFVRmtPMEZCUTBFc1QwRkJTeXhYUVVGTUxFZEJRVzFDTEZWQlFWVXNZVUZCVml4RFFVRjNRaXh0UWtGQmVFSXNRMEZCYmtJN1FVRkRRU3hQUVVGTExGVkJRVXdzUjBGQmEwSXNRMEZCYkVJN08wRkJSVUVzVDBGQlN5eFBRVUZNTEVOQlFXRXNUMEZCWWl4RFFVRnhRaXhyUWtGQlZUdEJRVU0zUWl4WFFVRlBMR2RDUVVGUUxFTkJRWGRDTEU5QlFYaENMRVZCUVdsRExHRkJRVXM3UVVGQlFTeFZRVU0xUWl4TFFVUTBRaXhIUVVOc1FpeEZRVUZGTEdGQlFVWXNRMEZCWjBJc1QwRkVSU3hEUVVNMVFpeExRVVEwUWpzN08wRkJSM0JETEZWQlFVa3NWVUZCVlN4TlFVRkxMRlZCUVc1Q0xFVkJRU3RDTzBGQlF6ZENMR05CUVVzc1QwRkJUQ3hEUVVGaExFMUJRVXNzVlVGQmJFSXNSVUZCT0VJc1UwRkJPVUlzUTBGQmQwTXNUVUZCZUVNc1EwRkJLME1zVVVGQkwwTTdRVUZEUVN4alFVRkxMRWxCUVV3c1EwRkJWU3hOUVVGTExGVkJRV1lzUlVGQk1rSXNVMEZCTTBJc1EwRkJjVU1zVFVGQmNrTXNRMEZCTkVNc1VVRkJOVU03TzBGQlJVRXNZMEZCU3l4UFFVRk1MRU5CUVdFc1MwRkJZaXhGUVVGdlFpeFRRVUZ3UWl4RFFVRTRRaXhIUVVFNVFpeERRVUZyUXl4UlFVRnNRenRCUVVOQkxHTkJRVXNzU1VGQlRDeERRVUZWTEV0QlFWWXNSVUZCYVVJc1UwRkJha0lzUTBGQk1rSXNSMEZCTTBJc1EwRkJLMElzVVVGQkwwSTdPMEZCUlVFc1kwRkJTeXhWUVVGTUxFZEJRV3RDTEV0QlFXeENPMEZCUTBRN08wRkJSVVFzVlVGQlNTeFBRVUZQTEZWQlFWQXNTVUZCY1VJc1IwRkJla0lzUlVGQk9FSTdRVUZETlVJc1kwRkJTeXhQUVVGTUxFTkJRV0VzVTBGQllpeERRVUYxUWl4SFFVRjJRaXhEUVVFeVFpeHJRa0ZCTTBJN1FVRkRRU3hqUVVGTExGZEJRVXdzUTBGQmFVSXNVMEZCYWtJc1EwRkJNa0lzVFVGQk0wSXNRMEZCYTBNc1pVRkJiRU03UVVGRFJEdEJRVU5HTEV0QmFrSkVPMEZCYTBKRUxFZEJia0pFT3p0QlFYRkNRU3hQUVVGTExFMUJRVXdzUTBGQldTeG5Ra0ZCV2l4RFFVRTJRaXhQUVVFM1FpeEZRVUZ6UXl4WlFVRk5PMEZCUXpGRExGRkJRVWtzVDBGQlR5eFZRVUZRTEVsQlFYRkNMRWRCUVhwQ0xFVkJRVGhDTzBGQlF6VkNMRmxCUVVzc1QwRkJUQ3hEUVVGaExGTkJRV0lzUTBGQmRVSXNUVUZCZGtJc1EwRkJPRUlzYTBKQlFUbENPMEZCUTBFc1dVRkJTeXhYUVVGTUxFTkJRV2xDTEZOQlFXcENMRU5CUVRKQ0xFZEJRVE5DTEVOQlFTdENMR1ZCUVM5Q08wRkJRMFE3UVVGRFJpeEhRVXhFTzBGQlRVUXNRenM3UVVGSFNDeFBRVUZQTEU5QlFWQXNSMEZCYVVJc1dVRkJha0k3T3pzN08wRkRlRU5CT3pzN08wRkJRMEU3T3pzN1FVRkRRVHM3T3p0QlFVTkJPenM3TzBGQlEwRTdPenM3UVVGRFFUczdPenM3TzBGQlIwRXNTVUZCVFN4VFFVRlRMSEZDUVVGWExGTkJRVk1zWVVGQlZDeERRVUYxUWl4alFVRjJRaXhEUVVGWUxFTkJRV1k3TzBGQlJVRXNTVUZCU1N4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzZFVKQlFYWkNMRU5CUVVvc1JVRkJjVVE3UVVGRGJrUXNUVUZCVFN4alFVRmpMSE5DUVVGWkxGTkJRVk1zWVVGQlZDeERRVUYxUWl4MVFrRkJka0lzUTBGQldpeEZRVUUyUkN4SlFVRTNSQ3hEUVVGd1FqdEJRVU5FT3p0QlFVVkVMRWxCUVVrc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEc5Q1FVRjJRaXhEUVVGS0xFVkJRV3RFTzBGQlEyaEVMRTFCUVUwc1QwRkJUeXd5UWtGQmFVSXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHOUNRVUYyUWl4RFFVRnFRaXhEUVVGaU8wRkJRMFE3TzBGQlJVUXNTVUZCU1N4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzWlVGQmRrSXNRMEZCU2l4RlFVRTJRenRCUVVNelF5eE5RVUZOTEdOQlFXTXNjMEpCUVZrc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEdWQlFYWkNMRU5CUVZvc1JVRkJjVVFzUzBGQmNrUXNRMEZCY0VJN1FVRkRSRHM3UVVGRlJDeEpRVUZKTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXg1UWtGQmRrSXNRMEZCU2l4RlFVRjFSRHRCUVVOeVJDeE5RVUZOTEZkQlFWY3NkVUpCUVdFc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEhsQ1FVRjJRaXhEUVVGaUxFTkJRV3BDTzBGQlEwUTdPMEZCUlVRc1NVRkJTU3hUUVVGVExHRkJRVlFzUTBGQmRVSXNWVUZCZGtJc1EwRkJTaXhGUVVGM1F6dEJRVU4wUXl4TlFVRk5MRlZCUVZVc2MwSkJRVmtzVTBGQlV5eGhRVUZVTEVOQlFYVkNMRlZCUVhaQ0xFTkJRVm9zUTBGQmFFSTdRVUZEUkRzN1FVRkZSQ3hKUVVGSkxGTkJRVk1zWVVGQlZDeERRVUYxUWl4bFFVRjJRaXhEUVVGS0xFVkJRVFpETzBGQlF6TkRMRTFCUVUwc1pVRkJaU3d5UWtGQmFVSXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHVkJRWFpDTEVOQlFXcENMRU5CUVhKQ08wRkJRMEVzVlVGQlVTeEhRVUZTTEVOQlFWa3NXVUZCV2p0QlFVTkVPenM3UVVOcVEwUTdPenRCUTBGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96czdPMEZEY0V4Qk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkRjRVJCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEYmtKQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlEzcEVRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEVEVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTXZSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVOd1JFRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEYkVKQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTjBSa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEY2tKQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVNeFFrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenM3UVVOd1FrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3T3pzN1FVTm9SMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlExaEJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTNCRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTnNSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTJSQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVOeVJFRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRMlJCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVOd1JVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkRXa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRM0pFUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTXpRa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkRMMU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTNKQ1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTNoTVFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVU5zUWtFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRMWhCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUXpsTFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTnNUa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVNJc0ltWnBiR1VpT2lKblpXNWxjbUYwWldRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lLR1oxYm1OMGFXOXVJR1VvZEN4dUxISXBlMloxYm1OMGFXOXVJSE1vYnl4MUtYdHBaaWdoYmx0dlhTbDdhV1lvSVhSYmIxMHBlM1poY2lCaFBYUjVjR1Z2WmlCeVpYRjFhWEpsUFQxY0ltWjFibU4wYVc5dVhDSW1KbkpsY1hWcGNtVTdhV1lvSVhVbUptRXBjbVYwZFhKdUlHRW9ieXdoTUNrN2FXWW9hU2x5WlhSMWNtNGdhU2h2TENFd0tUdDJZWElnWmoxdVpYY2dSWEp5YjNJb1hDSkRZVzV1YjNRZ1ptbHVaQ0J0YjJSMWJHVWdKMXdpSzI4clhDSW5YQ0lwTzNSb2NtOTNJR1l1WTI5a1pUMWNJazFQUkZWTVJWOU9UMVJmUms5VlRrUmNJaXhtZlhaaGNpQnNQVzViYjEwOWUyVjRjRzl5ZEhNNmUzMTlPM1JiYjExYk1GMHVZMkZzYkNoc0xtVjRjRzl5ZEhNc1puVnVZM1JwYjI0b1pTbDdkbUZ5SUc0OWRGdHZYVnN4WFZ0bFhUdHlaWFIxY200Z2N5aHVQMjQ2WlNsOUxHd3NiQzVsZUhCdmNuUnpMR1VzZEN4dUxISXBmWEpsZEhWeWJpQnVXMjlkTG1WNGNHOXlkSE45ZG1GeUlHazlkSGx3Wlc5bUlISmxjWFZwY21VOVBWd2lablZ1WTNScGIyNWNJaVltY21WeGRXbHlaVHRtYjNJb2RtRnlJRzg5TUR0dlBISXViR1Z1WjNSb08yOHJLeWx6S0hKYmIxMHBPM0psZEhWeWJpQnpmU2tpTENKamJHRnpjeUJJWldGa1pYSWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaGpiMjUwWVdsdVpYSXBJSHRjYmlBZ0lDQjBhR2x6TG1obFlXUmxjaUE5SUdOdmJuUmhhVzVsY2x4dUlDQWdJSFJvYVhNdWRISnBaMmRsY2lBOUlHTnZiblJoYVc1bGNpNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWMybDBaUzFvWldGa1pYSmZYMjVoZGkxMGNtbG5aMlZ5SnlsY2JpQWdJQ0IwYUdsekxuZHlZWEJ3WlhJZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuTnBkR1V0YUdWaFpHVnlYMTkzY21Gd2NHVnlKeWxjYmlBZ0lDQjBhR2x6TG1SeWIzQkViM2R1SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0lvSnk1a2NtOXdYMTkwY21sbloyVnlKeWxjYmx4dUlDQWdJSFJvYVhNdWRISnBaMmRsY2k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNobEtTQTlQaUI3WEc0Z0lDQWdJQ0IwYUdsekxuUnZaMmRzWlZacGMybGlhV3hwZEhrb0tWeHVJQ0FnSUgwcFhHNWNiaUFnSUNCMGFHbHpMbVJ5YjNCRWIzZHVMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLR1VwSUQwK0lIdGNiaUFnSUNBZ0lHVXVjSEpsZG1WdWRFUmxabUYxYkhRb0tWeHVJQ0FnSUgwcFhHNGdJSDFjYmx4dUlDQjBiMmRuYkdWV2FYTnBZbWxzYVhSNUtDa2dlMXh1SUNBZ0lIUm9hWE11ZDNKaGNIQmxjaTVqYkdGemMweHBjM1F1ZEc5bloyeGxLQ2R6YVhSbExXaGxZV1JsY2w5ZmQzSmhjSEJsY2kwdGFHbGtaU2NwWEc0Z0lIMWNibjFjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCSVpXRmtaWEpjYmlJc0ltbHRjRzl5ZENCaGVHbHZjeUJtY205dElDZGhlR2x2Y3lkY2JtbHRjRzl5ZENCeGN5Qm1jbTl0SUNkeGN5ZGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdZMnhoYzNNZ1RHOWhaRTF2Y21VZ2UxeHVJQ0JqYjI1emRISjFZM1J2Y2loamIyNTBZV2x1WlhJcElIdGNiaUFnSUNCMGFHbHpMbU52Ym5SaGFXNWxjaUE5SUdOdmJuUmhhVzVsY2x4dUlDQWdJSFJvYVhNdVptOXZkR1Z5SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduWm05dmRHVnlMbk5wZEdVdFptOXZkR1Z5SnlsY2JpQWdJQ0IwYUdsekxuZGhhWFFnUFNCbVlXeHpaVnh1SUNBZ0lIUm9hWE11Y0dGblpTQTlJREZjYmlBZ0lDQjBhR2x6TG1SaGRHVWdQU0IyWVhKekxuQnZjM1JFWVhSbFhHNGdJQ0FnZEdocGN5NXBaQ0E5SUhaaGNuTXVjRzl6ZEVsRVhHNGdJQ0FnZEdocGN5NXdiM04wY3lBOUlIUm9hWE11WTI5dWRHRnBibVZ5TG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnk1d2RXSnNhV05oZEdsdmJpMTNjbUZ3Y0dWeUp5bGNibHh1SUNBZ0lIUm9hWE11YzJWc1pXTjBJRDBnZTMxY2JseHVJQ0FnSUhkcGJtUnZkeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2R2Ym14dllXUW5MQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQjNhVzVrYjNjdWMyTnliMnhzVkc4b01Dd2dNQ2xjYmlBZ0lDQjlLVnh1WEc0Z0lDQWdkMmx1Wkc5M0xtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ozQnZjSE4wWVhSbEp5d2daU0E5UGlCN1hHNGdJQ0FnSUNCc2IyTmhkR2x2Ymk1eVpXeHZZV1FvS1Z4dUlDQWdJSDBwWEc1Y2JpQWdJQ0IzYVc1a2IzY3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25jMk55YjJ4c0p5d2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ1kyOXVjM1FnYzJOeWIyeHNRbTkwZEc5dElEMGdaRzlqZFcxbGJuUXVZbTlrZVM1elkzSnZiR3hJWldsbmFIUWdMU0JrYjJOMWJXVnVkQzVrYjJOMWJXVnVkRVZzWlcxbGJuUXVjMk55YjJ4c1ZHOXdJQzBnS0hkcGJtUnZkeTVwYm01bGNraGxhV2RvZENBcklIUm9hWE11Wm05dmRHVnlMbTltWm5ObGRFaGxhV2RvZENsY2JseHVJQ0FnSUNBZ2FXWWdLSE5qY205c2JFSnZkSFJ2YlNBOFBTQW9kMmx1Wkc5M0xtbHVibVZ5U0dWcFoyaDBJQ29nTWlrZ0ppWWdJWFJvYVhNdWQyRnBkQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbUZrWkZCdmMzUW9LVnh1SUNBZ0lDQWdJQ0IwYUdsekxuZGhhWFFnUFNCMGNuVmxYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSFJvYVhNdVoyVjBRV04wYVhabEtDbGNiaUFnSUNCOUtWeHVJQ0I5WEc1Y2JpQWdZV1JrVUc5emRDZ3BJSHRjYmlBZ0lDQmpiMjV6ZENCa1lYUmhJRDBnZTF4dUlDQWdJQ0FnWVdOMGFXOXVPaUFuY0hWaWJHbGpZWFJwYjI1ZmJHOWhaRjl0YjNKbEp5eGNiaUFnSUNBZ0lIQnZjM1JmWkdGMFpUb2dkR2hwY3k1a1lYUmxMRnh1SUNBZ0lDQWdjRzl6ZEY5cFpEb2dkR2hwY3k1cFpDeGNiaUFnSUNBZ0lIQmhaMlU2SUhSb2FYTXVjR0ZuWlZ4dUlDQWdJSDFjYmx4dUlDQWdJR0Y0YVc5ekxuQnZjM1FvWVdwaGVIVnliQ3dnY1hNdWMzUnlhVzVuYVdaNUtHUmhkR0VwS1Z4dUlDQWdJQ0FnTG5Sb1pXNG9jbVZ6SUQwK0lIdGNiaUFnSUNBZ0lDQWdjbVZ6TG1SaGRHRXVaR0YwWVM1d2IzTjBjeTVtYjNKRllXTm9LSEJ2YzNRZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMjl1ZEdGcGJtVnlMbWx1YzJWeWRFRmthbUZqWlc1MFNGUk5UQ2duWW1WbWIzSmxaVzVrSnl3Z2NHOXpkQzVqYjI1MFpXNTBLVnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbkJ2YzNSeklEMGdkR2hwY3k1amIyNTBZV2x1WlhJdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNnbkxuTnBibWRzWlY5ZmQzSmhjSEJsY2ljcFhHNGdJQ0FnSUNBZ0lIUm9hWE11Y0dGblpTQXJQU0F4WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkMkZwZENBOUlHWmhiSE5sWEc0Z0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnTG1OaGRHTm9LR1Z5Y2lBOVBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0dWeWNpbGNiaUFnSUNBZ0lIMHBYRzRnSUgxY2JseHVJQ0JuWlhSQlkzUnBkbVVvS1NCN1hHNGdJQ0FnYkdWMElITmxiR1ZqZENBOUlIdDlYRzRnSUNBZ2RHaHBjeTV3YjNOMGN5NW1iM0pGWVdOb0tIQnZjM1FnUFQ0Z2UxeHVJQ0FnSUNBZ1kyOXVjM1FnZXlCMGIzQWdmU0E5SUhCdmMzUXVaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0NsY2JpQWdJQ0FnSUdsbUlDaDBiM0FnUENCM2FXNWtiM2N1YVc1dVpYSklaV2xuYUhRZ0x5QXlJQ1ltSUhSdmNDQStJREFwSUh0Y2JpQWdJQ0FnSUNBZ2MyVnNaV04wSUQwZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJwZEd4bE9pQndiM04wTG1SaGRHRnpaWFF1ZEdsMGJHVXNYRzRnSUNBZ0lDQWdJQ0FnY0dGMGFEb2djRzl6ZEM1a1lYUmhjMlYwTG5CaGRHaGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMHBYRzVjYmlBZ0lDQnBaaUFvZEdocGN5NXpaV3hsWTNRdWRHbDBiR1VnSVQwOUlITmxiR1ZqZEM1MGFYUnNaU0FtSmlCelpXeGxZM1F1ZEdsMGJHVWdJVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV6Wld4bFkzUWdQU0J6Wld4bFkzUmNiaUFnSUNBZ0lIUm9hWE11ZFhCa1lYUmxVR0ZuWlNncFhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2RYQmtZWFJsVUdGblpTZ3BJSHRjYmlBZ0lDQmtiMk4xYldWdWRDNTBhWFJzWlNBOUlHQWtlM1JvYVhNdWMyVnNaV04wTG5ScGRHeGxmU0F0SUVWamNtbDBkWEpsY3lCT2RXMWxjbWx4ZFdWellGeHVJQ0FnSUhkcGJtUnZkeTVvYVhOMGIzSjVMbkIxYzJoVGRHRjBaU2g3ZlN3Z0p5Y3NJSFJvYVhNdWMyVnNaV04wTG5CaGRHZ3BYRzRnSUNBZ2QybHVaRzkzTG1ocGMzUnZjbmt1YzJOeWIyeHNVbVZ6ZEc5eVlYUnBiMjRnUFNBbmJXRnVkV0ZzSjF4dUlDQjlYRzU5WEc0aUxDSmxlSEJ2Y25RZ1pHVm1ZWFZzZENCamJHRnpjeUJRZFdKc2FXTmhkR2x2Ym5NZ2UxeHVJQ0JqYjI1emRISjFZM1J2Y2loamIyNTBZV2x1WlhJcElIdGNiaUFnSUNCMGFHbHpMbU52Ym5SaGFXNWxjaUE5SUdOdmJuUmhhVzVsY2x4dUlDQWdJSFJvYVhNdWFHVmhaR1Z5WDJ4cGMzUWdQU0JqYjI1MFlXbHVaWEl1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbWhsWVdSbGNsOWZiR2x6ZENjcFhHNGdJQ0FnZEdocGN5NW9aV0ZrWlhKZmFYUmxiWE1nUFNCamIyNTBZV2x1WlhJdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNnbkxtaGxZV1JsY2w5ZmFYUmxiU0JpZFhSMGIyNG5LVnh1SUNBZ0lIUm9hWE11YUdWaFpHVnlYM0J5WlhZZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxtaGxZV1JsY2w5ZmJtRjJMUzF3Y21WMkp5bGNiaUFnSUNCMGFHbHpMbWhsWVdSbGNsOXVaWGgwSUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0lvSnk1b1pXRmtaWEpmWDI1aGRpMHRibVY0ZENjcFhHNGdJQ0FnZEdocGN5NW9aV0ZrWlhKZmFXNWtaWGdnUFNCMWJtUmxabWx1WldSY2JpQWdJQ0IwYUdsekxtaGxZV1JsY2w5dlptWnpaWFFnUFNBMVhHNGdJQ0FnZEdocGN5NW9aV0ZrWlhKZmIyWm1jMlYwVjJsa2RHZ2dQU0IwYUdsekxtaGxZV1JsY2w5c2FYTjBMbkJoY21WdWRFNXZaR1V1YjJabWMyVjBWMmxrZEdnZ0x5QTFYRzVjYmlBZ0lDQjBhR2x6TG1obFlXUmxjbDlwZEdWdGN5NW1iM0pGWVdOb0tDaHBkR1Z0TENCcGJtUmxlQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2FXWWdLR2wwWlcwdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektDZHBkR1Z0TFMxaFkzUnBkbVVuS1NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1obFlXUmxjbDlwYm1SbGVDQTlJR2x1WkdWNFhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNsY2JseHVJQ0FnSUhSb2FYTXVhR1ZoWkdWeVgyNWxlSFF1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NW9aV0ZrWlhKZmFXNWtaWGdnUENCMGFHbHpMbWhsWVdSbGNsOXBkR1Z0Y3k1c1pXNW5kR2dnTFNBeEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsU0dWaFpHVnlLSFJvYVhNdWFHVmhaR1Z5WDJsdVpHVjRJQ3NnTVNsY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnZEdocGN5NW9aV0ZrWlhKZmNISmxkaTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lHbG1JQ2gwYUdsekxtaGxZV1JsY2w5cGJtUmxlQ0ErUFNBeEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsU0dWaFpHVnlLSFJvYVhNdWFHVmhaR1Z5WDJsdVpHVjRJQzBnTVNsY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5S1Z4dUlDQjlYRzVjYmlBZ2RYQmtZWFJsU0dWaFpHVnlLRzVsZDBsdVpHVjRLU0I3WEc0Z0lDQWdMeThnWTI5dWMyOXNaUzVzYjJjb2RHaHBjeTVvWldGa1pYSmZhVzVrWlhncFhHNGdJQ0FnTHk4Z1kyOXVjMjlzWlM1c2IyY29ibVYzU1c1a1pYZ3BYRzRnSUNBZ2RHaHBjeTVvWldGa1pYSmZhWFJsYlhOYmRHaHBjeTVvWldGa1pYSmZhVzVrWlhoZExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0oybDBaVzB0TFdGamRHbDJaU2NwWEc1Y2JpQWdJQ0IwYUdsekxtaGxZV1JsY2w5cGJtUmxlQ0E5SUc1bGQwbHVaR1Y0WEc0Z0lDQWdkR2hwY3k1b1pXRmtaWEpmYVhSbGJYTmJkR2hwY3k1b1pXRmtaWEpmYVc1a1pYaGRMbU5zWVhOelRHbHpkQzVoWkdRb0oybDBaVzB0TFdGamRHbDJaU2NwWEc1Y2JpQWdJQ0JwWmlBb2RHaHBjeTVvWldGa1pYSmZhVzVrWlhnZ1BEMGdNQ2tnZTF4dUlDQWdJQ0FnZEdocGN5NW9aV0ZrWlhKZmNISmxkaTVqYkdGemMweHBjM1F1WVdSa0tDZG9aV0ZrWlhKZlgyNWhkaTB0WkdsellXSnNaU2NwWEc0Z0lDQWdmU0JsYkhObElHbG1JQ2gwYUdsekxtaGxZV1JsY2w5cGJtUmxlQ0ErUFNCMGFHbHpMbWhsWVdSbGNsOXBkR1Z0Y3k1c1pXNW5kR2dnTFNBeEtTQjdYRzRnSUNBZ0lDQjBhR2x6TG1obFlXUmxjbDl1WlhoMExtTnNZWE56VEdsemRDNWhaR1FvSjJobFlXUmxjbDlmYm1GMkxTMWthWE5oWW14bEp5bGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnZEdocGN5NW9aV0ZrWlhKZmJtVjRkQzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2RvWldGa1pYSmZYMjVoZGkwdFpHbHpZV0pzWlNjcFhHNGdJQ0FnSUNCMGFHbHpMbWhsWVdSbGNsOXdjbVYyTG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjJobFlXUmxjbDlmYm1GMkxTMWthWE5oWW14bEp5bGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpiMnhsTG14dlp5aDBhR2x6TG1obFlXUmxjbDlwYm1SbGVDQXRJSFJvYVhNdWFHVmhaR1Z5WDI5bVpuTmxkQ2xjYmlBZ0lDQnBaaUFvZEdocGN5NW9aV0ZrWlhKZmFXNWtaWGdnTFNCMGFHbHpMbWhsWVdSbGNsOXZabVp6WlhRZ1BqMGdNQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdiMlptYzJWMElEMGdLQ2gwYUdsekxtaGxZV1JsY2w5cGJtUmxlQ0F0SUhSb2FYTXVhR1ZoWkdWeVgyOW1abk5sZENrZ0t5QXhLU0FxSUhSb2FYTXVhR1ZoWkdWeVgyOW1abk5sZEZkcFpIUm9YRzVjYmlBZ0lDQWdJSFJvYVhNdWFHVmhaR1Z5WDJ4cGMzUXVjM1I1YkdVdWRISmhibk5tYjNKdElEMGdZSFJ5WVc1emJHRjBaVmdvTFNSN2IyWm1jMlYwZlhCNEtXQmNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnZEdocGN5NW9aV0ZrWlhKZmJHbHpkQzV6ZEhsc1pTNTBjbUZ1YzJadmNtMGdQU0FuZEhKaGJuTnNZWFJsV0Nnd2NIZ3BKMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVJaXdpYVcxd2IzSjBJR0Y0YVc5eklHWnliMjBnSjJGNGFXOXpKMXh1YVcxd2IzSjBJSEZ6SUdaeWIyMGdKM0Z6SjF4dVhHNWpiR0Z6Y3lCU1pYTjFiSFJ6SUh0Y2JpQWdZMjl1YzNSeWRXTjBiM0lvWTI5dWRHRnBibVZ5S1NCN1hHNWNiaUFnSUNCMGFHbHpMbU52Ym5SaGFXNWxjaUE5SUdOdmJuUmhhVzVsY2x4dUlDQWdJSFJvYVhNdWNtVnpkV3gwYzE5aWRYUjBiMjV6SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0p5NW9aV0ZrWlhKZlgzTjNhWFJqYUNjcFhHNGdJQ0FnZEdocGN5NXlaWE4xYkhSelgyTnZkVzUwSUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0p5NW9aV0ZrWlhKZlgySjFkSFJ2YmlCemNHRnVKeWxjYmx4dUlDQWdJSFJvYVhNdWNtVnpkV3gwYzE5MFlXSnpJRDBnWTI5dWRHRnBibVZ5TG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnk1c2FYTjBYMTlqYjI1MFlXbHVaWEluS1Z4dUlDQWdJSFJvYVhNdWNtVnpkV3gwYzE5amIyNTBZV2x1WlhJZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25MbXhwYzNRbktWeHVYRzRnSUNBZ2RHaHBjeTV5WlhOMWJIUnpYM05sYkdWamRHVmtJRDBnWTI5dWRHRnBibVZ5TG5GMVpYSjVVMlZzWldOMGIzSW9KeTV5WlhOMWJIUnpYMTl6Wld4bFkzUmxaQzFtYVd4MFpYSnpKeWxjYmlBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mYzJWc1pXTjBaV1JmWTI5dWRHRnBibVZ5SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0lvSnk1elpXeGxZM1JsWkY5ZlkyOXVkR0ZwYm1WeUp5bGNiaUFnSUNCMGFHbHpMbkpsYzNWc2RITmZjMlZzWldOMFpXUmZaR1ZzWlhSbElEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXpaV3hsWTNSbFpGOWZaR1ZzWlhSbEp5bGNiaUFnSUNCMGFHbHpMbkpsYzNWc2RITmZjMlZzWldOMFpXUmZiVzlrWld3Z1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxtbDBaVzB0TFcxdlpHVnNKeWxjYmlBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mYzJWc1pXTjBaV1JmYVhSbGJYTWdQU0JiWFZ4dVhHNGdJQ0FnZEdocGN5NW1hV3gwWlhKelgzWnBjMmxpYVd4cGRIa2dQU0JqYjI1MFlXbHVaWEl1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbWhsWVdSbGNsOWZZblYwZEc5dUxTMW1hV3gwWlhJbktWeHVJQ0FnSUhSb2FYTXVabWxzZEdWeWMxOWpiMjUwWVdsdVpYSWdQU0JqYjI1MFlXbHVaWEl1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbkpsYzNWc2RITmZYMlpwYkhSbGNuTW5LVnh1SUNBZ0lIUm9hWE11Wm1sc2RHVnljeUE5SUdOdmJuUmhhVzVsY2k1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NjdVptbHNkR1Z5SnlsY2JseHVJQ0FnSUhSb2FYTXVZMjl1ZEdGcGJtVnlWRzlHYVhnZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25MblJoZUc5dWIyMTVMV1pwZUNjcFhHNWNiaUFnSUNCMGFHbHpMbk5sYkdWamRHVmtYM1JoWWlBOUlEQmNiaUFnSUNCMGFHbHpMbk5sYkdWamRHVmtYMlpwYkhSbGNuTWdQU0JiWFZ4dUlDQWdJSFJvYVhNdVlYWmhhV3hoWW14bFgyWnBiSFJsY25NZ1BTQmJYVnh1WEc0Z0lDQWdkR2hwY3k1eVpYTjFiSFJ6WDJKMWRIUnZibk11Wm05eVJXRmphQ2hpZFhSMGIyNGdQVDRnZTF4dUlDQWdJQ0FnWW5WMGRHOXVMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2daU0E5UGlCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11YzJWMFZHRmljeWhsTG1OMWNuSmxiblJVWVhKblpYUXVaR0YwWVhObGRDNXBibVJsZUNsY2JpQWdJQ0FnSUgwcFhHNGdJQ0FnZlNsY2JseHVJQ0FnSUhSb2FYTXVabWxzZEdWeWMxOTJhWE5wWW1sc2FYUjVMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2RHaHBjeTVtYVd4MFpYSnpYMk52Ym5SaGFXNWxjaTVqYkdGemMweHBjM1F1ZEc5bloyeGxLQ2R5WlhOMWJIUnpYMTltYVd4MFpYSnpMUzFoWTNScGRtVW5LVnh1SUNBZ0lIMHBYRzVjYmlBZ0lDQjBhR2x6TG1OdmJuUmhhVzVsY2xSdlJtbDRMbVp2Y2tWaFkyZ29ZMjl1ZENBOVBpQjdYRzRnSUNBZ0lDQmpiMjV6ZENCN0lIZHBaSFJvSUgwZ1BTQmpiMjUwTG5GMVpYSjVVMlZzWldOMGIzSW9KMnhwSnlrdVoyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLQ2xjYmlBZ0lDQWdJR052Ym5RdWMzUjViR1V1ZDJsa2RHZ2dQU0JnSkh0M2FXUjBhQ0FxSURKOWNIaGdYRzRnSUNBZ2ZTbGNibHh1SUNBZ0lIUm9hWE11Wm1sc2RHVnljeTVtYjNKRllXTm9LR1pwYkhSbGNpQTlQaUI3WEc0Z0lDQWdJQ0JtYVd4MFpYSXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25ZMnhwWTJzbkxDQmxJRDArSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTUwYjJkbmJHVkdhV3gwWlhJb1pTNWpkWEp5Wlc1MFZHRnlaMlYwS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbk5sWVhKamFDZ3BYRzRnSUNBZ0lDQjlLVnh1SUNBZ0lIMHBYRzVjYmlBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mYzJWc1pXTjBaV1JmWkdWc1pYUmxMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2RHaHBjeTVqYkdWaGNrWnBiSFJsY2lncFhHNGdJQ0FnZlNsY2JpQWdmVnh1WEc0Z0lITmxkRlJoWW5Nb2FXNWtaWGdwSUh0Y2JpQWdJQ0JwWmlBb2RHaHBjeTV6Wld4bFkzUmxaRjkwWVdJZ0lUMDlJR2x1WkdWNEtTQjdYRzRnSUNBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mZEdGaWMxdDBhR2x6TG5ObGJHVmpkR1ZrWDNSaFlsMHVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ25iR2x6ZEY5ZlkyOXVkR0ZwYm1WeUxTMWhZM1JwZG1VbktWeHVJQ0FnSUNBZ2RHaHBjeTV5WlhOMWJIUnpYMkoxZEhSdmJuTmJkR2hwY3k1elpXeGxZM1JsWkY5MFlXSmRMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMmhsWVdSbGNsOWZZblYwZEc5dUxTMWhZM1JwZG1VbktWeHVYRzRnSUNBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mZEdGaWMxdHBibVJsZUYwdVkyeGhjM05NYVhOMExtRmtaQ2duYkdsemRGOWZZMjl1ZEdGcGJtVnlMUzFoWTNScGRtVW5LVnh1SUNBZ0lDQWdkR2hwY3k1eVpYTjFiSFJ6WDJKMWRIUnZibk5iYVc1a1pYaGRMbU5zWVhOelRHbHpkQzVoWkdRb0oyaGxZV1JsY2w5ZlluVjBkRzl1TFMxaFkzUnBkbVVuS1Z4dVhHNGdJQ0FnSUNCMGFHbHpMbk5sYkdWamRHVmtYM1JoWWlBOUlHbHVaR1Y0WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnZEc5bloyeGxSbWxzZEdWeUtHVnNaVzFsYm5RcElIdGNiaUFnSUNCamIyNXpkQ0JtYVd4MFpYSWdQU0I3WEc0Z0lDQWdJQ0J6YkhWbk9pQmxiR1Z0Wlc1MExtUmhkR0Z6WlhRdWMyeDFaeXhjYmlBZ0lDQWdJSFJoZUc5dWIyMTVPaUJsYkdWdFpXNTBMbVJoZEdGelpYUXVkR0Y0YjI1dmJYa3NYRzRnSUNBZ0lDQnVZVzFsT2lCbGJHVnRaVzUwTG1SaGRHRnpaWFF1Ym1GdFpWeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb0lXVnNaVzFsYm5RdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektDZG1hV3gwWlhJdExXRmpkR2wyWlNjcEtTQjdYRzRnSUNBZ0lDQjBhR2x6TG5ObGJHVmpkR1ZrWDJacGJIUmxjbk11Y0hWemFDaG1hV3gwWlhJcFhHNGdJQ0FnSUNCMGFHbHpMbUZrWkVacGJIUmxjaWhtYVd4MFpYSXBYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUhSb2FYTXVjbVZ0YjNabFJtbHNkR1Z5S0dacGJIUmxjaWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQmxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNTBiMmRuYkdVb0oyWnBiSFJsY2kwdFlXTjBhWFpsSnlsY2JpQWdmVnh1WEc0Z0lHRmtaRVpwYkhSbGNpaG1hV3gwWlhJcElIdGNiaUFnSUNCamIyNXpkQ0JsYkdWdFpXNTBJRDBnZEdocGN5NXlaWE4xYkhSelgzTmxiR1ZqZEdWa1gyMXZaR1ZzTG1Oc2IyNWxUbTlrWlNoMGNuVmxLVnh1SUNBZ0lHVnNaVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG1sMFpXMWZYMnhoWW1Wc0p5a3VkR1Y0ZEVOdmJuUmxiblFnUFNCbWFXeDBaWEl1Ym1GdFpWeHVJQ0FnSUdWc1pXMWxiblF1WkdGMFlYTmxkQzV6YkhWbklEMGdabWxzZEdWeUxuTnNkV2RjYmlBZ0lDQmxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0oybDBaVzB0TFcxdlpHVnNKeWxjYmx4dUlDQWdJSFJvYVhNdWNtVnpkV3gwYzE5elpXeGxZM1JsWkY5amIyNTBZV2x1WlhJdVlYQndaVzVrUTJocGJHUW9aV3hsYldWdWRDbGNiaUFnSUNCMGFHbHpMbkpsYzNWc2RITmZjMlZzWldOMFpXUmZhWFJsYlhNdWNIVnphQ2hsYkdWdFpXNTBLVnh1WEc0Z0lDQWdaV3hsYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWFYUmxiVjlmWkdWc1pYUmxKeWt1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0JsSUQwK0lIdGNiaUFnSUNBZ0lHTnZibk4wSUdacGJDQTlJSHRjYmlBZ0lDQWdJQ0FnYzJ4MVp6b2daUzVqZFhKeVpXNTBWR0Z5WjJWMExuQmhjbVZ1ZEU1dlpHVXVaR0YwWVhObGRDNXpiSFZuTEZ4dUlDQWdJQ0FnSUNCMFlYaHZibTl0ZVRvZ1pTNWpkWEp5Wlc1MFZHRnlaMlYwTG5CaGNtVnVkRTV2WkdVdVpHRjBZWE5sZEM1MFlYaHZibTl0ZVN4Y2JpQWdJQ0FnSUNBZ2JtRnRaVG9nWlM1amRYSnlaVzUwVkdGeVoyVjBMbkJoY21WdWRFNXZaR1V1WkdGMFlYTmxkQzV1WVcxbFhHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lIUm9hWE11Y21WdGIzWmxSbWxzZEdWeUtHWnBiQ2xjYmlBZ0lDQWdJSFJvYVhNdWMyVmhjbU5vS0NsY2JpQWdJQ0I5S1Z4dUlDQWdJSFJvYVhNdWMyVjBVMlZzWldOMFpXUldhWE5wWW1sc2FYUjVLQ2xjYmlBZ2ZWeHVYRzRnSUhKbGJXOTJaVVpwYkhSbGNpaG1hV3gwWlhJcElIdGNiaUFnSUNCamIyNXpkQ0JsYkdWdFpXNTBJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpaGdMbk5sYkdWamRHVmtYMTlwZEdWdFcyUmhkR0V0YzJ4MVp6MGtlMlpwYkhSbGNpNXpiSFZuZlYxZ0tWeHVJQ0FnSUdWc1pXMWxiblF1Y21WdGIzWmxLQ2xjYmx4dUlDQWdJR052Ym5OMElHSjFkSFJ2YmlBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvWUM1MFlYaHZibTl0ZVY5ZlptbHNkR1Z5Y3lBdVptbHNkR1Z5VzJSaGRHRXRjMngxWnowa2UyWnBiSFJsY2k1emJIVm5mVjFnS1Z4dUlDQWdJR0oxZEhSdmJpNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDZG1hV3gwWlhJdExXRmpkR2wyWlNjcFhHNWNiaUFnSUNCamIyNXpkQ0JwYm1SbGVDQTlJSFJvYVhNdWMyVnNaV04wWldSZlptbHNkR1Z5Y3k1bWFXNWtTVzVrWlhnb2MyVnNaV04wWldRZ1BUNGdlMXh1SUNBZ0lDQWdjbVYwZFhKdUlITmxiR1ZqZEdWa0xuTnNkV2NnUFQwOUlHWnBiSFJsY2k1emJIVm5JQ1ltSUhObGJHVmpkR1ZrTG5SaGVHOXViMjE1SUQwOVBTQm1hV3gwWlhJdWRHRjRiMjV2YlhsY2JpQWdJQ0I5S1Z4dUlDQWdJSFJvYVhNdWMyVnNaV04wWldSZlptbHNkR1Z5Y3k1emNHeHBZMlVvYVc1a1pYZ3NJREVwWEc1Y2JpQWdJQ0IwYUdsekxuTmxkRk5sYkdWamRHVmtWbWx6YVdKcGJHbDBlU2dwWEc0Z0lDQWdkR2hwY3k1MWNHUmhkR1ZHYVd4MFpYSnpWbWx6YVdKcGJHbDBlU2dwWEc0Z0lIMWNibHh1SUNCamJHVmhja1pwYkhSbGNpZ3BJSHRjYmlBZ0lDQjBhR2x6TG1acGJIUmxjbk11Wm05eVJXRmphQ2htYVd4MFpYSWdQVDRnZTF4dUlDQWdJQ0FnWm1sc2RHVnlMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMlpwYkhSbGNpMHRZV04wYVhabEp5bGNiaUFnSUNCOUtWeHVJQ0FnSUhSb2FYTXVjMlZzWldOMFpXUmZabWxzZEdWeWN5QTlJRnRkWEc1Y2JpQWdJQ0IwYUdsekxuSmxjM1ZzZEhOZmMyVnNaV04wWldSZmFYUmxiWE11Wm05eVJXRmphQ2hwZEdWdElEMCtJSHRjYmlBZ0lDQWdJR2wwWlcwdWNtVnRiM1psS0NsY2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnZEdocGN5NXpaWFJUWld4bFkzUmxaRlpwYzJsaWFXeHBkSGtvS1Z4dVhHNGdJQ0FnZEdocGN5NXpaV0Z5WTJnb0tWeHVJQ0I5WEc1Y2JpQWdjMlYwVTJWc1pXTjBaV1JXYVhOcFltbHNhWFI1S0NrZ2UxeHVJQ0FnSUdsbUlDaDBhR2x6TG5ObGJHVmpkR1ZrWDJacGJIUmxjbk11YkdWdVozUm9JRDRnTUNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV5WlhOMWJIUnpYM05sYkdWamRHVmtMbU5zWVhOelRHbHpkQzVoWkdRb0ozSmxjM1ZzZEhOZlgzTmxiR1ZqZEdWa0xXWnBiSFJsY25NdExXRmpkR2wyWlNjcFhHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJSFJvYVhNdWNtVnpkV3gwYzE5elpXeGxZM1JsWkM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkeVpYTjFiSFJ6WDE5elpXeGxZM1JsWkMxbWFXeDBaWEp6TFMxaFkzUnBkbVVuS1Z4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhWd1pHRjBaVVpwYkhSbGNuTldhWE5wWW1sc2FYUjVLQ2tnZTF4dUlDQWdJSFJvYVhNdVptbHNkR1Z5Y3k1bWIzSkZZV05vS0dacGJIUmxjaUE5UGlCN1hHNGdJQ0FnSUNCcFppQW9kR2hwY3k1aGRtRnBiR0ZpYkdWZlptbHNkR1Z5Y3k1cGJtUmxlRTltS0dacGJIUmxjaTVrWVhSaGMyVjBMbk5zZFdjcElEMDlQU0F0TVNrZ2UxeHVJQ0FnSUNBZ0lDQm1hV3gwWlhJdVkyeGhjM05NYVhOMExtRmtaQ2duWm1sc2RHVnlMUzFwYm1GamRHbDJaU2NwWEc0Z0lDQWdJQ0FnSUdacGJIUmxjaTVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2RtYVd4MFpYSXRMV0ZqZEdsMlpTY3BYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQm1hV3gwWlhJdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnblptbHNkR1Z5TFMxcGJtRmpkR2wyWlNjcFhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNsY2JpQWdmVnh1WEc0Z0lITmxZWEpqYUNncElIdGNiaUFnSUNCamIyNXpkQ0JrWVhSaElEMGdlMXh1SUNBZ0lDQWdZV04wYVc5dU9pQW5jMlZoY21Ob1gyWnBiSFJsY25NbkxGeHVJQ0FnSUNBZ2NYVmxjbms2SUhObFlYSmphSEYxWlhKNUxGeHVJQ0FnSUNBZ1ptbHNkR1Z5Y3pvZ2RHaHBjeTV6Wld4bFkzUmxaRjltYVd4MFpYSnpYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1lYaHBiM011Y0c5emRDaGhhbUY0ZFhKc0xDQnhjeTV6ZEhKcGJtZHBabmtvWkdGMFlTa3BYRzRnSUNBZ0lDQXVkR2hsYmloeVpYTndiMjV6WlNBOVBpQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWNtVnpkV3gwYzE5amIyNTBZV2x1WlhJdVptOXlSV0ZqYUNnb1kyOXVkR0ZwYm1WeUxDQnBibVJsZUNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmhhVzVsY2k1cGJtNWxja2hVVFV3Z1BTQW5KMXh1SUNBZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6ZFd4MGMxOWpiM1Z1ZEZ0cGJtUmxlRjB1YVc1dVpYSklWRTFNSUQwZ2NtVnpjRzl1YzJVdVpHRjBZUzVrWVhSaExuSmxjM1ZzZEhOYmFXNWtaWGhkTG14bGJtZDBhRnh1SUNBZ0lDQWdJQ0FnSUhKbGMzQnZibk5sTG1SaGRHRXVaR0YwWVM1eVpYTjFiSFJ6VzJsdVpHVjRYUzVtYjNKRllXTm9LSEpsYzNWc2RDQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWVdsdVpYSXVhVzV6WlhKMFFXUnFZV05sYm5SSVZFMU1LQ2RpWldadmNtVmxibVFuTENCeVpYTjFiSFFwWEc0Z0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMbUYyWVdsc1lXSnNaVjltYVd4MFpYSnpJRDBnY21WemNHOXVjMlV1WkdGMFlTNWtZWFJoTG1GMllXbHNZV0pzWlY5bWFXeDBaWEp6WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkWEJrWVhSbFJtbHNkR1Z5YzFacGMybGlhV3hwZEhrb0tWeHVJQ0FnSUNBZ2ZTbGNiaUFnZlZ4dWZWeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJRkpsYzNWc2RITmNiaUlzSW1Oc1lYTnpJRkoxWW5KcFkzTWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaGpiMjUwWVdsdVpYSXNJR1JsYzJ0MGIzQWdQU0IwY25WbEtTQjdYRzRnSUNBZ2RHaHBjeTVqYjI1MFlXbHVaWElnUFNCamIyNTBZV2x1WlhKY2JpQWdJQ0IwYUdsekxtSjFkSFJ2Ym5NZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25MbWwwWlcxZlgySjFkSFJ2YmljcFhHNGdJQ0FnZEdocGN5NTNjbUZ3Y0dWeWN5QTlJR052Ym5SaGFXNWxjaTV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLQ2N1YVhSbGJWOWZkM0poY0hCbGNpY3BYRzRnSUNBZ2RHaHBjeTVzWVhOMFgybHVaR1Y0SUQwZ2JuVnNiRnh1SUNBZ0lIUm9hWE11WkdWemEzUnZjQ0E5SUdSbGMydDBiM0JjYmx4dUlDQWdJSFJvYVhNdVluVjBkRzl1Y3k1bWIzSkZZV05vS0dKMWRIUnZiaUE5UGlCN1hHNGdJQ0FnSUNCaWRYUjBiMjR1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0JsSUQwK0lIdGNiaUFnSUNBZ0lDQWdaUzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BYRzRnSUNBZ0lDQWdJR052Ym5OMElHbHVaR1Y0SUQwZ1FYSnlZWGt1Y0hKdmRHOTBlWEJsTG1sdVpHVjRUMll1WTJGc2JDaDBhR2x6TG1KMWRIUnZibk1zSUdKMWRIUnZiaWxjYmx4dUlDQWdJQ0FnSUNCcFppQW9kMmx1Wkc5M0xtbHVibVZ5VjJsa2RHZ2dQQ0EzTURBcElIdGNiaUFnSUNBZ0lDQWdJQ0JpZFhSMGIyNHVZMnhoYzNOTWFYTjBMbUZrWkNnbmJXOWlhV3hsTFdGamRHbDJaU2NwWEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTUzY21Gd2NHVnljMXRwYm1SbGVGMHVjM1I1YkdVdWFHVnBaMmgwSUQwZ1lDUjdkR2hwY3k1M2NtRndjR1Z5YzF0cGJtUmxlRjB1WTJocGJHUkZiR1Z0Wlc1MFEyOTFiblFnS2lBMk1IMXdlR0JjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMbU52Ym5SaGFXNWxjaTV6WTNKdmJHeEpiblJ2Vm1sbGR5aDdJR0psYUdGMmFXOXlPaUFuYzIxdmIzUm9KeXdnWW14dlkyczZJQ2R6ZEdGeWRDY3NJR2x1YkdsdVpUb2dKMjVsWVhKbGMzUW5JSDBwWEc1Y2JpQWdJQ0FnSUNBZ0lDQjBhR2x6TG5keVlYQndaWEp6TG1admNrVmhZMmdvS0hkeVlYQndaWElzSUdrcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUNFOVBTQnBibVJsZUNCOGZDQnBibVJsZUNBOVBUMGdkR2hwY3k1c1lYTjBYMmx1WkdWNEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHlZWEJ3WlhJdWMzUjViR1V1Y21WdGIzWmxVSEp2Y0dWeWRIa29KMmhsYVdkb2RDY3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WW5WMGRHOXVjMXRwWFM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkdGIySnBiR1V0WVdOMGFYWmxKeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aR1Z6YTNSdmNDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdKMWRIUnZiaTVqYkdGemMweHBjM1F1WVdSa0tDZGtaWE5yZEc5d0xXRmpkR2wyWlNjcFhHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1M2NtRndjR1Z5YzF0cGJtUmxlRjB1WTJ4aGMzTk1hWE4wTG1Ga1pDZ25aR1Z6YTNSdmNDMWhZM1JwZG1VbktWeHVYRzRnSUNBZ0lDQWdJQ0FnZEdocGN5NTNjbUZ3Y0dWeWN5NW1iM0pGWVdOb0tDaDNjbUZ3Y0dWeUxDQnBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuZHlZWEJ3WlhKelcybGRMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMjF2WW1sc1pTMWhZM1JwZG1VbktWeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWlkWFIwYjI1elcybGRMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMjF2WW1sc1pTMWhZM1JwZG1VbktWeHVJQ0FnSUNBZ0lDQWdJQ0FnZDNKaGNIQmxjaTV6ZEhsc1pTNXlaVzF2ZG1WUWNtOXdaWEowZVNnbmFHVnBaMmgwSnlsY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElDRTlQU0JwYm1SbGVDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5keVlYQndaWEp6VzJsZExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0oyUmxjMnQwYjNBdFlXTjBhWFpsSnlsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWlkWFIwYjI1elcybGRMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMlJsYzJ0MGIzQXRZV04wYVhabEp5bGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVzWVhOMFgybHVaR1Y0SUQwZ2RHaHBjeTVzWVhOMFgybHVaR1Y0SUQwOVBTQnBibVJsZUNBL0lHNTFiR3dnT2lCcGJtUmxlRnh1SUNBZ0lDQWdmU2xjYmlBZ0lDQjlLVnh1SUNCOVhHNTlYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnVW5WaWNtbGpjMXh1SWl3aVkyeGhjM01nVkdGNGIyNXZiWGxVWVdKeklIdGNiaUFnWTI5dWMzUnlkV04wYjNJb1kyOXVkR0ZwYm1WeUtTQjdYRzRnSUNBZ2RHaHBjeTVqYjI1MFlXbHVaWElnUFNCamIyNTBZV2x1WlhKY2JpQWdJQ0IwYUdsekxuUmhZbk1nUFNCamIyNTBZV2x1WlhJdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNnbmMyVmpkR2x2Ymk1eVpXeGhkR1ZrWDE5elpXTjBhVzl1SnlsY2JpQWdJQ0IwYUdsekxtSjFkSFJ2Ym5NZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25ZblYwZEc5dUxtaGxZV1JsY2w5ZlluVjBkRzl1SnlsY2JpQWdJQ0IwYUdsekxuZHlZWEJ3WlhJZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuSmxiR0YwWldSZlgyTnZiblJoYVc1bGNpY3BYRzRnSUNBZ2RHaHBjeTV5WlhSMWNtNGdQU0JqYjI1MFlXbHVaWEl1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbkpsYkdGMFpXUmZYM0psZEhWeWJpY3BYRzRnSUNBZ2RHaHBjeTUwWVdKelYzSmhjSEJsY2lBOUlHTnZiblJoYVc1bGNpNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWNtVnNZWFJsWkY5ZmQzSmhjSEJsY2ljcFhHNGdJQ0FnZEdocGN5NXNZWE4wWDJsdVpHVjRJRDBnTUZ4dVhHNGdJQ0FnZEdocGN5NWlkWFIwYjI1ekxtWnZja1ZoWTJnb1luVjBkRzl1SUQwK0lIdGNiaUFnSUNBZ0lHSjFkSFJ2Ymk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUdVZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjdJR2x1WkdWNElIMGdQU0JsTG1OMWNuSmxiblJVWVhKblpYUXVaR0YwWVhObGRGeHVYRzRnSUNBZ0lDQWdJR2xtSUNocGJtUmxlQ0FoUFQwZ2RHaHBjeTVzWVhOMFgybHVaR1Y0S1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1aWRYUjBiMjV6VzNSb2FYTXViR0Z6ZEY5cGJtUmxlRjB1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duWVdOMGFYWmxKeWxjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMblJoWW5OYmRHaHBjeTVzWVhOMFgybHVaR1Y0WFM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkaFkzUnBkbVVuS1Z4dVhHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1aWRYUjBiMjV6VzJsdVpHVjRYUzVqYkdGemMweHBjM1F1WVdSa0tDZGhZM1JwZG1VbktWeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRHRmljMXRwYm1SbGVGMHVZMnhoYzNOTWFYTjBMbUZrWkNnbllXTjBhWFpsSnlsY2JseHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJHRnpkRjlwYm1SbGVDQTlJR2x1WkdWNFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb2QybHVaRzkzTG1sdWJtVnlWMmxrZEdnZ1BEMGdOekF3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1M2NtRndjR1Z5TG1Oc1lYTnpUR2x6ZEM1aFpHUW9KMk52Ym5SaGFXNWxjaTB0YzJ4cFpHVW5LVnh1SUNBZ0lDQWdJQ0FnSUhSb2FYTXVkR0ZpYzFkeVlYQndaWEl1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duZDNKaGNIQmxjaTB0YUdsa1pTY3BYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBwWEc0Z0lDQWdmU2xjYmx4dUlDQWdJSFJvYVhNdWNtVjBkWEp1TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdhV1lnS0hkcGJtUnZkeTVwYm01bGNsZHBaSFJvSUR3OUlEY3dNQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbmR5WVhCd1pYSXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ25ZMjl1ZEdGcGJtVnlMUzF6Ykdsa1pTY3BYRzRnSUNBZ0lDQWdJSFJvYVhNdWRHRmljMWR5WVhCd1pYSXVZMnhoYzNOTWFYTjBMbUZrWkNnbmQzSmhjSEJsY2kwdGFHbGtaU2NwWEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU2xjYmlBZ2ZWeHVmVnh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUZSaGVHOXViMjE1VkdGaWMxeHVJaXdpYVcxd2IzSjBJRWhsWVdSbGNpQm1jbTl0SUNjdUwwTnNZWE56WlhNdlNHVmhaR1Z5SjF4dWFXMXdiM0owSUZKMVluSnBZM01nWm5KdmJTQW5MaTlEYkdGemMyVnpMMUoxWW5KcFkzTW5YRzVwYlhCdmNuUWdWR0Y0YjI1dmJYbFVZV0p6SUdaeWIyMGdKeTR2UTJ4aGMzTmxjeTlVWVhodmJtOXRlVlJoWW5NblhHNXBiWEJ2Y25RZ1RHOWhaRTF2Y21VZ1puSnZiU0FuTGk5RGJHRnpjMlZ6TDB4dllXUk5iM0psSjF4dWFXMXdiM0owSUZKbGMzVnNkSE1nWm5KdmJTQW5MaTlEYkdGemMyVnpMMUpsYzNWc2RITW5YRzVwYlhCdmNuUWdVSFZpYkdsallYUnBiMjV6SUdaeWIyMGdKeTR2UTJ4aGMzTmxjeTlRZFdKc2FXTmhkR2x2Ym5NblhHNWNibHh1WTI5dWMzUWdhR1ZoWkdWeUlEMGdibVYzSUVobFlXUmxjaWhrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VjMmwwWlMxb1pXRmtaWEluS1NsY2JseHVhV1lnS0dSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTVvYjIxbExYTmxZM1JwYjI0dWNuVmljbWxqY3ljcEtTQjdYRzRnSUdOdmJuTjBJR2h2YldWU2RXSnlhV056SUQwZ2JtVjNJRkoxWW5KcFkzTW9aRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxtaHZiV1V0YzJWamRHbHZiaTV5ZFdKeWFXTnpKeWtzSUhSeWRXVXBYRzU5WEc1Y2JtbG1JQ2hrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VkR0Y0YjI1dmJYbGZYM0psYkdGMFpXUW5LU2tnZTF4dUlDQmpiMjV6ZENCMFlXSnpJRDBnYm1WM0lGUmhlRzl1YjIxNVZHRmljeWhrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VkR0Y0YjI1dmJYbGZYM0psYkdGMFpXUW5LU2xjYm4xY2JseHVhV1lnS0dSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTV3WVdkbExYSjFZbkpwWTNNbktTa2dlMXh1SUNCamIyNXpkQ0J3WVdkbFVuVmljbWxqY3lBOUlHNWxkeUJTZFdKeWFXTnpLR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXdZV2RsTFhKMVluSnBZM01uS1N3Z1ptRnNjMlVwWEc1OVhHNWNibWxtSUNoa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1Y0hWaWJHbGpZWFJwYjI1ZlgyTnZiblJoYVc1bGNpY3BLU0I3WEc0Z0lHTnZibk4wSUd4dllXUk5iM0psSUQwZ2JtVjNJRXh2WVdSTmIzSmxLR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXdkV0pzYVdOaGRHbHZibDlmWTI5dWRHRnBibVZ5SnlrcFhHNTlYRzVjYm1sbUlDaGtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWNtVnpkV3gwY3ljcEtTQjdYRzRnSUdOdmJuTjBJSEpsYzNWc2RITWdQU0J1WlhjZ1VtVnpkV3gwY3loa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1Y21WemRXeDBjeWNwS1Z4dWZWeHVYRzVwWmlBb1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG5CMVlteHBZMkYwYVc5dWN5Y3BLU0I3WEc0Z0lHTnZibk4wSUhCMVlteHBZMkYwYVc5dWN5QTlJRzVsZHlCUWRXSnNhV05oZEdsdmJuTW9aRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuQjFZbXhwWTJGMGFXOXVjeWNwS1Z4dUlDQmpiMjV6YjJ4bExteHZaeWh3ZFdKc2FXTmhkR2x2Ym5NcFhHNTlYRzRpTENKdGIyUjFiR1V1Wlhod2IzSjBjeUE5SUhKbGNYVnBjbVVvSnk0dmJHbGlMMkY0YVc5ekp5azdJaXdpSjNWelpTQnpkSEpwWTNRbk8xeHVYRzUyWVhJZ2RYUnBiSE1nUFNCeVpYRjFhWEpsS0NjdUx5NHVMM1YwYVd4ekp5azdYRzUyWVhJZ2MyVjBkR3hsSUQwZ2NtVnhkV2x5WlNnbkxpOHVMaTlqYjNKbEwzTmxkSFJzWlNjcE8xeHVkbUZ5SUdKMWFXeGtWVkpNSUQwZ2NtVnhkV2x5WlNnbkxpOHVMaTlvWld4d1pYSnpMMkoxYVd4a1ZWSk1KeWs3WEc1MllYSWdjR0Z5YzJWSVpXRmtaWEp6SUQwZ2NtVnhkV2x5WlNnbkxpOHVMaTlvWld4d1pYSnpMM0JoY25ObFNHVmhaR1Z5Y3ljcE8xeHVkbUZ5SUdselZWSk1VMkZ0WlU5eWFXZHBiaUE5SUhKbGNYVnBjbVVvSnk0dkxpNHZhR1ZzY0dWeWN5OXBjMVZTVEZOaGJXVlBjbWxuYVc0bktUdGNiblpoY2lCamNtVmhkR1ZGY25KdmNpQTlJSEpsY1hWcGNtVW9KeTR1TDJOdmNtVXZZM0psWVhSbFJYSnliM0luS1R0Y2JuWmhjaUJpZEc5aElEMGdLSFI1Y0dWdlppQjNhVzVrYjNjZ0lUMDlJQ2QxYm1SbFptbHVaV1FuSUNZbUlIZHBibVJ2ZHk1aWRHOWhJQ1ltSUhkcGJtUnZkeTVpZEc5aExtSnBibVFvZDJsdVpHOTNLU2tnZkh3Z2NtVnhkV2x5WlNnbkxpOHVMaTlvWld4d1pYSnpMMkowYjJFbktUdGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUI0YUhKQlpHRndkR1Z5S0dOdmJtWnBaeWtnZTF4dUlDQnlaWFIxY200Z2JtVjNJRkJ5YjIxcGMyVW9ablZ1WTNScGIyNGdaR2x6Y0dGMFkyaFlhSEpTWlhGMVpYTjBLSEpsYzI5c2RtVXNJSEpsYW1WamRDa2dlMXh1SUNBZ0lIWmhjaUJ5WlhGMVpYTjBSR0YwWVNBOUlHTnZibVpwWnk1a1lYUmhPMXh1SUNBZ0lIWmhjaUJ5WlhGMVpYTjBTR1ZoWkdWeWN5QTlJR052Ym1acFp5NW9aV0ZrWlhKek8xeHVYRzRnSUNBZ2FXWWdLSFYwYVd4ekxtbHpSbTl5YlVSaGRHRW9jbVZ4ZFdWemRFUmhkR0VwS1NCN1hHNGdJQ0FnSUNCa1pXeGxkR1VnY21WeGRXVnpkRWhsWVdSbGNuTmJKME52Ym5SbGJuUXRWSGx3WlNkZE95QXZMeUJNWlhRZ2RHaGxJR0p5YjNkelpYSWdjMlYwSUdsMFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnZG1GeUlISmxjWFZsYzNRZ1BTQnVaWGNnV0UxTVNIUjBjRkpsY1hWbGMzUW9LVHRjYmlBZ0lDQjJZWElnYkc5aFpFVjJaVzUwSUQwZ0oyOXVjbVZoWkhsemRHRjBaV05vWVc1blpTYzdYRzRnSUNBZ2RtRnlJSGhFYjIxaGFXNGdQU0JtWVd4elpUdGNibHh1SUNBZ0lDOHZJRVp2Y2lCSlJTQTRMemtnUTA5U1V5QnpkWEJ3YjNKMFhHNGdJQ0FnTHk4Z1QyNXNlU0J6ZFhCd2IzSjBjeUJRVDFOVUlHRnVaQ0JIUlZRZ1kyRnNiSE1nWVc1a0lHUnZaWE51SjNRZ2NtVjBkWEp1Y3lCMGFHVWdjbVZ6Y0c5dWMyVWdhR1ZoWkdWeWN5NWNiaUFnSUNBdkx5QkVUMDRuVkNCa2J5QjBhR2x6SUdadmNpQjBaWE4wYVc1bklHSXZZeUJZVFV4SWRIUndVbVZ4ZFdWemRDQnBjeUJ0YjJOclpXUXNJRzV2ZENCWVJHOXRZV2x1VW1WeGRXVnpkQzVjYmlBZ0lDQnBaaUFvY0hKdlkyVnpjeTVsYm5ZdVRrOUVSVjlGVGxZZ0lUMDlJQ2QwWlhOMEp5QW1KbHh1SUNBZ0lDQWdJQ0IwZVhCbGIyWWdkMmx1Wkc5M0lDRTlQU0FuZFc1a1pXWnBibVZrSnlBbUpseHVJQ0FnSUNBZ0lDQjNhVzVrYjNjdVdFUnZiV0ZwYmxKbGNYVmxjM1FnSmlZZ0lTZ25kMmwwYUVOeVpXUmxiblJwWVd4ekp5QnBiaUJ5WlhGMVpYTjBLU0FtSmx4dUlDQWdJQ0FnSUNBaGFYTlZVa3hUWVcxbFQzSnBaMmx1S0dOdmJtWnBaeTUxY213cEtTQjdYRzRnSUNBZ0lDQnlaWEYxWlhOMElEMGdibVYzSUhkcGJtUnZkeTVZUkc5dFlXbHVVbVZ4ZFdWemRDZ3BPMXh1SUNBZ0lDQWdiRzloWkVWMlpXNTBJRDBnSjI5dWJHOWhaQ2M3WEc0Z0lDQWdJQ0I0Ukc5dFlXbHVJRDBnZEhKMVpUdGNiaUFnSUNBZ0lISmxjWFZsYzNRdWIyNXdjbTluY21WemN5QTlJR1oxYm1OMGFXOXVJR2hoYm1Sc1pWQnliMmR5WlhOektDa2dlMzA3WEc0Z0lDQWdJQ0J5WlhGMVpYTjBMbTl1ZEdsdFpXOTFkQ0E5SUdaMWJtTjBhVzl1SUdoaGJtUnNaVlJwYldWdmRYUW9LU0I3ZlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCSVZGUlFJR0poYzJsaklHRjFkR2hsYm5ScFkyRjBhVzl1WEc0Z0lDQWdhV1lnS0dOdmJtWnBaeTVoZFhSb0tTQjdYRzRnSUNBZ0lDQjJZWElnZFhObGNtNWhiV1VnUFNCamIyNW1hV2N1WVhWMGFDNTFjMlZ5Ym1GdFpTQjhmQ0FuSnp0Y2JpQWdJQ0FnSUhaaGNpQndZWE56ZDI5eVpDQTlJR052Ym1acFp5NWhkWFJvTG5CaGMzTjNiM0prSUh4OElDY25PMXh1SUNBZ0lDQWdjbVZ4ZFdWemRFaGxZV1JsY25NdVFYVjBhRzl5YVhwaGRHbHZiaUE5SUNkQ1lYTnBZeUFuSUNzZ1luUnZZU2gxYzJWeWJtRnRaU0FySUNjNkp5QXJJSEJoYzNOM2IzSmtLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWEYxWlhOMExtOXdaVzRvWTI5dVptbG5MbTFsZEdodlpDNTBiMVZ3Y0dWeVEyRnpaU2dwTENCaWRXbHNaRlZTVENoamIyNW1hV2N1ZFhKc0xDQmpiMjVtYVdjdWNHRnlZVzF6TENCamIyNW1hV2N1Y0dGeVlXMXpVMlZ5YVdGc2FYcGxjaWtzSUhSeWRXVXBPMXh1WEc0Z0lDQWdMeThnVTJWMElIUm9aU0J5WlhGMVpYTjBJSFJwYldWdmRYUWdhVzRnVFZOY2JpQWdJQ0J5WlhGMVpYTjBMblJwYldWdmRYUWdQU0JqYjI1bWFXY3VkR2x0Wlc5MWREdGNibHh1SUNBZ0lDOHZJRXhwYzNSbGJpQm1iM0lnY21WaFpIa2djM1JoZEdWY2JpQWdJQ0J5WlhGMVpYTjBXMnh2WVdSRmRtVnVkRjBnUFNCbWRXNWpkR2x2YmlCb1lXNWtiR1ZNYjJGa0tDa2dlMXh1SUNBZ0lDQWdhV1lnS0NGeVpYRjFaWE4wSUh4OElDaHlaWEYxWlhOMExuSmxZV1I1VTNSaGRHVWdJVDA5SURRZ0ppWWdJWGhFYjIxaGFXNHBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTHk4Z1ZHaGxJSEpsY1hWbGMzUWdaWEp5YjNKbFpDQnZkWFFnWVc1a0lIZGxJR1JwWkc0bmRDQm5aWFFnWVNCeVpYTndiMjV6WlN3Z2RHaHBjeUIzYVd4c0lHSmxYRzRnSUNBZ0lDQXZMeUJvWVc1a2JHVmtJR0o1SUc5dVpYSnliM0lnYVc1emRHVmhaRnh1SUNBZ0lDQWdMeThnVjJsMGFDQnZibVVnWlhoalpYQjBhVzl1T2lCeVpYRjFaWE4wSUhSb1lYUWdkWE5wYm1jZ1ptbHNaVG9nY0hKdmRHOWpiMndzSUcxdmMzUWdZbkp2ZDNObGNuTmNiaUFnSUNBZ0lDOHZJSGRwYkd3Z2NtVjBkWEp1SUhOMFlYUjFjeUJoY3lBd0lHVjJaVzRnZEdodmRXZG9JR2wwSjNNZ1lTQnpkV05qWlhOelpuVnNJSEpsY1hWbGMzUmNiaUFnSUNBZ0lHbG1JQ2h5WlhGMVpYTjBMbk4wWVhSMWN5QTlQVDBnTUNBbUppQWhLSEpsY1hWbGMzUXVjbVZ6Y0c5dWMyVlZVa3dnSmlZZ2NtVnhkV1Z6ZEM1eVpYTndiMjV6WlZWU1RDNXBibVJsZUU5bUtDZG1hV3hsT2ljcElEMDlQU0F3S1NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDOHZJRkJ5WlhCaGNtVWdkR2hsSUhKbGMzQnZibk5sWEc0Z0lDQWdJQ0IyWVhJZ2NtVnpjRzl1YzJWSVpXRmtaWEp6SUQwZ0oyZGxkRUZzYkZKbGMzQnZibk5sU0dWaFpHVnljeWNnYVc0Z2NtVnhkV1Z6ZENBL0lIQmhjbk5sU0dWaFpHVnljeWh5WlhGMVpYTjBMbWRsZEVGc2JGSmxjM0J2Ym5ObFNHVmhaR1Z5Y3lncEtTQTZJRzUxYkd3N1hHNGdJQ0FnSUNCMllYSWdjbVZ6Y0c5dWMyVkVZWFJoSUQwZ0lXTnZibVpwWnk1eVpYTndiMjV6WlZSNWNHVWdmSHdnWTI5dVptbG5MbkpsYzNCdmJuTmxWSGx3WlNBOVBUMGdKM1JsZUhRbklEOGdjbVZ4ZFdWemRDNXlaWE53YjI1elpWUmxlSFFnT2lCeVpYRjFaWE4wTG5KbGMzQnZibk5sTzF4dUlDQWdJQ0FnZG1GeUlISmxjM0J2Ym5ObElEMGdlMXh1SUNBZ0lDQWdJQ0JrWVhSaE9pQnlaWE53YjI1elpVUmhkR0VzWEc0Z0lDQWdJQ0FnSUM4dklFbEZJSE5sYm1SeklERXlNak1nYVc1emRHVmhaQ0J2WmlBeU1EUWdLR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzloZUdsdmN5OWhlR2x2Y3k5cGMzTjFaWE12TWpBeEtWeHVJQ0FnSUNBZ0lDQnpkR0YwZFhNNklISmxjWFZsYzNRdWMzUmhkSFZ6SUQwOVBTQXhNakl6SUQ4Z01qQTBJRG9nY21WeGRXVnpkQzV6ZEdGMGRYTXNYRzRnSUNBZ0lDQWdJSE4wWVhSMWMxUmxlSFE2SUhKbGNYVmxjM1F1YzNSaGRIVnpJRDA5UFNBeE1qSXpJRDhnSjA1dklFTnZiblJsYm5RbklEb2djbVZ4ZFdWemRDNXpkR0YwZFhOVVpYaDBMRnh1SUNBZ0lDQWdJQ0JvWldGa1pYSnpPaUJ5WlhOd2IyNXpaVWhsWVdSbGNuTXNYRzRnSUNBZ0lDQWdJR052Ym1acFp6b2dZMjl1Wm1sbkxGeHVJQ0FnSUNBZ0lDQnlaWEYxWlhOME9pQnlaWEYxWlhOMFhHNGdJQ0FnSUNCOU8xeHVYRzRnSUNBZ0lDQnpaWFIwYkdVb2NtVnpiMngyWlN3Z2NtVnFaV04wTENCeVpYTndiMjV6WlNrN1hHNWNiaUFnSUNBZ0lDOHZJRU5zWldGdUlIVndJSEpsY1hWbGMzUmNiaUFnSUNBZ0lISmxjWFZsYzNRZ1BTQnVkV3hzTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0F2THlCSVlXNWtiR1VnYkc5M0lHeGxkbVZzSUc1bGRIZHZjbXNnWlhKeWIzSnpYRzRnSUNBZ2NtVnhkV1Z6ZEM1dmJtVnljbTl5SUQwZ1puVnVZM1JwYjI0Z2FHRnVaR3hsUlhKeWIzSW9LU0I3WEc0Z0lDQWdJQ0F2THlCU1pXRnNJR1Z5Y205eWN5QmhjbVVnYUdsa1pHVnVJR1p5YjIwZ2RYTWdZbmtnZEdobElHSnliM2R6WlhKY2JpQWdJQ0FnSUM4dklHOXVaWEp5YjNJZ2MyaHZkV3hrSUc5dWJIa2dabWx5WlNCcFppQnBkQ2R6SUdFZ2JtVjBkMjl5YXlCbGNuSnZjbHh1SUNBZ0lDQWdjbVZxWldOMEtHTnlaV0YwWlVWeWNtOXlLQ2RPWlhSM2IzSnJJRVZ5Y205eUp5d2dZMjl1Wm1sbkxDQnVkV3hzTENCeVpYRjFaWE4wS1NrN1hHNWNiaUFnSUNBZ0lDOHZJRU5zWldGdUlIVndJSEpsY1hWbGMzUmNiaUFnSUNBZ0lISmxjWFZsYzNRZ1BTQnVkV3hzTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0F2THlCSVlXNWtiR1VnZEdsdFpXOTFkRnh1SUNBZ0lISmxjWFZsYzNRdWIyNTBhVzFsYjNWMElEMGdablZ1WTNScGIyNGdhR0Z1Wkd4bFZHbHRaVzkxZENncElIdGNiaUFnSUNBZ0lISmxhbVZqZENoamNtVmhkR1ZGY25KdmNpZ25kR2x0Wlc5MWRDQnZaaUFuSUNzZ1kyOXVabWxuTG5ScGJXVnZkWFFnS3lBbmJYTWdaWGhqWldWa1pXUW5MQ0JqYjI1bWFXY3NJQ2RGUTA5T1RrRkNUMUpVUlVRbkxGeHVJQ0FnSUNBZ0lDQnlaWEYxWlhOMEtTazdYRzVjYmlBZ0lDQWdJQzh2SUVOc1pXRnVJSFZ3SUhKbGNYVmxjM1JjYmlBZ0lDQWdJSEpsY1hWbGMzUWdQU0J1ZFd4c08xeHVJQ0FnSUgwN1hHNWNiaUFnSUNBdkx5QkJaR1FnZUhOeVppQm9aV0ZrWlhKY2JpQWdJQ0F2THlCVWFHbHpJR2x6SUc5dWJIa2daRzl1WlNCcFppQnlkVzV1YVc1bklHbHVJR0VnYzNSaGJtUmhjbVFnWW5KdmQzTmxjaUJsYm5acGNtOXViV1Z1ZEM1Y2JpQWdJQ0F2THlCVGNHVmphV1pwWTJGc2JIa2dibTkwSUdsbUlIZGxKM0psSUdsdUlHRWdkMlZpSUhkdmNtdGxjaXdnYjNJZ2NtVmhZM1F0Ym1GMGFYWmxMbHh1SUNBZ0lHbG1JQ2gxZEdsc2N5NXBjMU4wWVc1a1lYSmtRbkp2ZDNObGNrVnVkaWdwS1NCN1hHNGdJQ0FnSUNCMllYSWdZMjl2YTJsbGN5QTlJSEpsY1hWcGNtVW9KeTR2TGk0dmFHVnNjR1Z5Y3k5amIyOXJhV1Z6SnlrN1hHNWNiaUFnSUNBZ0lDOHZJRUZrWkNCNGMzSm1JR2hsWVdSbGNseHVJQ0FnSUNBZ2RtRnlJSGh6Y21aV1lXeDFaU0E5SUNoamIyNW1hV2N1ZDJsMGFFTnlaV1JsYm5ScFlXeHpJSHg4SUdselZWSk1VMkZ0WlU5eWFXZHBiaWhqYjI1bWFXY3VkWEpzS1NrZ0ppWWdZMjl1Wm1sbkxuaHpjbVpEYjI5cmFXVk9ZVzFsSUQ5Y2JpQWdJQ0FnSUNBZ0lDQmpiMjlyYVdWekxuSmxZV1FvWTI5dVptbG5Mbmh6Y21aRGIyOXJhV1ZPWVcxbEtTQTZYRzRnSUNBZ0lDQWdJQ0FnZFc1a1pXWnBibVZrTzF4dVhHNGdJQ0FnSUNCcFppQW9lSE55WmxaaGJIVmxLU0I3WEc0Z0lDQWdJQ0FnSUhKbGNYVmxjM1JJWldGa1pYSnpXMk52Ym1acFp5NTRjM0ptU0dWaFpHVnlUbUZ0WlYwZ1BTQjRjM0ptVm1Gc2RXVTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdRV1JrSUdobFlXUmxjbk1nZEc4Z2RHaGxJSEpsY1hWbGMzUmNiaUFnSUNCcFppQW9KM05sZEZKbGNYVmxjM1JJWldGa1pYSW5JR2x1SUhKbGNYVmxjM1FwSUh0Y2JpQWdJQ0FnSUhWMGFXeHpMbVp2Y2tWaFkyZ29jbVZ4ZFdWemRFaGxZV1JsY25Nc0lHWjFibU4wYVc5dUlITmxkRkpsY1hWbGMzUklaV0ZrWlhJb2RtRnNMQ0JyWlhrcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJ5WlhGMVpYTjBSR0YwWVNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NnSmlZZ2EyVjVMblJ2VEc5M1pYSkRZWE5sS0NrZ1BUMDlJQ2RqYjI1MFpXNTBMWFI1Y0dVbktTQjdYRzRnSUNBZ0lDQWdJQ0FnTHk4Z1VtVnRiM1psSUVOdmJuUmxiblF0Vkhsd1pTQnBaaUJrWVhSaElHbHpJSFZ1WkdWbWFXNWxaRnh1SUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0J5WlhGMVpYTjBTR1ZoWkdWeWMxdHJaWGxkTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDOHZJRTkwYUdWeWQybHpaU0JoWkdRZ2FHVmhaR1Z5SUhSdklIUm9aU0J5WlhGMVpYTjBYRzRnSUNBZ0lDQWdJQ0FnY21WeGRXVnpkQzV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLR3RsZVN3Z2RtRnNLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1FXUmtJSGRwZEdoRGNtVmtaVzUwYVdGc2N5QjBieUJ5WlhGMVpYTjBJR2xtSUc1bFpXUmxaRnh1SUNBZ0lHbG1JQ2hqYjI1bWFXY3VkMmwwYUVOeVpXUmxiblJwWVd4ektTQjdYRzRnSUNBZ0lDQnlaWEYxWlhOMExuZHBkR2hEY21Wa1pXNTBhV0ZzY3lBOUlIUnlkV1U3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnUVdSa0lISmxjM0J2Ym5ObFZIbHdaU0IwYnlCeVpYRjFaWE4wSUdsbUlHNWxaV1JsWkZ4dUlDQWdJR2xtSUNoamIyNW1hV2N1Y21WemNHOXVjMlZVZVhCbEtTQjdYRzRnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNCeVpYRjFaWE4wTG5KbGMzQnZibk5sVkhsd1pTQTlJR052Ym1acFp5NXlaWE53YjI1elpWUjVjR1U3WEc0Z0lDQWdJQ0I5SUdOaGRHTm9JQ2hsS1NCN1hHNGdJQ0FnSUNBZ0lDOHZJRVY0Y0dWamRHVmtJRVJQVFVWNFkyVndkR2x2YmlCMGFISnZkMjRnWW5rZ1luSnZkM05sY25NZ2JtOTBJR052YlhCaGRHbGliR1VnV0UxTVNIUjBjRkpsY1hWbGMzUWdUR1YyWld3Z01pNWNiaUFnSUNBZ0lDQWdMeThnUW5WMExDQjBhR2x6SUdOaGJpQmlaU0J6ZFhCd2NtVnpjMlZrSUdadmNpQW5hbk52YmljZ2RIbHdaU0JoY3lCcGRDQmpZVzRnWW1VZ2NHRnljMlZrSUdKNUlHUmxabUYxYkhRZ0ozUnlZVzV6Wm05eWJWSmxjM0J2Ym5ObEp5Qm1kVzVqZEdsdmJpNWNiaUFnSUNBZ0lDQWdhV1lnS0dOdmJtWnBaeTV5WlhOd2IyNXpaVlI1Y0dVZ0lUMDlJQ2RxYzI5dUp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUhSb2NtOTNJR1U3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCSVlXNWtiR1VnY0hKdlozSmxjM01nYVdZZ2JtVmxaR1ZrWEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJqYjI1bWFXY3ViMjVFYjNkdWJHOWhaRkJ5YjJkeVpYTnpJRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ0lDQnlaWEYxWlhOMExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ozQnliMmR5WlhOekp5d2dZMjl1Wm1sbkxtOXVSRzkzYm14dllXUlFjbTluY21WemN5azdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdUbTkwSUdGc2JDQmljbTkzYzJWeWN5QnpkWEJ3YjNKMElIVndiRzloWkNCbGRtVnVkSE5jYmlBZ0lDQnBaaUFvZEhsd1pXOW1JR052Ym1acFp5NXZibFZ3Ykc5aFpGQnliMmR5WlhOeklEMDlQU0FuWm5WdVkzUnBiMjRuSUNZbUlISmxjWFZsYzNRdWRYQnNiMkZrS1NCN1hHNGdJQ0FnSUNCeVpYRjFaWE4wTG5Wd2JHOWhaQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2R3Y205bmNtVnpjeWNzSUdOdmJtWnBaeTV2YmxWd2JHOWhaRkJ5YjJkeVpYTnpLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWTI5dVptbG5MbU5oYm1ObGJGUnZhMlZ1S1NCN1hHNGdJQ0FnSUNBdkx5QklZVzVrYkdVZ1kyRnVZMlZzYkdGMGFXOXVYRzRnSUNBZ0lDQmpiMjVtYVdjdVkyRnVZMlZzVkc5clpXNHVjSEp2YldselpTNTBhR1Z1S0daMWJtTjBhVzl1SUc5dVEyRnVZMlZzWldRb1kyRnVZMlZzS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doY21WeGRXVnpkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSEpsY1hWbGMzUXVZV0p2Y25Rb0tUdGNiaUFnSUNBZ0lDQWdjbVZxWldOMEtHTmhibU5sYkNrN1hHNGdJQ0FnSUNBZ0lDOHZJRU5zWldGdUlIVndJSEpsY1hWbGMzUmNiaUFnSUNBZ0lDQWdjbVZ4ZFdWemRDQTlJRzUxYkd3N1hHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9jbVZ4ZFdWemRFUmhkR0VnUFQwOUlIVnVaR1ZtYVc1bFpDa2dlMXh1SUNBZ0lDQWdjbVZ4ZFdWemRFUmhkR0VnUFNCdWRXeHNPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJRk5sYm1RZ2RHaGxJSEpsY1hWbGMzUmNiaUFnSUNCeVpYRjFaWE4wTG5ObGJtUW9jbVZ4ZFdWemRFUmhkR0VwTzF4dUlDQjlLVHRjYm4wN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCMWRHbHNjeUE5SUhKbGNYVnBjbVVvSnk0dmRYUnBiSE1uS1R0Y2JuWmhjaUJpYVc1a0lEMGdjbVZ4ZFdseVpTZ25MaTlvWld4d1pYSnpMMkpwYm1RbktUdGNiblpoY2lCQmVHbHZjeUE5SUhKbGNYVnBjbVVvSnk0dlkyOXlaUzlCZUdsdmN5Y3BPMXh1ZG1GeUlHUmxabUYxYkhSeklEMGdjbVZ4ZFdseVpTZ25MaTlrWldaaGRXeDBjeWNwTzF4dVhHNHZLaXBjYmlBcUlFTnlaV0YwWlNCaGJpQnBibk4wWVc1alpTQnZaaUJCZUdsdmMxeHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCa1pXWmhkV3gwUTI5dVptbG5JRlJvWlNCa1pXWmhkV3gwSUdOdmJtWnBaeUJtYjNJZ2RHaGxJR2x1YzNSaGJtTmxYRzRnS2lCQWNtVjBkWEp1SUh0QmVHbHZjMzBnUVNCdVpYY2dhVzV6ZEdGdVkyVWdiMllnUVhocGIzTmNiaUFxTDF4dVpuVnVZM1JwYjI0Z1kzSmxZWFJsU1c1emRHRnVZMlVvWkdWbVlYVnNkRU52Ym1acFp5a2dlMXh1SUNCMllYSWdZMjl1ZEdWNGRDQTlJRzVsZHlCQmVHbHZjeWhrWldaaGRXeDBRMjl1Wm1sbktUdGNiaUFnZG1GeUlHbHVjM1JoYm1ObElEMGdZbWx1WkNoQmVHbHZjeTV3Y205MGIzUjVjR1V1Y21WeGRXVnpkQ3dnWTI5dWRHVjRkQ2s3WEc1Y2JpQWdMeThnUTI5d2VTQmhlR2x2Y3k1d2NtOTBiM1I1Y0dVZ2RHOGdhVzV6ZEdGdVkyVmNiaUFnZFhScGJITXVaWGgwWlc1a0tHbHVjM1JoYm1ObExDQkJlR2x2Y3k1d2NtOTBiM1I1Y0dVc0lHTnZiblJsZUhRcE8xeHVYRzRnSUM4dklFTnZjSGtnWTI5dWRHVjRkQ0IwYnlCcGJuTjBZVzVqWlZ4dUlDQjFkR2xzY3k1bGVIUmxibVFvYVc1emRHRnVZMlVzSUdOdmJuUmxlSFFwTzF4dVhHNGdJSEpsZEhWeWJpQnBibk4wWVc1alpUdGNibjFjYmx4dUx5OGdRM0psWVhSbElIUm9aU0JrWldaaGRXeDBJR2x1YzNSaGJtTmxJSFJ2SUdKbElHVjRjRzl5ZEdWa1hHNTJZWElnWVhocGIzTWdQU0JqY21WaGRHVkpibk4wWVc1alpTaGtaV1poZFd4MGN5azdYRzVjYmk4dklFVjRjRzl6WlNCQmVHbHZjeUJqYkdGemN5QjBieUJoYkd4dmR5QmpiR0Z6Y3lCcGJtaGxjbWwwWVc1alpWeHVZWGhwYjNNdVFYaHBiM01nUFNCQmVHbHZjenRjYmx4dUx5OGdSbUZqZEc5eWVTQm1iM0lnWTNKbFlYUnBibWNnYm1WM0lHbHVjM1JoYm1ObGMxeHVZWGhwYjNNdVkzSmxZWFJsSUQwZ1puVnVZM1JwYjI0Z1kzSmxZWFJsS0dsdWMzUmhibU5sUTI5dVptbG5LU0I3WEc0Z0lISmxkSFZ5YmlCamNtVmhkR1ZKYm5OMFlXNWpaU2gxZEdsc2N5NXRaWEpuWlNoa1pXWmhkV3gwY3l3Z2FXNXpkR0Z1WTJWRGIyNW1hV2NwS1R0Y2JuMDdYRzVjYmk4dklFVjRjRzl6WlNCRFlXNWpaV3dnSmlCRFlXNWpaV3hVYjJ0bGJseHVZWGhwYjNNdVEyRnVZMlZzSUQwZ2NtVnhkV2x5WlNnbkxpOWpZVzVqWld3dlEyRnVZMlZzSnlrN1hHNWhlR2x2Y3k1RFlXNWpaV3hVYjJ0bGJpQTlJSEpsY1hWcGNtVW9KeTR2WTJGdVkyVnNMME5oYm1ObGJGUnZhMlZ1SnlrN1hHNWhlR2x2Y3k1cGMwTmhibU5sYkNBOUlISmxjWFZwY21Vb0p5NHZZMkZ1WTJWc0wybHpRMkZ1WTJWc0p5azdYRzVjYmk4dklFVjRjRzl6WlNCaGJHd3ZjM0J5WldGa1hHNWhlR2x2Y3k1aGJHd2dQU0JtZFc1amRHbHZiaUJoYkd3b2NISnZiV2x6WlhNcElIdGNiaUFnY21WMGRYSnVJRkJ5YjIxcGMyVXVZV3hzS0hCeWIyMXBjMlZ6S1R0Y2JuMDdYRzVoZUdsdmN5NXpjSEpsWVdRZ1BTQnlaWEYxYVhKbEtDY3VMMmhsYkhCbGNuTXZjM0J5WldGa0p5azdYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWVhocGIzTTdYRzVjYmk4dklFRnNiRzkzSUhWelpTQnZaaUJrWldaaGRXeDBJR2x0Y0c5eWRDQnplVzUwWVhnZ2FXNGdWSGx3WlZOamNtbHdkRnh1Ylc5a2RXeGxMbVY0Y0c5eWRITXVaR1ZtWVhWc2RDQTlJR0Y0YVc5ek8xeHVJaXdpSjNWelpTQnpkSEpwWTNRbk8xeHVYRzR2S2lwY2JpQXFJRUVnWUVOaGJtTmxiR0FnYVhNZ1lXNGdiMkpxWldOMElIUm9ZWFFnYVhNZ2RHaHliM2R1SUhkb1pXNGdZVzRnYjNCbGNtRjBhVzl1SUdseklHTmhibU5sYkdWa0xseHVJQ3BjYmlBcUlFQmpiR0Z6YzF4dUlDb2dRSEJoY21GdElIdHpkSEpwYm1jOWZTQnRaWE56WVdkbElGUm9aU0J0WlhOellXZGxMbHh1SUNvdlhHNW1kVzVqZEdsdmJpQkRZVzVqWld3b2JXVnpjMkZuWlNrZ2UxeHVJQ0IwYUdsekxtMWxjM05oWjJVZ1BTQnRaWE56WVdkbE8xeHVmVnh1WEc1RFlXNWpaV3d1Y0hKdmRHOTBlWEJsTG5SdlUzUnlhVzVuSUQwZ1puVnVZM1JwYjI0Z2RHOVRkSEpwYm1jb0tTQjdYRzRnSUhKbGRIVnliaUFuUTJGdVkyVnNKeUFySUNoMGFHbHpMbTFsYzNOaFoyVWdQeUFuT2lBbklDc2dkR2hwY3k1dFpYTnpZV2RsSURvZ0p5Y3BPMXh1ZlR0Y2JseHVRMkZ1WTJWc0xuQnliM1J2ZEhsd1pTNWZYME5CVGtORlRGOWZJRDBnZEhKMVpUdGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JEWVc1alpXdzdYRzRpTENJbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQkRZVzVqWld3Z1BTQnlaWEYxYVhKbEtDY3VMME5oYm1ObGJDY3BPMXh1WEc0dktpcGNiaUFxSUVFZ1lFTmhibU5sYkZSdmEyVnVZQ0JwY3lCaGJpQnZZbXBsWTNRZ2RHaGhkQ0JqWVc0Z1ltVWdkWE5sWkNCMGJ5QnlaWEYxWlhOMElHTmhibU5sYkd4aGRHbHZiaUJ2WmlCaGJpQnZjR1Z5WVhScGIyNHVYRzRnS2x4dUlDb2dRR05zWVhOelhHNGdLaUJBY0dGeVlXMGdlMFoxYm1OMGFXOXVmU0JsZUdWamRYUnZjaUJVYUdVZ1pYaGxZM1YwYjNJZ1puVnVZM1JwYjI0dVhHNGdLaTljYm1aMWJtTjBhVzl1SUVOaGJtTmxiRlJ2YTJWdUtHVjRaV04xZEc5eUtTQjdYRzRnSUdsbUlDaDBlWEJsYjJZZ1pYaGxZM1YwYjNJZ0lUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0NkbGVHVmpkWFJ2Y2lCdGRYTjBJR0psSUdFZ1puVnVZM1JwYjI0dUp5azdYRzRnSUgxY2JseHVJQ0IyWVhJZ2NtVnpiMngyWlZCeWIyMXBjMlU3WEc0Z0lIUm9hWE11Y0hKdmJXbHpaU0E5SUc1bGR5QlFjbTl0YVhObEtHWjFibU4wYVc5dUlIQnliMjFwYzJWRmVHVmpkWFJ2Y2loeVpYTnZiSFpsS1NCN1hHNGdJQ0FnY21WemIyeDJaVkJ5YjIxcGMyVWdQU0J5WlhOdmJIWmxPMXh1SUNCOUtUdGNibHh1SUNCMllYSWdkRzlyWlc0Z1BTQjBhR2x6TzF4dUlDQmxlR1ZqZFhSdmNpaG1kVzVqZEdsdmJpQmpZVzVqWld3b2JXVnpjMkZuWlNrZ2UxeHVJQ0FnSUdsbUlDaDBiMnRsYmk1eVpXRnpiMjRwSUh0Y2JpQWdJQ0FnSUM4dklFTmhibU5sYkd4aGRHbHZiaUJvWVhNZ1lXeHlaV0ZrZVNCaVpXVnVJSEpsY1hWbGMzUmxaRnh1SUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhSdmEyVnVMbkpsWVhOdmJpQTlJRzVsZHlCRFlXNWpaV3dvYldWemMyRm5aU2s3WEc0Z0lDQWdjbVZ6YjJ4MlpWQnliMjFwYzJVb2RHOXJaVzR1Y21WaGMyOXVLVHRjYmlBZ2ZTazdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1ZHaHliM2R6SUdFZ1lFTmhibU5sYkdBZ2FXWWdZMkZ1WTJWc2JHRjBhVzl1SUdoaGN5QmlaV1Z1SUhKbGNYVmxjM1JsWkM1Y2JpQXFMMXh1UTJGdVkyVnNWRzlyWlc0dWNISnZkRzkwZVhCbExuUm9jbTkzU1daU1pYRjFaWE4wWldRZ1BTQm1kVzVqZEdsdmJpQjBhSEp2ZDBsbVVtVnhkV1Z6ZEdWa0tDa2dlMXh1SUNCcFppQW9kR2hwY3k1eVpXRnpiMjRwSUh0Y2JpQWdJQ0IwYUhKdmR5QjBhR2x6TG5KbFlYTnZianRjYmlBZ2ZWeHVmVHRjYmx4dUx5b3FYRzRnS2lCU1pYUjFjbTV6SUdGdUlHOWlhbVZqZENCMGFHRjBJR052Ym5SaGFXNXpJR0VnYm1WM0lHQkRZVzVqWld4VWIydGxibUFnWVc1a0lHRWdablZ1WTNScGIyNGdkR2hoZEN3Z2QyaGxiaUJqWVd4c1pXUXNYRzRnS2lCallXNWpaV3h6SUhSb1pTQmdRMkZ1WTJWc1ZHOXJaVzVnTGx4dUlDb3ZYRzVEWVc1alpXeFViMnRsYmk1emIzVnlZMlVnUFNCbWRXNWpkR2x2YmlCemIzVnlZMlVvS1NCN1hHNGdJSFpoY2lCallXNWpaV3c3WEc0Z0lIWmhjaUIwYjJ0bGJpQTlJRzVsZHlCRFlXNWpaV3hVYjJ0bGJpaG1kVzVqZEdsdmJpQmxlR1ZqZFhSdmNpaGpLU0I3WEc0Z0lDQWdZMkZ1WTJWc0lEMGdZenRjYmlBZ2ZTazdYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdkRzlyWlc0NklIUnZhMlZ1TEZ4dUlDQWdJR05oYm1ObGJEb2dZMkZ1WTJWc1hHNGdJSDA3WEc1OU8xeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJRU5oYm1ObGJGUnZhMlZ1TzF4dUlpd2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlHbHpRMkZ1WTJWc0tIWmhiSFZsS1NCN1hHNGdJSEpsZEhWeWJpQWhJU2gyWVd4MVpTQW1KaUIyWVd4MVpTNWZYME5CVGtORlRGOWZLVHRjYm4wN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCa1pXWmhkV3gwY3lBOUlISmxjWFZwY21Vb0p5NHZMaTR2WkdWbVlYVnNkSE1uS1R0Y2JuWmhjaUIxZEdsc2N5QTlJSEpsY1hWcGNtVW9KeTR2TGk0dmRYUnBiSE1uS1R0Y2JuWmhjaUJKYm5SbGNtTmxjSFJ2Y2sxaGJtRm5aWElnUFNCeVpYRjFhWEpsS0NjdUwwbHVkR1Z5WTJWd2RHOXlUV0Z1WVdkbGNpY3BPMXh1ZG1GeUlHUnBjM0JoZEdOb1VtVnhkV1Z6ZENBOUlISmxjWFZwY21Vb0p5NHZaR2x6Y0dGMFkyaFNaWEYxWlhOMEp5azdYRzVjYmk4cUtseHVJQ29nUTNKbFlYUmxJR0VnYm1WM0lHbHVjM1JoYm1ObElHOW1JRUY0YVc5elhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUdsdWMzUmhibU5sUTI5dVptbG5JRlJvWlNCa1pXWmhkV3gwSUdOdmJtWnBaeUJtYjNJZ2RHaGxJR2x1YzNSaGJtTmxYRzRnS2k5Y2JtWjFibU4wYVc5dUlFRjRhVzl6S0dsdWMzUmhibU5sUTI5dVptbG5LU0I3WEc0Z0lIUm9hWE11WkdWbVlYVnNkSE1nUFNCcGJuTjBZVzVqWlVOdmJtWnBaenRjYmlBZ2RHaHBjeTVwYm5SbGNtTmxjSFJ2Y25NZ1BTQjdYRzRnSUNBZ2NtVnhkV1Z6ZERvZ2JtVjNJRWx1ZEdWeVkyVndkRzl5VFdGdVlXZGxjaWdwTEZ4dUlDQWdJSEpsYzNCdmJuTmxPaUJ1WlhjZ1NXNTBaWEpqWlhCMGIzSk5ZVzVoWjJWeUtDbGNiaUFnZlR0Y2JuMWNibHh1THlvcVhHNGdLaUJFYVhOd1lYUmphQ0JoSUhKbGNYVmxjM1JjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdZMjl1Wm1sbklGUm9aU0JqYjI1bWFXY2djM0JsWTJsbWFXTWdabTl5SUhSb2FYTWdjbVZ4ZFdWemRDQW9iV1Z5WjJWa0lIZHBkR2dnZEdocGN5NWtaV1poZFd4MGN5bGNiaUFxTDF4dVFYaHBiM011Y0hKdmRHOTBlWEJsTG5KbGNYVmxjM1FnUFNCbWRXNWpkR2x2YmlCeVpYRjFaWE4wS0dOdmJtWnBaeWtnZTF4dUlDQXZLbVZ6YkdsdWRDQnVieTF3WVhKaGJTMXlaV0Z6YzJsbmJqb3dLaTljYmlBZ0x5OGdRV3hzYjNjZ1ptOXlJR0Y0YVc5ektDZGxlR0Z0Y0d4bEwzVnliQ2RiTENCamIyNW1hV2RkS1NCaElHeGhJR1psZEdOb0lFRlFTVnh1SUNCcFppQW9kSGx3Wlc5bUlHTnZibVpwWnlBOVBUMGdKM04wY21sdVp5Y3BJSHRjYmlBZ0lDQmpiMjVtYVdjZ1BTQjFkR2xzY3k1dFpYSm5aU2g3WEc0Z0lDQWdJQ0IxY213NklHRnlaM1Z0Wlc1MGMxc3dYVnh1SUNBZ0lIMHNJR0Z5WjNWdFpXNTBjMXN4WFNrN1hHNGdJSDFjYmx4dUlDQmpiMjVtYVdjZ1BTQjFkR2xzY3k1dFpYSm5aU2hrWldaaGRXeDBjeXdnZTIxbGRHaHZaRG9nSjJkbGRDZDlMQ0IwYUdsekxtUmxabUYxYkhSekxDQmpiMjVtYVdjcE8xeHVJQ0JqYjI1bWFXY3ViV1YwYUc5a0lEMGdZMjl1Wm1sbkxtMWxkR2h2WkM1MGIweHZkMlZ5UTJGelpTZ3BPMXh1WEc0Z0lDOHZJRWh2YjJzZ2RYQWdhVzUwWlhKalpYQjBiM0p6SUcxcFpHUnNaWGRoY21WY2JpQWdkbUZ5SUdOb1lXbHVJRDBnVzJScGMzQmhkR05vVW1WeGRXVnpkQ3dnZFc1a1pXWnBibVZrWFR0Y2JpQWdkbUZ5SUhCeWIyMXBjMlVnUFNCUWNtOXRhWE5sTG5KbGMyOXNkbVVvWTI5dVptbG5LVHRjYmx4dUlDQjBhR2x6TG1sdWRHVnlZMlZ3ZEc5eWN5NXlaWEYxWlhOMExtWnZja1ZoWTJnb1puVnVZM1JwYjI0Z2RXNXphR2xtZEZKbGNYVmxjM1JKYm5SbGNtTmxjSFJ2Y25Nb2FXNTBaWEpqWlhCMGIzSXBJSHRjYmlBZ0lDQmphR0ZwYmk1MWJuTm9hV1owS0dsdWRHVnlZMlZ3ZEc5eUxtWjFiR1pwYkd4bFpDd2dhVzUwWlhKalpYQjBiM0l1Y21WcVpXTjBaV1FwTzF4dUlDQjlLVHRjYmx4dUlDQjBhR2x6TG1sdWRHVnlZMlZ3ZEc5eWN5NXlaWE53YjI1elpTNW1iM0pGWVdOb0tHWjFibU4wYVc5dUlIQjFjMmhTWlhOd2IyNXpaVWx1ZEdWeVkyVndkRzl5Y3locGJuUmxjbU5sY0hSdmNpa2dlMXh1SUNBZ0lHTm9ZV2x1TG5CMWMyZ29hVzUwWlhKalpYQjBiM0l1Wm5Wc1ptbHNiR1ZrTENCcGJuUmxjbU5sY0hSdmNpNXlaV3BsWTNSbFpDazdYRzRnSUgwcE8xeHVYRzRnSUhkb2FXeGxJQ2hqYUdGcGJpNXNaVzVuZEdncElIdGNiaUFnSUNCd2NtOXRhWE5sSUQwZ2NISnZiV2x6WlM1MGFHVnVLR05vWVdsdUxuTm9hV1owS0Nrc0lHTm9ZV2x1TG5Ob2FXWjBLQ2twTzF4dUlDQjlYRzVjYmlBZ2NtVjBkWEp1SUhCeWIyMXBjMlU3WEc1OU8xeHVYRzR2THlCUWNtOTJhV1JsSUdGc2FXRnpaWE1nWm05eUlITjFjSEJ2Y25SbFpDQnlaWEYxWlhOMElHMWxkR2h2WkhOY2JuVjBhV3h6TG1admNrVmhZMmdvV3lka1pXeGxkR1VuTENBbloyVjBKeXdnSjJobFlXUW5MQ0FuYjNCMGFXOXVjeWRkTENCbWRXNWpkR2x2YmlCbWIzSkZZV05vVFdWMGFHOWtUbTlFWVhSaEtHMWxkR2h2WkNrZ2UxeHVJQ0F2S21WemJHbHVkQ0JtZFc1akxXNWhiV1Z6T2pBcUwxeHVJQ0JCZUdsdmN5NXdjbTkwYjNSNWNHVmJiV1YwYUc5a1hTQTlJR1oxYm1OMGFXOXVLSFZ5YkN3Z1kyOXVabWxuS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtVnhkV1Z6ZENoMWRHbHNjeTV0WlhKblpTaGpiMjVtYVdjZ2ZId2dlMzBzSUh0Y2JpQWdJQ0FnSUcxbGRHaHZaRG9nYldWMGFHOWtMRnh1SUNBZ0lDQWdkWEpzT2lCMWNteGNiaUFnSUNCOUtTazdYRzRnSUgwN1hHNTlLVHRjYmx4dWRYUnBiSE11Wm05eVJXRmphQ2hiSjNCdmMzUW5MQ0FuY0hWMEp5d2dKM0JoZEdOb0oxMHNJR1oxYm1OMGFXOXVJR1p2Y2tWaFkyaE5aWFJvYjJSWGFYUm9SR0YwWVNodFpYUm9iMlFwSUh0Y2JpQWdMeXBsYzJ4cGJuUWdablZ1WXkxdVlXMWxjem93S2k5Y2JpQWdRWGhwYjNNdWNISnZkRzkwZVhCbFcyMWxkR2h2WkYwZ1BTQm1kVzVqZEdsdmJpaDFjbXdzSUdSaGRHRXNJR052Ym1acFp5a2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpsY1hWbGMzUW9kWFJwYkhNdWJXVnlaMlVvWTI5dVptbG5JSHg4SUh0OUxDQjdYRzRnSUNBZ0lDQnRaWFJvYjJRNklHMWxkR2h2WkN4Y2JpQWdJQ0FnSUhWeWJEb2dkWEpzTEZ4dUlDQWdJQ0FnWkdGMFlUb2daR0YwWVZ4dUlDQWdJSDBwS1R0Y2JpQWdmVHRjYm4wcE8xeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJRUY0YVc5ek8xeHVJaXdpSjNWelpTQnpkSEpwWTNRbk8xeHVYRzUyWVhJZ2RYUnBiSE1nUFNCeVpYRjFhWEpsS0NjdUx5NHVMM1YwYVd4ekp5azdYRzVjYm1aMWJtTjBhVzl1SUVsdWRHVnlZMlZ3ZEc5eVRXRnVZV2RsY2lncElIdGNiaUFnZEdocGN5NW9ZVzVrYkdWeWN5QTlJRnRkTzF4dWZWeHVYRzR2S2lwY2JpQXFJRUZrWkNCaElHNWxkeUJwYm5SbGNtTmxjSFJ2Y2lCMGJ5QjBhR1VnYzNSaFkydGNiaUFxWEc0Z0tpQkFjR0Z5WVcwZ2UwWjFibU4wYVc5dWZTQm1kV3htYVd4c1pXUWdWR2hsSUdaMWJtTjBhVzl1SUhSdklHaGhibVJzWlNCZ2RHaGxibUFnWm05eUlHRWdZRkJ5YjIxcGMyVmdYRzRnS2lCQWNHRnlZVzBnZTBaMWJtTjBhVzl1ZlNCeVpXcGxZM1JsWkNCVWFHVWdablZ1WTNScGIyNGdkRzhnYUdGdVpHeGxJR0J5WldwbFkzUmdJR1p2Y2lCaElHQlFjbTl0YVhObFlGeHVJQ3BjYmlBcUlFQnlaWFIxY200Z2UwNTFiV0psY24wZ1FXNGdTVVFnZFhObFpDQjBieUJ5WlcxdmRtVWdhVzUwWlhKalpYQjBiM0lnYkdGMFpYSmNiaUFxTDF4dVNXNTBaWEpqWlhCMGIzSk5ZVzVoWjJWeUxuQnliM1J2ZEhsd1pTNTFjMlVnUFNCbWRXNWpkR2x2YmlCMWMyVW9ablZzWm1sc2JHVmtMQ0J5WldwbFkzUmxaQ2tnZTF4dUlDQjBhR2x6TG1oaGJtUnNaWEp6TG5CMWMyZ29lMXh1SUNBZ0lHWjFiR1pwYkd4bFpEb2dablZzWm1sc2JHVmtMRnh1SUNBZ0lISmxhbVZqZEdWa09pQnlaV3BsWTNSbFpGeHVJQ0I5S1R0Y2JpQWdjbVYwZFhKdUlIUm9hWE11YUdGdVpHeGxjbk11YkdWdVozUm9JQzBnTVR0Y2JuMDdYRzVjYmk4cUtseHVJQ29nVW1WdGIzWmxJR0Z1SUdsdWRHVnlZMlZ3ZEc5eUlHWnliMjBnZEdobElITjBZV05yWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRPZFcxaVpYSjlJR2xrSUZSb1pTQkpSQ0IwYUdGMElIZGhjeUJ5WlhSMWNtNWxaQ0JpZVNCZ2RYTmxZRnh1SUNvdlhHNUpiblJsY21ObGNIUnZjazFoYm1GblpYSXVjSEp2ZEc5MGVYQmxMbVZxWldOMElEMGdablZ1WTNScGIyNGdaV3BsWTNRb2FXUXBJSHRjYmlBZ2FXWWdLSFJvYVhNdWFHRnVaR3hsY25OYmFXUmRLU0I3WEc0Z0lDQWdkR2hwY3k1b1lXNWtiR1Z5YzF0cFpGMGdQU0J1ZFd4c08xeHVJQ0I5WEc1OU8xeHVYRzR2S2lwY2JpQXFJRWwwWlhKaGRHVWdiM1psY2lCaGJHd2dkR2hsSUhKbFoybHpkR1Z5WldRZ2FXNTBaWEpqWlhCMGIzSnpYRzRnS2x4dUlDb2dWR2hwY3lCdFpYUm9iMlFnYVhNZ2NHRnlkR2xqZFd4aGNteDVJSFZ6WldaMWJDQm1iM0lnYzJ0cGNIQnBibWNnYjNabGNpQmhibmxjYmlBcUlHbHVkR1Z5WTJWd2RHOXljeUIwYUdGMElHMWhlU0JvWVhabElHSmxZMjl0WlNCZ2JuVnNiR0FnWTJGc2JHbHVaeUJnWldwbFkzUmdMbHh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdSblZ1WTNScGIyNTlJR1p1SUZSb1pTQm1kVzVqZEdsdmJpQjBieUJqWVd4c0lHWnZjaUJsWVdOb0lHbHVkR1Z5WTJWd2RHOXlYRzRnS2k5Y2JrbHVkR1Z5WTJWd2RHOXlUV0Z1WVdkbGNpNXdjbTkwYjNSNWNHVXVabTl5UldGamFDQTlJR1oxYm1OMGFXOXVJR1p2Y2tWaFkyZ29abTRwSUh0Y2JpQWdkWFJwYkhNdVptOXlSV0ZqYUNoMGFHbHpMbWhoYm1Sc1pYSnpMQ0JtZFc1amRHbHZiaUJtYjNKRllXTm9TR0Z1Wkd4bGNpaG9LU0I3WEc0Z0lDQWdhV1lnS0dnZ0lUMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lHWnVLR2dwTzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzU5TzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlFbHVkR1Z5WTJWd2RHOXlUV0Z1WVdkbGNqdGNiaUlzSWlkMWMyVWdjM1J5YVdOMEp6dGNibHh1ZG1GeUlHVnVhR0Z1WTJWRmNuSnZjaUE5SUhKbGNYVnBjbVVvSnk0dlpXNW9ZVzVqWlVWeWNtOXlKeWs3WEc1Y2JpOHFLbHh1SUNvZ1EzSmxZWFJsSUdGdUlFVnljbTl5SUhkcGRHZ2dkR2hsSUhOd1pXTnBabWxsWkNCdFpYTnpZV2RsTENCamIyNW1hV2NzSUdWeWNtOXlJR052WkdVc0lISmxjWFZsYzNRZ1lXNWtJSEpsYzNCdmJuTmxMbHh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdjM1J5YVc1bmZTQnRaWE56WVdkbElGUm9aU0JsY25KdmNpQnRaWE56WVdkbExseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJR052Ym1acFp5QlVhR1VnWTI5dVptbG5MbHh1SUNvZ1FIQmhjbUZ0SUh0emRISnBibWQ5SUZ0amIyUmxYU0JVYUdVZ1pYSnliM0lnWTI5a1pTQW9abTl5SUdWNFlXMXdiR1VzSUNkRlEwOU9Ua0ZDVDFKVVJVUW5LUzVjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCYmNtVnhkV1Z6ZEYwZ1ZHaGxJSEpsY1hWbGMzUXVYRzRnS2lCQWNHRnlZVzBnZTA5aWFtVmpkSDBnVzNKbGMzQnZibk5sWFNCVWFHVWdjbVZ6Y0c5dWMyVXVYRzRnS2lCQWNtVjBkWEp1Y3lCN1JYSnliM0o5SUZSb1pTQmpjbVZoZEdWa0lHVnljbTl5TGx4dUlDb3ZYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVJR055WldGMFpVVnljbTl5S0cxbGMzTmhaMlVzSUdOdmJtWnBaeXdnWTI5a1pTd2djbVZ4ZFdWemRDd2djbVZ6Y0c5dWMyVXBJSHRjYmlBZ2RtRnlJR1Z5Y205eUlEMGdibVYzSUVWeWNtOXlLRzFsYzNOaFoyVXBPMXh1SUNCeVpYUjFjbTRnWlc1b1lXNWpaVVZ5Y205eUtHVnljbTl5TENCamIyNW1hV2NzSUdOdlpHVXNJSEpsY1hWbGMzUXNJSEpsYzNCdmJuTmxLVHRjYm4wN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCMWRHbHNjeUE5SUhKbGNYVnBjbVVvSnk0dkxpNHZkWFJwYkhNbktUdGNiblpoY2lCMGNtRnVjMlp2Y20xRVlYUmhJRDBnY21WeGRXbHlaU2duTGk5MGNtRnVjMlp2Y20xRVlYUmhKeWs3WEc1MllYSWdhWE5EWVc1alpXd2dQU0J5WlhGMWFYSmxLQ2N1TGk5allXNWpaV3d2YVhORFlXNWpaV3duS1R0Y2JuWmhjaUJrWldaaGRXeDBjeUE5SUhKbGNYVnBjbVVvSnk0dUwyUmxabUYxYkhSekp5azdYRzUyWVhJZ2FYTkJZbk52YkhWMFpWVlNUQ0E5SUhKbGNYVnBjbVVvSnk0dkxpNHZhR1ZzY0dWeWN5OXBjMEZpYzI5c2RYUmxWVkpNSnlrN1hHNTJZWElnWTI5dFltbHVaVlZTVEhNZ1BTQnlaWEYxYVhKbEtDY3VMeTR1TDJobGJIQmxjbk12WTI5dFltbHVaVlZTVEhNbktUdGNibHh1THlvcVhHNGdLaUJVYUhKdmQzTWdZU0JnUTJGdVkyVnNZQ0JwWmlCallXNWpaV3hzWVhScGIyNGdhR0Z6SUdKbFpXNGdjbVZ4ZFdWemRHVmtMbHh1SUNvdlhHNW1kVzVqZEdsdmJpQjBhSEp2ZDBsbVEyRnVZMlZzYkdGMGFXOXVVbVZ4ZFdWemRHVmtLR052Ym1acFp5a2dlMXh1SUNCcFppQW9ZMjl1Wm1sbkxtTmhibU5sYkZSdmEyVnVLU0I3WEc0Z0lDQWdZMjl1Wm1sbkxtTmhibU5sYkZSdmEyVnVMblJvY205M1NXWlNaWEYxWlhOMFpXUW9LVHRjYmlBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUVScGMzQmhkR05vSUdFZ2NtVnhkV1Z6ZENCMGJ5QjBhR1VnYzJWeWRtVnlJSFZ6YVc1bklIUm9aU0JqYjI1bWFXZDFjbVZrSUdGa1lYQjBaWEl1WEc0Z0tseHVJQ29nUUhCaGNtRnRJSHR2WW1wbFkzUjlJR052Ym1acFp5QlVhR1VnWTI5dVptbG5JSFJvWVhRZ2FYTWdkRzhnWW1VZ2RYTmxaQ0JtYjNJZ2RHaGxJSEpsY1hWbGMzUmNiaUFxSUVCeVpYUjFjbTV6SUh0UWNtOXRhWE5sZlNCVWFHVWdVSEp2YldselpTQjBieUJpWlNCbWRXeG1hV3hzWldSY2JpQXFMMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUJrYVhOd1lYUmphRkpsY1hWbGMzUW9ZMjl1Wm1sbktTQjdYRzRnSUhSb2NtOTNTV1pEWVc1alpXeHNZWFJwYjI1U1pYRjFaWE4wWldRb1kyOXVabWxuS1R0Y2JseHVJQ0F2THlCVGRYQndiM0owSUdKaGMyVlZVa3dnWTI5dVptbG5YRzRnSUdsbUlDaGpiMjVtYVdjdVltRnpaVlZTVENBbUppQWhhWE5CWW5OdmJIVjBaVlZTVENoamIyNW1hV2N1ZFhKc0tTa2dlMXh1SUNBZ0lHTnZibVpwWnk1MWNtd2dQU0JqYjIxaWFXNWxWVkpNY3loamIyNW1hV2N1WW1GelpWVlNUQ3dnWTI5dVptbG5MblZ5YkNrN1hHNGdJSDFjYmx4dUlDQXZMeUJGYm5OMWNtVWdhR1ZoWkdWeWN5QmxlR2x6ZEZ4dUlDQmpiMjVtYVdjdWFHVmhaR1Z5Y3lBOUlHTnZibVpwWnk1b1pXRmtaWEp6SUh4OElIdDlPMXh1WEc0Z0lDOHZJRlJ5WVc1elptOXliU0J5WlhGMVpYTjBJR1JoZEdGY2JpQWdZMjl1Wm1sbkxtUmhkR0VnUFNCMGNtRnVjMlp2Y20xRVlYUmhLRnh1SUNBZ0lHTnZibVpwWnk1a1lYUmhMRnh1SUNBZ0lHTnZibVpwWnk1b1pXRmtaWEp6TEZ4dUlDQWdJR052Ym1acFp5NTBjbUZ1YzJadmNtMVNaWEYxWlhOMFhHNGdJQ2s3WEc1Y2JpQWdMeThnUm14aGRIUmxiaUJvWldGa1pYSnpYRzRnSUdOdmJtWnBaeTVvWldGa1pYSnpJRDBnZFhScGJITXViV1Z5WjJVb1hHNGdJQ0FnWTI5dVptbG5MbWhsWVdSbGNuTXVZMjl0Ylc5dUlIeDhJSHQ5TEZ4dUlDQWdJR052Ym1acFp5NW9aV0ZrWlhKelcyTnZibVpwWnk1dFpYUm9iMlJkSUh4OElIdDlMRnh1SUNBZ0lHTnZibVpwWnk1b1pXRmtaWEp6SUh4OElIdDlYRzRnSUNrN1hHNWNiaUFnZFhScGJITXVabTl5UldGamFDaGNiaUFnSUNCYkoyUmxiR1YwWlNjc0lDZG5aWFFuTENBbmFHVmhaQ2NzSUNkd2IzTjBKeXdnSjNCMWRDY3NJQ2R3WVhSamFDY3NJQ2RqYjIxdGIyNG5YU3hjYmlBZ0lDQm1kVzVqZEdsdmJpQmpiR1ZoYmtobFlXUmxja052Ym1acFp5aHRaWFJvYjJRcElIdGNiaUFnSUNBZ0lHUmxiR1YwWlNCamIyNW1hV2N1YUdWaFpHVnljMXR0WlhSb2IyUmRPMXh1SUNBZ0lIMWNiaUFnS1R0Y2JseHVJQ0IyWVhJZ1lXUmhjSFJsY2lBOUlHTnZibVpwWnk1aFpHRndkR1Z5SUh4OElHUmxabUYxYkhSekxtRmtZWEIwWlhJN1hHNWNiaUFnY21WMGRYSnVJR0ZrWVhCMFpYSW9ZMjl1Wm1sbktTNTBhR1Z1S0daMWJtTjBhVzl1SUc5dVFXUmhjSFJsY2xKbGMyOXNkWFJwYjI0b2NtVnpjRzl1YzJVcElIdGNiaUFnSUNCMGFISnZkMGxtUTJGdVkyVnNiR0YwYVc5dVVtVnhkV1Z6ZEdWa0tHTnZibVpwWnlrN1hHNWNiaUFnSUNBdkx5QlVjbUZ1YzJadmNtMGdjbVZ6Y0c5dWMyVWdaR0YwWVZ4dUlDQWdJSEpsYzNCdmJuTmxMbVJoZEdFZ1BTQjBjbUZ1YzJadmNtMUVZWFJoS0Z4dUlDQWdJQ0FnY21WemNHOXVjMlV1WkdGMFlTeGNiaUFnSUNBZ0lISmxjM0J2Ym5ObExtaGxZV1JsY25Nc1hHNGdJQ0FnSUNCamIyNW1hV2N1ZEhKaGJuTm1iM0p0VW1WemNHOXVjMlZjYmlBZ0lDQXBPMXh1WEc0Z0lDQWdjbVYwZFhKdUlISmxjM0J2Ym5ObE8xeHVJQ0I5TENCbWRXNWpkR2x2YmlCdmJrRmtZWEIwWlhKU1pXcGxZM1JwYjI0b2NtVmhjMjl1S1NCN1hHNGdJQ0FnYVdZZ0tDRnBjME5oYm1ObGJDaHlaV0Z6YjI0cEtTQjdYRzRnSUNBZ0lDQjBhSEp2ZDBsbVEyRnVZMlZzYkdGMGFXOXVVbVZ4ZFdWemRHVmtLR052Ym1acFp5azdYRzVjYmlBZ0lDQWdJQzh2SUZSeVlXNXpabTl5YlNCeVpYTndiMjV6WlNCa1lYUmhYRzRnSUNBZ0lDQnBaaUFvY21WaGMyOXVJQ1ltSUhKbFlYTnZiaTV5WlhOd2IyNXpaU2tnZTF4dUlDQWdJQ0FnSUNCeVpXRnpiMjR1Y21WemNHOXVjMlV1WkdGMFlTQTlJSFJ5WVc1elptOXliVVJoZEdFb1hHNGdJQ0FnSUNBZ0lDQWdjbVZoYzI5dUxuSmxjM0J2Ym5ObExtUmhkR0VzWEc0Z0lDQWdJQ0FnSUNBZ2NtVmhjMjl1TG5KbGMzQnZibk5sTG1obFlXUmxjbk1zWEc0Z0lDQWdJQ0FnSUNBZ1kyOXVabWxuTG5SeVlXNXpabTl5YlZKbGMzQnZibk5sWEc0Z0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRkJ5YjIxcGMyVXVjbVZxWldOMEtISmxZWE52YmlrN1hHNGdJSDBwTzF4dWZUdGNiaUlzSWlkMWMyVWdjM1J5YVdOMEp6dGNibHh1THlvcVhHNGdLaUJWY0dSaGRHVWdZVzRnUlhKeWIzSWdkMmwwYUNCMGFHVWdjM0JsWTJsbWFXVmtJR052Ym1acFp5d2daWEp5YjNJZ1kyOWtaU3dnWVc1a0lISmxjM0J2Ym5ObExseHVJQ3BjYmlBcUlFQndZWEpoYlNCN1JYSnliM0o5SUdWeWNtOXlJRlJvWlNCbGNuSnZjaUIwYnlCMWNHUmhkR1V1WEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ1kyOXVabWxuSUZSb1pTQmpiMjVtYVdjdVhHNGdLaUJBY0dGeVlXMGdlM04wY21sdVozMGdXMk52WkdWZElGUm9aU0JsY25KdmNpQmpiMlJsSUNobWIzSWdaWGhoYlhCc1pTd2dKMFZEVDA1T1FVSlBVbFJGUkNjcExseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJRnR5WlhGMVpYTjBYU0JVYUdVZ2NtVnhkV1Z6ZEM1Y2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQmJjbVZ6Y0c5dWMyVmRJRlJvWlNCeVpYTndiMjV6WlM1Y2JpQXFJRUJ5WlhSMWNtNXpJSHRGY25KdmNuMGdWR2hsSUdWeWNtOXlMbHh1SUNvdlhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlHVnVhR0Z1WTJWRmNuSnZjaWhsY25KdmNpd2dZMjl1Wm1sbkxDQmpiMlJsTENCeVpYRjFaWE4wTENCeVpYTndiMjV6WlNrZ2UxeHVJQ0JsY25KdmNpNWpiMjVtYVdjZ1BTQmpiMjVtYVdjN1hHNGdJR2xtSUNoamIyUmxLU0I3WEc0Z0lDQWdaWEp5YjNJdVkyOWtaU0E5SUdOdlpHVTdYRzRnSUgxY2JpQWdaWEp5YjNJdWNtVnhkV1Z6ZENBOUlISmxjWFZsYzNRN1hHNGdJR1Z5Y205eUxuSmxjM0J2Ym5ObElEMGdjbVZ6Y0c5dWMyVTdYRzRnSUhKbGRIVnliaUJsY25KdmNqdGNibjA3WEc0aUxDSW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JuWmhjaUJqY21WaGRHVkZjbkp2Y2lBOUlISmxjWFZwY21Vb0p5NHZZM0psWVhSbFJYSnliM0luS1R0Y2JseHVMeW9xWEc0Z0tpQlNaWE52YkhabElHOXlJSEpsYW1WamRDQmhJRkJ5YjIxcGMyVWdZbUZ6WldRZ2IyNGdjbVZ6Y0c5dWMyVWdjM1JoZEhWekxseHVJQ3BjYmlBcUlFQndZWEpoYlNCN1JuVnVZM1JwYjI1OUlISmxjMjlzZG1VZ1FTQm1kVzVqZEdsdmJpQjBhR0YwSUhKbGMyOXNkbVZ6SUhSb1pTQndjbTl0YVhObExseHVJQ29nUUhCaGNtRnRJSHRHZFc1amRHbHZibjBnY21WcVpXTjBJRUVnWm5WdVkzUnBiMjRnZEdoaGRDQnlaV3BsWTNSeklIUm9aU0J3Y205dGFYTmxMbHh1SUNvZ1FIQmhjbUZ0SUh0dlltcGxZM1I5SUhKbGMzQnZibk5sSUZSb1pTQnlaWE53YjI1elpTNWNiaUFxTDF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlCelpYUjBiR1VvY21WemIyeDJaU3dnY21WcVpXTjBMQ0J5WlhOd2IyNXpaU2tnZTF4dUlDQjJZWElnZG1Gc2FXUmhkR1ZUZEdGMGRYTWdQU0J5WlhOd2IyNXpaUzVqYjI1bWFXY3VkbUZzYVdSaGRHVlRkR0YwZFhNN1hHNGdJQzh2SUU1dmRHVTZJSE4wWVhSMWN5QnBjeUJ1YjNRZ1pYaHdiM05sWkNCaWVTQllSRzl0WVdsdVVtVnhkV1Z6ZEZ4dUlDQnBaaUFvSVhKbGMzQnZibk5sTG5OMFlYUjFjeUI4ZkNBaGRtRnNhV1JoZEdWVGRHRjBkWE1nZkh3Z2RtRnNhV1JoZEdWVGRHRjBkWE1vY21WemNHOXVjMlV1YzNSaGRIVnpLU2tnZTF4dUlDQWdJSEpsYzI5c2RtVW9jbVZ6Y0c5dWMyVXBPMXh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJSEpsYW1WamRDaGpjbVZoZEdWRmNuSnZjaWhjYmlBZ0lDQWdJQ2RTWlhGMVpYTjBJR1poYVd4bFpDQjNhWFJvSUhOMFlYUjFjeUJqYjJSbElDY2dLeUJ5WlhOd2IyNXpaUzV6ZEdGMGRYTXNYRzRnSUNBZ0lDQnlaWE53YjI1elpTNWpiMjVtYVdjc1hHNGdJQ0FnSUNCdWRXeHNMRnh1SUNBZ0lDQWdjbVZ6Y0c5dWMyVXVjbVZ4ZFdWemRDeGNiaUFnSUNBZ0lISmxjM0J2Ym5ObFhHNGdJQ0FnS1NrN1hHNGdJSDFjYm4wN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCMWRHbHNjeUE5SUhKbGNYVnBjbVVvSnk0dkxpNHZkWFJwYkhNbktUdGNibHh1THlvcVhHNGdLaUJVY21GdWMyWnZjbTBnZEdobElHUmhkR0VnWm05eUlHRWdjbVZ4ZFdWemRDQnZjaUJoSUhKbGMzQnZibk5sWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjhVM1J5YVc1bmZTQmtZWFJoSUZSb1pTQmtZWFJoSUhSdklHSmxJSFJ5WVc1elptOXliV1ZrWEc0Z0tpQkFjR0Z5WVcwZ2UwRnljbUY1ZlNCb1pXRmtaWEp6SUZSb1pTQm9aV0ZrWlhKeklHWnZjaUIwYUdVZ2NtVnhkV1Z6ZENCdmNpQnlaWE53YjI1elpWeHVJQ29nUUhCaGNtRnRJSHRCY25KaGVYeEdkVzVqZEdsdmJuMGdabTV6SUVFZ2MybHVaMnhsSUdaMWJtTjBhVzl1SUc5eUlFRnljbUY1SUc5bUlHWjFibU4wYVc5dWMxeHVJQ29nUUhKbGRIVnlibk1nZXlwOUlGUm9aU0J5WlhOMWJIUnBibWNnZEhKaGJuTm1iM0p0WldRZ1pHRjBZVnh1SUNvdlhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlIUnlZVzV6Wm05eWJVUmhkR0VvWkdGMFlTd2dhR1ZoWkdWeWN5d2dabTV6S1NCN1hHNGdJQzhxWlhOc2FXNTBJRzV2TFhCaGNtRnRMWEpsWVhOemFXZHVPakFxTDF4dUlDQjFkR2xzY3k1bWIzSkZZV05vS0dadWN5d2dablZ1WTNScGIyNGdkSEpoYm5ObWIzSnRLR1p1S1NCN1hHNGdJQ0FnWkdGMFlTQTlJR1p1S0dSaGRHRXNJR2hsWVdSbGNuTXBPMXh1SUNCOUtUdGNibHh1SUNCeVpYUjFjbTRnWkdGMFlUdGNibjA3WEc0aUxDSW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JuWmhjaUIxZEdsc2N5QTlJSEpsY1hWcGNtVW9KeTR2ZFhScGJITW5LVHRjYm5aaGNpQnViM0p0WVd4cGVtVklaV0ZrWlhKT1lXMWxJRDBnY21WeGRXbHlaU2duTGk5b1pXeHdaWEp6TDI1dmNtMWhiR2w2WlVobFlXUmxjazVoYldVbktUdGNibHh1ZG1GeUlFUkZSa0ZWVEZSZlEwOU9WRVZPVkY5VVdWQkZJRDBnZTF4dUlDQW5RMjl1ZEdWdWRDMVVlWEJsSnpvZ0oyRndjR3hwWTJGMGFXOXVMM2d0ZDNkM0xXWnZjbTB0ZFhKc1pXNWpiMlJsWkNkY2JuMDdYRzVjYm1aMWJtTjBhVzl1SUhObGRFTnZiblJsYm5SVWVYQmxTV1pWYm5ObGRDaG9aV0ZrWlhKekxDQjJZV3gxWlNrZ2UxeHVJQ0JwWmlBb0lYVjBhV3h6TG1selZXNWtaV1pwYm1Wa0tHaGxZV1JsY25NcElDWW1JSFYwYVd4ekxtbHpWVzVrWldacGJtVmtLR2hsWVdSbGNuTmJKME52Ym5SbGJuUXRWSGx3WlNkZEtTa2dlMXh1SUNBZ0lHaGxZV1JsY25OYkowTnZiblJsYm5RdFZIbHdaU2RkSUQwZ2RtRnNkV1U3WEc0Z0lIMWNibjFjYmx4dVpuVnVZM1JwYjI0Z1oyVjBSR1ZtWVhWc2RFRmtZWEIwWlhJb0tTQjdYRzRnSUhaaGNpQmhaR0Z3ZEdWeU8xeHVJQ0JwWmlBb2RIbHdaVzltSUZoTlRFaDBkSEJTWlhGMVpYTjBJQ0U5UFNBbmRXNWtaV1pwYm1Wa0p5a2dlMXh1SUNBZ0lDOHZJRVp2Y2lCaWNtOTNjMlZ5Y3lCMWMyVWdXRWhTSUdGa1lYQjBaWEpjYmlBZ0lDQmhaR0Z3ZEdWeUlEMGdjbVZ4ZFdseVpTZ25MaTloWkdGd2RHVnljeTk0YUhJbktUdGNiaUFnZlNCbGJITmxJR2xtSUNoMGVYQmxiMllnY0hKdlkyVnpjeUFoUFQwZ0ozVnVaR1ZtYVc1bFpDY3BJSHRjYmlBZ0lDQXZMeUJHYjNJZ2JtOWtaU0IxYzJVZ1NGUlVVQ0JoWkdGd2RHVnlYRzRnSUNBZ1lXUmhjSFJsY2lBOUlISmxjWFZwY21Vb0p5NHZZV1JoY0hSbGNuTXZhSFIwY0NjcE8xeHVJQ0I5WEc0Z0lISmxkSFZ5YmlCaFpHRndkR1Z5TzF4dWZWeHVYRzUyWVhJZ1pHVm1ZWFZzZEhNZ1BTQjdYRzRnSUdGa1lYQjBaWEk2SUdkbGRFUmxabUYxYkhSQlpHRndkR1Z5S0Nrc1hHNWNiaUFnZEhKaGJuTm1iM0p0VW1WeGRXVnpkRG9nVzJaMWJtTjBhVzl1SUhSeVlXNXpabTl5YlZKbGNYVmxjM1FvWkdGMFlTd2dhR1ZoWkdWeWN5a2dlMXh1SUNBZ0lHNXZjbTFoYkdsNlpVaGxZV1JsY2s1aGJXVW9hR1ZoWkdWeWN5d2dKME52Ym5SbGJuUXRWSGx3WlNjcE8xeHVJQ0FnSUdsbUlDaDFkR2xzY3k1cGMwWnZjbTFFWVhSaEtHUmhkR0VwSUh4OFhHNGdJQ0FnSUNCMWRHbHNjeTVwYzBGeWNtRjVRblZtWm1WeUtHUmhkR0VwSUh4OFhHNGdJQ0FnSUNCMWRHbHNjeTVwYzBKMVptWmxjaWhrWVhSaEtTQjhmRnh1SUNBZ0lDQWdkWFJwYkhNdWFYTlRkSEpsWVcwb1pHRjBZU2tnZkh4Y2JpQWdJQ0FnSUhWMGFXeHpMbWx6Um1sc1pTaGtZWFJoS1NCOGZGeHVJQ0FnSUNBZ2RYUnBiSE11YVhOQ2JHOWlLR1JoZEdFcFhHNGdJQ0FnS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnWkdGMFlUdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tIVjBhV3h6TG1selFYSnlZWGxDZFdabVpYSldhV1YzS0dSaGRHRXBLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdaR0YwWVM1aWRXWm1aWEk3WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2gxZEdsc2N5NXBjMVZTVEZObFlYSmphRkJoY21GdGN5aGtZWFJoS1NrZ2UxeHVJQ0FnSUNBZ2MyVjBRMjl1ZEdWdWRGUjVjR1ZKWmxWdWMyVjBLR2hsWVdSbGNuTXNJQ2RoY0hCc2FXTmhkR2x2Ymk5NExYZDNkeTFtYjNKdExYVnliR1Z1WTI5a1pXUTdZMmhoY25ObGREMTFkR1l0T0NjcE8xeHVJQ0FnSUNBZ2NtVjBkWEp1SUdSaGRHRXVkRzlUZEhKcGJtY29LVHRjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLSFYwYVd4ekxtbHpUMkpxWldOMEtHUmhkR0VwS1NCN1hHNGdJQ0FnSUNCelpYUkRiMjUwWlc1MFZIbHdaVWxtVlc1elpYUW9hR1ZoWkdWeWN5d2dKMkZ3Y0d4cFkyRjBhVzl1TDJwemIyNDdZMmhoY25ObGREMTFkR1l0T0NjcE8xeHVJQ0FnSUNBZ2NtVjBkWEp1SUVwVFQwNHVjM1J5YVc1bmFXWjVLR1JoZEdFcE8xeHVJQ0FnSUgxY2JpQWdJQ0J5WlhSMWNtNGdaR0YwWVR0Y2JpQWdmVjBzWEc1Y2JpQWdkSEpoYm5ObWIzSnRVbVZ6Y0c5dWMyVTZJRnRtZFc1amRHbHZiaUIwY21GdWMyWnZjbTFTWlhOd2IyNXpaU2hrWVhSaEtTQjdYRzRnSUNBZ0x5cGxjMnhwYm5RZ2JtOHRjR0Z5WVcwdGNtVmhjM05wWjI0Nk1Db3ZYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQmtZWFJoSUQwOVBTQW5jM1J5YVc1bkp5a2dlMXh1SUNBZ0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ1pHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1pHRjBZU2s3WEc0Z0lDQWdJQ0I5SUdOaGRHTm9JQ2hsS1NCN0lDOHFJRWxuYm05eVpTQXFMeUI5WEc0Z0lDQWdmVnh1SUNBZ0lISmxkSFZ5YmlCa1lYUmhPMXh1SUNCOVhTeGNibHh1SUNBdktpcGNiaUFnSUNvZ1FTQjBhVzFsYjNWMElHbHVJRzFwYkd4cGMyVmpiMjVrY3lCMGJ5QmhZbTl5ZENCaElISmxjWFZsYzNRdUlFbG1JSE5sZENCMGJ5QXdJQ2hrWldaaGRXeDBLU0JoWEc0Z0lDQXFJSFJwYldWdmRYUWdhWE1nYm05MElHTnlaV0YwWldRdVhHNGdJQ0FxTDF4dUlDQjBhVzFsYjNWME9pQXdMRnh1WEc0Z0lIaHpjbVpEYjI5cmFXVk9ZVzFsT2lBbldGTlNSaTFVVDB0RlRpY3NYRzRnSUhoemNtWklaV0ZrWlhKT1lXMWxPaUFuV0MxWVUxSkdMVlJQUzBWT0p5eGNibHh1SUNCdFlYaERiMjUwWlc1MFRHVnVaM1JvT2lBdE1TeGNibHh1SUNCMllXeHBaR0YwWlZOMFlYUjFjem9nWm5WdVkzUnBiMjRnZG1Gc2FXUmhkR1ZUZEdGMGRYTW9jM1JoZEhWektTQjdYRzRnSUNBZ2NtVjBkWEp1SUhOMFlYUjFjeUErUFNBeU1EQWdKaVlnYzNSaGRIVnpJRHdnTXpBd08xeHVJQ0I5WEc1OU8xeHVYRzVrWldaaGRXeDBjeTVvWldGa1pYSnpJRDBnZTF4dUlDQmpiMjF0YjI0NklIdGNiaUFnSUNBblFXTmpaWEIwSnpvZ0oyRndjR3hwWTJGMGFXOXVMMnB6YjI0c0lIUmxlSFF2Y0d4aGFXNHNJQ292S2lkY2JpQWdmVnh1ZlR0Y2JseHVkWFJwYkhNdVptOXlSV0ZqYUNoYkoyUmxiR1YwWlNjc0lDZG5aWFFuTENBbmFHVmhaQ2RkTENCbWRXNWpkR2x2YmlCbWIzSkZZV05vVFdWMGFHOWtUbTlFWVhSaEtHMWxkR2h2WkNrZ2UxeHVJQ0JrWldaaGRXeDBjeTVvWldGa1pYSnpXMjFsZEdodlpGMGdQU0I3ZlR0Y2JuMHBPMXh1WEc1MWRHbHNjeTVtYjNKRllXTm9LRnNuY0c5emRDY3NJQ2R3ZFhRbkxDQW5jR0YwWTJnblhTd2dablZ1WTNScGIyNGdabTl5UldGamFFMWxkR2h2WkZkcGRHaEVZWFJoS0cxbGRHaHZaQ2tnZTF4dUlDQmtaV1poZFd4MGN5NW9aV0ZrWlhKelcyMWxkR2h2WkYwZ1BTQjFkR2xzY3k1dFpYSm5aU2hFUlVaQlZVeFVYME5QVGxSRlRsUmZWRmxRUlNrN1hHNTlLVHRjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCa1pXWmhkV3gwY3p0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpQmlhVzVrS0dadUxDQjBhR2x6UVhKbktTQjdYRzRnSUhKbGRIVnliaUJtZFc1amRHbHZiaUIzY21Gd0tDa2dlMXh1SUNBZ0lIWmhjaUJoY21keklEMGdibVYzSUVGeWNtRjVLR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ3BPMXh1SUNBZ0lHWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2dZWEpuY3k1c1pXNW5kR2c3SUdrckt5a2dlMXh1SUNBZ0lDQWdZWEpuYzF0cFhTQTlJR0Z5WjNWdFpXNTBjMXRwWFR0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlHWnVMbUZ3Y0d4NUtIUm9hWE5CY21jc0lHRnlaM01wTzF4dUlDQjlPMXh1ZlR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVMeThnWW5SdllTQndiMng1Wm1sc2JDQm1iM0lnU1VVOE1UQWdZMjkxY25SbGMza2dhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMMlJoZG1sa1kyaGhiV0psY25NdlFtRnpaVFkwTG1welhHNWNiblpoY2lCamFHRnljeUE5SUNkQlFrTkVSVVpIU0VsS1MweE5UazlRVVZKVFZGVldWMWhaV21GaVkyUmxabWRvYVdwcmJHMXViM0J4Y25OMGRYWjNlSGw2TURFeU16UTFOamM0T1NzdlBTYzdYRzVjYm1aMWJtTjBhVzl1SUVVb0tTQjdYRzRnSUhSb2FYTXViV1Z6YzJGblpTQTlJQ2RUZEhKcGJtY2dZMjl1ZEdGcGJuTWdZVzRnYVc1MllXeHBaQ0JqYUdGeVlXTjBaWEluTzF4dWZWeHVSUzV3Y205MGIzUjVjR1VnUFNCdVpYY2dSWEp5YjNJN1hHNUZMbkJ5YjNSdmRIbHdaUzVqYjJSbElEMGdOVHRjYmtVdWNISnZkRzkwZVhCbExtNWhiV1VnUFNBblNXNTJZV3hwWkVOb1lYSmhZM1JsY2tWeWNtOXlKenRjYmx4dVpuVnVZM1JwYjI0Z1luUnZZU2hwYm5CMWRDa2dlMXh1SUNCMllYSWdjM1J5SUQwZ1UzUnlhVzVuS0dsdWNIVjBLVHRjYmlBZ2RtRnlJRzkxZEhCMWRDQTlJQ2NuTzF4dUlDQm1iM0lnS0Z4dUlDQWdJQzh2SUdsdWFYUnBZV3hwZW1VZ2NtVnpkV3gwSUdGdVpDQmpiM1Z1ZEdWeVhHNGdJQ0FnZG1GeUlHSnNiMk5yTENCamFHRnlRMjlrWlN3Z2FXUjRJRDBnTUN3Z2JXRndJRDBnWTJoaGNuTTdYRzRnSUNBZ0x5OGdhV1lnZEdobElHNWxlSFFnYzNSeUlHbHVaR1Y0SUdSdlpYTWdibTkwSUdWNGFYTjBPbHh1SUNBZ0lDOHZJQ0FnWTJoaGJtZGxJSFJvWlNCdFlYQndhVzVuSUhSaFlteGxJSFJ2SUZ3aVBWd2lYRzRnSUNBZ0x5OGdJQ0JqYUdWamF5QnBaaUJrSUdoaGN5QnVieUJtY21GamRHbHZibUZzSUdScFoybDBjMXh1SUNBZ0lITjBjaTVqYUdGeVFYUW9hV1I0SUh3Z01Da2dmSHdnS0cxaGNDQTlJQ2M5Snl3Z2FXUjRJQ1VnTVNrN1hHNGdJQ0FnTHk4Z1hDSTRJQzBnYVdSNElDVWdNU0FxSURoY0lpQm5aVzVsY21GMFpYTWdkR2hsSUhObGNYVmxibU5sSURJc0lEUXNJRFlzSURoY2JpQWdJQ0J2ZFhSd2RYUWdLejBnYldGd0xtTm9ZWEpCZENnMk15QW1JR0pzYjJOcklENCtJRGdnTFNCcFpIZ2dKU0F4SUNvZ09DbGNiaUFnS1NCN1hHNGdJQ0FnWTJoaGNrTnZaR1VnUFNCemRISXVZMmhoY2tOdlpHVkJkQ2hwWkhnZ0t6MGdNeUF2SURRcE8xeHVJQ0FnSUdsbUlDaGphR0Z5UTI5a1pTQStJREI0UmtZcElIdGNiaUFnSUNBZ0lIUm9jbTkzSUc1bGR5QkZLQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lHSnNiMk5ySUQwZ1lteHZZMnNnUER3Z09DQjhJR05vWVhKRGIyUmxPMXh1SUNCOVhHNGdJSEpsZEhWeWJpQnZkWFJ3ZFhRN1hHNTlYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWW5SdllUdGNiaUlzSWlkMWMyVWdjM1J5YVdOMEp6dGNibHh1ZG1GeUlIVjBhV3h6SUQwZ2NtVnhkV2x5WlNnbkxpOHVMaTkxZEdsc2N5Y3BPMXh1WEc1bWRXNWpkR2x2YmlCbGJtTnZaR1VvZG1Gc0tTQjdYRzRnSUhKbGRIVnliaUJsYm1OdlpHVlZVa2xEYjIxd2IyNWxiblFvZG1Gc0tTNWNiaUFnSUNCeVpYQnNZV05sS0M4bE5EQXZaMmtzSUNkQUp5a3VYRzRnSUNBZ2NtVndiR0ZqWlNndkpUTkJMMmRwTENBbk9pY3BMbHh1SUNBZ0lISmxjR3hoWTJVb0x5VXlOQzluTENBbkpDY3BMbHh1SUNBZ0lISmxjR3hoWTJVb0x5VXlReTluYVN3Z0p5d25LUzVjYmlBZ0lDQnlaWEJzWVdObEtDOGxNakF2Wnl3Z0p5c25LUzVjYmlBZ0lDQnlaWEJzWVdObEtDOGxOVUl2WjJrc0lDZGJKeWt1WEc0Z0lDQWdjbVZ3YkdGalpTZ3ZKVFZFTDJkcExDQW5YU2NwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRUoxYVd4a0lHRWdWVkpNSUdKNUlHRndjR1Z1WkdsdVp5QndZWEpoYlhNZ2RHOGdkR2hsSUdWdVpGeHVJQ3BjYmlBcUlFQndZWEpoYlNCN2MzUnlhVzVuZlNCMWNtd2dWR2hsSUdKaGMyVWdiMllnZEdobElIVnliQ0FvWlM1bkxpd2dhSFIwY0RvdkwzZDNkeTVuYjI5bmJHVXVZMjl0S1Z4dUlDb2dRSEJoY21GdElIdHZZbXBsWTNSOUlGdHdZWEpoYlhOZElGUm9aU0J3WVhKaGJYTWdkRzhnWW1VZ1lYQndaVzVrWldSY2JpQXFJRUJ5WlhSMWNtNXpJSHR6ZEhKcGJtZDlJRlJvWlNCbWIzSnRZWFIwWldRZ2RYSnNYRzRnS2k5Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0Z1luVnBiR1JWVWt3b2RYSnNMQ0J3WVhKaGJYTXNJSEJoY21GdGMxTmxjbWxoYkdsNlpYSXBJSHRjYmlBZ0x5cGxjMnhwYm5RZ2JtOHRjR0Z5WVcwdGNtVmhjM05wWjI0Nk1Db3ZYRzRnSUdsbUlDZ2hjR0Z5WVcxektTQjdYRzRnSUNBZ2NtVjBkWEp1SUhWeWJEdGNiaUFnZlZ4dVhHNGdJSFpoY2lCelpYSnBZV3hwZW1Wa1VHRnlZVzF6TzF4dUlDQnBaaUFvY0dGeVlXMXpVMlZ5YVdGc2FYcGxjaWtnZTF4dUlDQWdJSE5sY21saGJHbDZaV1JRWVhKaGJYTWdQU0J3WVhKaGJYTlRaWEpwWVd4cGVtVnlLSEJoY21GdGN5azdYRzRnSUgwZ1pXeHpaU0JwWmlBb2RYUnBiSE11YVhOVlVreFRaV0Z5WTJoUVlYSmhiWE1vY0dGeVlXMXpLU2tnZTF4dUlDQWdJSE5sY21saGJHbDZaV1JRWVhKaGJYTWdQU0J3WVhKaGJYTXVkRzlUZEhKcGJtY29LVHRjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0IyWVhJZ2NHRnlkSE1nUFNCYlhUdGNibHh1SUNBZ0lIVjBhV3h6TG1admNrVmhZMmdvY0dGeVlXMXpMQ0JtZFc1amRHbHZiaUJ6WlhKcFlXeHBlbVVvZG1Gc0xDQnJaWGtwSUh0Y2JpQWdJQ0FnSUdsbUlDaDJZV3dnUFQwOUlHNTFiR3dnZkh3Z2RIbHdaVzltSUhaaGJDQTlQVDBnSjNWdVpHVm1hVzVsWkNjcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnBaaUFvZFhScGJITXVhWE5CY25KaGVTaDJZV3dwS1NCN1hHNGdJQ0FnSUNBZ0lHdGxlU0E5SUd0bGVTQXJJQ2RiWFNjN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCMllXd2dQU0JiZG1Gc1hUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkWFJwYkhNdVptOXlSV0ZqYUNoMllXd3NJR1oxYm1OMGFXOXVJSEJoY25ObFZtRnNkV1VvZGlrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvZFhScGJITXVhWE5FWVhSbEtIWXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RpQTlJSFl1ZEc5SlUwOVRkSEpwYm1jb0tUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2gxZEdsc2N5NXBjMDlpYW1WamRDaDJLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lIWWdQU0JLVTA5T0xuTjBjbWx1WjJsbWVTaDJLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCd1lYSjBjeTV3ZFhOb0tHVnVZMjlrWlNoclpYa3BJQ3NnSnowbklDc2daVzVqYjJSbEtIWXBLVHRjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJSDBwTzF4dVhHNGdJQ0FnYzJWeWFXRnNhWHBsWkZCaGNtRnRjeUE5SUhCaGNuUnpMbXB2YVc0b0p5WW5LVHRjYmlBZ2ZWeHVYRzRnSUdsbUlDaHpaWEpwWVd4cGVtVmtVR0Z5WVcxektTQjdYRzRnSUNBZ2RYSnNJQ3M5SUNoMWNtd3VhVzVrWlhoUFppZ25QeWNwSUQwOVBTQXRNU0EvSUNjL0p5QTZJQ2NtSnlrZ0t5QnpaWEpwWVd4cGVtVmtVR0Z5WVcxek8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlIVnliRHRjYm4wN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiaThxS2x4dUlDb2dRM0psWVhSbGN5QmhJRzVsZHlCVlVrd2dZbmtnWTI5dFltbHVhVzVuSUhSb1pTQnpjR1ZqYVdacFpXUWdWVkpNYzF4dUlDcGNiaUFxSUVCd1lYSmhiU0I3YzNSeWFXNW5mU0JpWVhObFZWSk1JRlJvWlNCaVlYTmxJRlZTVEZ4dUlDb2dRSEJoY21GdElIdHpkSEpwYm1kOUlISmxiR0YwYVhabFZWSk1JRlJvWlNCeVpXeGhkR2wyWlNCVlVreGNiaUFxSUVCeVpYUjFjbTV6SUh0emRISnBibWQ5SUZSb1pTQmpiMjFpYVc1bFpDQlZVa3hjYmlBcUwxeHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpQmpiMjFpYVc1bFZWSk1jeWhpWVhObFZWSk1MQ0J5Wld4aGRHbDJaVlZTVENrZ2UxeHVJQ0J5WlhSMWNtNGdjbVZzWVhScGRtVlZVa3hjYmlBZ0lDQS9JR0poYzJWVlVrd3VjbVZ3YkdGalpTZ3ZYRnd2S3lRdkxDQW5KeWtnS3lBbkx5Y2dLeUJ5Wld4aGRHbDJaVlZTVEM1eVpYQnNZV05sS0M5ZVhGd3ZLeThzSUNjbktWeHVJQ0FnSURvZ1ltRnpaVlZTVER0Y2JuMDdYRzRpTENJbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQjFkR2xzY3lBOUlISmxjWFZwY21Vb0p5NHZMaTR2ZFhScGJITW5LVHRjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNBb1hHNGdJSFYwYVd4ekxtbHpVM1JoYm1SaGNtUkNjbTkzYzJWeVJXNTJLQ2tnUDF4dVhHNGdJQzh2SUZOMFlXNWtZWEprSUdKeWIzZHpaWElnWlc1MmN5QnpkWEJ3YjNKMElHUnZZM1Z0Wlc1MExtTnZiMnRwWlZ4dUlDQW9ablZ1WTNScGIyNGdjM1JoYm1SaGNtUkNjbTkzYzJWeVJXNTJLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQjdYRzRnSUNBZ0lDQjNjbWwwWlRvZ1puVnVZM1JwYjI0Z2QzSnBkR1VvYm1GdFpTd2dkbUZzZFdVc0lHVjRjR2x5WlhNc0lIQmhkR2dzSUdSdmJXRnBiaXdnYzJWamRYSmxLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQmpiMjlyYVdVZ1BTQmJYVHRjYmlBZ0lDQWdJQ0FnWTI5dmEybGxMbkIxYzJnb2JtRnRaU0FySUNjOUp5QXJJR1Z1WTI5a1pWVlNTVU52YlhCdmJtVnVkQ2gyWVd4MVpTa3BPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaDFkR2xzY3k1cGMwNTFiV0psY2lobGVIQnBjbVZ6S1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJR052YjJ0cFpTNXdkWE5vS0NkbGVIQnBjbVZ6UFNjZ0t5QnVaWGNnUkdGMFpTaGxlSEJwY21WektTNTBiMGROVkZOMGNtbHVaeWdwS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoMWRHbHNjeTVwYzFOMGNtbHVaeWh3WVhSb0tTa2dlMXh1SUNBZ0lDQWdJQ0FnSUdOdmIydHBaUzV3ZFhOb0tDZHdZWFJvUFNjZ0t5QndZWFJvS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoMWRHbHNjeTVwYzFOMGNtbHVaeWhrYjIxaGFXNHBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyOXZhMmxsTG5CMWMyZ29KMlJ2YldGcGJqMG5JQ3NnWkc5dFlXbHVLVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2h6WldOMWNtVWdQVDA5SUhSeWRXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyOXJhV1V1Y0hWemFDZ25jMlZqZFhKbEp5azdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCa2IyTjFiV1Z1ZEM1amIyOXJhV1VnUFNCamIyOXJhV1V1YW05cGJpZ25PeUFuS1R0Y2JpQWdJQ0FnSUgwc1hHNWNiaUFnSUNBZ0lISmxZV1E2SUdaMWJtTjBhVzl1SUhKbFlXUW9ibUZ0WlNrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnYldGMFkyZ2dQU0JrYjJOMWJXVnVkQzVqYjI5cmFXVXViV0YwWTJnb2JtVjNJRkpsWjBWNGNDZ25LRjU4TzF4Y1hGeHpLaWtvSnlBcklHNWhiV1VnS3lBbktUMG9XMTQ3WFNvcEp5a3BPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLRzFoZEdOb0lEOGdaR1ZqYjJSbFZWSkpRMjl0Y0c5dVpXNTBLRzFoZEdOb1d6TmRLU0E2SUc1MWJHd3BPMXh1SUNBZ0lDQWdmU3hjYmx4dUlDQWdJQ0FnY21WdGIzWmxPaUJtZFc1amRHbHZiaUJ5WlcxdmRtVW9ibUZ0WlNrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG5keWFYUmxLRzVoYldVc0lDY25MQ0JFWVhSbExtNXZkeWdwSUMwZ09EWTBNREF3TURBcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwN1hHNGdJSDBwS0NrZ09seHVYRzRnSUM4dklFNXZiaUJ6ZEdGdVpHRnlaQ0JpY205M2MyVnlJR1Z1ZGlBb2QyVmlJSGR2Y210bGNuTXNJSEpsWVdOMExXNWhkR2wyWlNrZ2JHRmpheUJ1WldWa1pXUWdjM1Z3Y0c5eWRDNWNiaUFnS0daMWJtTjBhVzl1SUc1dmJsTjBZVzVrWVhKa1FuSnZkM05sY2tWdWRpZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z2UxeHVJQ0FnSUNBZ2QzSnBkR1U2SUdaMWJtTjBhVzl1SUhkeWFYUmxLQ2tnZTMwc1hHNGdJQ0FnSUNCeVpXRmtPaUJtZFc1amRHbHZiaUJ5WldGa0tDa2dleUJ5WlhSMWNtNGdiblZzYkRzZ2ZTeGNiaUFnSUNBZ0lISmxiVzkyWlRvZ1puVnVZM1JwYjI0Z2NtVnRiM1psS0NrZ2UzMWNiaUFnSUNCOU8xeHVJQ0I5S1NncFhHNHBPMXh1SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc0dktpcGNiaUFxSUVSbGRHVnliV2x1WlhNZ2QyaGxkR2hsY2lCMGFHVWdjM0JsWTJsbWFXVmtJRlZTVENCcGN5QmhZbk52YkhWMFpWeHVJQ3BjYmlBcUlFQndZWEpoYlNCN2MzUnlhVzVuZlNCMWNtd2dWR2hsSUZWU1RDQjBieUIwWlhOMFhHNGdLaUJBY21WMGRYSnVjeUI3WW05dmJHVmhibjBnVkhKMVpTQnBaaUIwYUdVZ2MzQmxZMmxtYVdWa0lGVlNUQ0JwY3lCaFluTnZiSFYwWlN3Z2IzUm9aWEozYVhObElHWmhiSE5sWEc0Z0tpOWNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNGdhWE5CWW5OdmJIVjBaVlZTVENoMWNtd3BJSHRjYmlBZ0x5OGdRU0JWVWt3Z2FYTWdZMjl1YzJsa1pYSmxaQ0JoWW5OdmJIVjBaU0JwWmlCcGRDQmlaV2RwYm5NZ2QybDBhQ0JjSWp4elkyaGxiV1UrT2k4dlhDSWdiM0lnWENJdkwxd2lJQ2h3Y205MGIyTnZiQzF5Wld4aGRHbDJaU0JWVWt3cExseHVJQ0F2THlCU1JrTWdNems0TmlCa1pXWnBibVZ6SUhOamFHVnRaU0J1WVcxbElHRnpJR0VnYzJWeGRXVnVZMlVnYjJZZ1kyaGhjbUZqZEdWeWN5QmlaV2RwYm01cGJtY2dkMmwwYUNCaElHeGxkSFJsY2lCaGJtUWdabTlzYkc5M1pXUmNiaUFnTHk4Z1lua2dZVzU1SUdOdmJXSnBibUYwYVc5dUlHOW1JR3hsZEhSbGNuTXNJR1JwWjJsMGN5d2djR3gxY3l3Z2NHVnlhVzlrTENCdmNpQm9lWEJvWlc0dVhHNGdJSEpsZEhWeWJpQXZYaWhiWVMxNlhWdGhMWHBjWEdSY1hDdGNYQzFjWEM1ZEtqb3BQMXhjTDF4Y0x5OXBMblJsYzNRb2RYSnNLVHRjYm4wN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCMWRHbHNjeUE5SUhKbGNYVnBjbVVvSnk0dkxpNHZkWFJwYkhNbktUdGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0FvWEc0Z0lIVjBhV3h6TG1selUzUmhibVJoY21SQ2NtOTNjMlZ5Ulc1MktDa2dQMXh1WEc0Z0lDOHZJRk4wWVc1a1lYSmtJR0p5YjNkelpYSWdaVzUyY3lCb1lYWmxJR1oxYkd3Z2MzVndjRzl5ZENCdlppQjBhR1VnUVZCSmN5QnVaV1ZrWldRZ2RHOGdkR1Z6ZEZ4dUlDQXZMeUIzYUdWMGFHVnlJSFJvWlNCeVpYRjFaWE4wSUZWU1RDQnBjeUJ2WmlCMGFHVWdjMkZ0WlNCdmNtbG5hVzRnWVhNZ1kzVnljbVZ1ZENCc2IyTmhkR2x2Ymk1Y2JpQWdLR1oxYm1OMGFXOXVJSE4wWVc1a1lYSmtRbkp2ZDNObGNrVnVkaWdwSUh0Y2JpQWdJQ0IyWVhJZ2JYTnBaU0E5SUM4b2JYTnBaWHgwY21sa1pXNTBLUzlwTG5SbGMzUW9ibUYyYVdkaGRHOXlMblZ6WlhKQloyVnVkQ2s3WEc0Z0lDQWdkbUZ5SUhWeWJGQmhjbk5wYm1kT2IyUmxJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ25ZU2NwTzF4dUlDQWdJSFpoY2lCdmNtbG5hVzVWVWt3N1hHNWNiaUFnSUNBdktpcGNiaUFnSUNBcUlGQmhjbk5sSUdFZ1ZWSk1JSFJ2SUdScGMyTnZkbVZ5SUdsMEozTWdZMjl0Y0c5dVpXNTBjMXh1SUNBZ0lDcGNiaUFnSUNBcUlFQndZWEpoYlNCN1UzUnlhVzVuZlNCMWNtd2dWR2hsSUZWU1RDQjBieUJpWlNCd1lYSnpaV1JjYmlBZ0lDQXFJRUJ5WlhSMWNtNXpJSHRQWW1wbFkzUjlYRzRnSUNBZ0tpOWNiaUFnSUNCbWRXNWpkR2x2YmlCeVpYTnZiSFpsVlZKTUtIVnliQ2tnZTF4dUlDQWdJQ0FnZG1GeUlHaHlaV1lnUFNCMWNtdzdYRzVjYmlBZ0lDQWdJR2xtSUNodGMybGxLU0I3WEc0Z0lDQWdJQ0FnSUM4dklFbEZJRzVsWldSeklHRjBkSEpwWW5WMFpTQnpaWFFnZEhkcFkyVWdkRzhnYm05eWJXRnNhWHBsSUhCeWIzQmxjblJwWlhOY2JpQWdJQ0FnSUNBZ2RYSnNVR0Z5YzJsdVowNXZaR1V1YzJWMFFYUjBjbWxpZFhSbEtDZG9jbVZtSnl3Z2FISmxaaWs3WEc0Z0lDQWdJQ0FnSUdoeVpXWWdQU0IxY214UVlYSnphVzVuVG05a1pTNW9jbVZtTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMWNteFFZWEp6YVc1blRtOWtaUzV6WlhSQmRIUnlhV0oxZEdVb0oyaHlaV1luTENCb2NtVm1LVHRjYmx4dUlDQWdJQ0FnTHk4Z2RYSnNVR0Z5YzJsdVowNXZaR1VnY0hKdmRtbGtaWE1nZEdobElGVnliRlYwYVd4eklHbHVkR1Z5Wm1GalpTQXRJR2gwZEhBNkx5OTFjbXd1YzNCbFl5NTNhR0YwZDJjdWIzSm5MeU4xY214MWRHbHNjMXh1SUNBZ0lDQWdjbVYwZFhKdUlIdGNiaUFnSUNBZ0lDQWdhSEpsWmpvZ2RYSnNVR0Z5YzJsdVowNXZaR1V1YUhKbFppeGNiaUFnSUNBZ0lDQWdjSEp2ZEc5amIydzZJSFZ5YkZCaGNuTnBibWRPYjJSbExuQnliM1J2WTI5c0lEOGdkWEpzVUdGeWMybHVaMDV2WkdVdWNISnZkRzlqYjJ3dWNtVndiR0ZqWlNndk9pUXZMQ0FuSnlrZ09pQW5KeXhjYmlBZ0lDQWdJQ0FnYUc5emREb2dkWEpzVUdGeWMybHVaMDV2WkdVdWFHOXpkQ3hjYmlBZ0lDQWdJQ0FnYzJWaGNtTm9PaUIxY214UVlYSnphVzVuVG05a1pTNXpaV0Z5WTJnZ1B5QjFjbXhRWVhKemFXNW5UbTlrWlM1elpXRnlZMmd1Y21Wd2JHRmpaU2d2WGx4Y1B5OHNJQ2NuS1NBNklDY25MRnh1SUNBZ0lDQWdJQ0JvWVhOb09pQjFjbXhRWVhKemFXNW5UbTlrWlM1b1lYTm9JRDhnZFhKc1VHRnljMmx1WjA1dlpHVXVhR0Z6YUM1eVpYQnNZV05sS0M5ZUl5OHNJQ2NuS1NBNklDY25MRnh1SUNBZ0lDQWdJQ0JvYjNOMGJtRnRaVG9nZFhKc1VHRnljMmx1WjA1dlpHVXVhRzl6ZEc1aGJXVXNYRzRnSUNBZ0lDQWdJSEJ2Y25RNklIVnliRkJoY25OcGJtZE9iMlJsTG5CdmNuUXNYRzRnSUNBZ0lDQWdJSEJoZEdodVlXMWxPaUFvZFhKc1VHRnljMmx1WjA1dlpHVXVjR0YwYUc1aGJXVXVZMmhoY2tGMEtEQXBJRDA5UFNBbkx5Y3BJRDljYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhWeWJGQmhjbk5wYm1kT2IyUmxMbkJoZEdodVlXMWxJRHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNjdkp5QXJJSFZ5YkZCaGNuTnBibWRPYjJSbExuQmhkR2h1WVcxbFhHNGdJQ0FnSUNCOU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUc5eWFXZHBibFZTVENBOUlISmxjMjlzZG1WVlVrd29kMmx1Wkc5M0xteHZZMkYwYVc5dUxtaHlaV1lwTzF4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnS2lCRVpYUmxjbTFwYm1VZ2FXWWdZU0JWVWt3Z2MyaGhjbVZ6SUhSb1pTQnpZVzFsSUc5eWFXZHBiaUJoY3lCMGFHVWdZM1Z5Y21WdWRDQnNiMk5oZEdsdmJseHVJQ0FnSUNwY2JpQWdJQ0FxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0J5WlhGMVpYTjBWVkpNSUZSb1pTQlZVa3dnZEc4Z2RHVnpkRnh1SUNBZ0lDb2dRSEpsZEhWeWJuTWdlMkp2YjJ4bFlXNTlJRlJ5ZFdVZ2FXWWdWVkpNSUhOb1lYSmxjeUIwYUdVZ2MyRnRaU0J2Y21sbmFXNHNJRzkwYUdWeWQybHpaU0JtWVd4elpWeHVJQ0FnSUNvdlhHNGdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJR2x6VlZKTVUyRnRaVTl5YVdkcGJpaHlaWEYxWlhOMFZWSk1LU0I3WEc0Z0lDQWdJQ0IyWVhJZ2NHRnljMlZrSUQwZ0tIVjBhV3h6TG1selUzUnlhVzVuS0hKbGNYVmxjM1JWVWt3cEtTQS9JSEpsYzI5c2RtVlZVa3dvY21WeGRXVnpkRlZTVENrZ09pQnlaWEYxWlhOMFZWSk1PMXh1SUNBZ0lDQWdjbVYwZFhKdUlDaHdZWEp6WldRdWNISnZkRzlqYjJ3Z1BUMDlJRzl5YVdkcGJsVlNUQzV3Y205MGIyTnZiQ0FtSmx4dUlDQWdJQ0FnSUNBZ0lDQWdjR0Z5YzJWa0xtaHZjM1FnUFQwOUlHOXlhV2RwYmxWU1RDNW9iM04wS1R0Y2JpQWdJQ0I5TzF4dUlDQjlLU2dwSURwY2JseHVJQ0F2THlCT2IyNGdjM1JoYm1SaGNtUWdZbkp2ZDNObGNpQmxiblp6SUNoM1pXSWdkMjl5YTJWeWN5d2djbVZoWTNRdGJtRjBhWFpsS1NCc1lXTnJJRzVsWldSbFpDQnpkWEJ3YjNKMExseHVJQ0FvWm5WdVkzUnBiMjRnYm05dVUzUmhibVJoY21SQ2NtOTNjMlZ5Ulc1MktDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlCcGMxVlNURk5oYldWUGNtbG5hVzRvS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnZEhKMVpUdGNiaUFnSUNCOU8xeHVJQ0I5S1NncFhHNHBPMXh1SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc1MllYSWdkWFJwYkhNZ1BTQnlaWEYxYVhKbEtDY3VMaTkxZEdsc2N5Y3BPMXh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUc1dmNtMWhiR2w2WlVobFlXUmxjazVoYldVb2FHVmhaR1Z5Y3l3Z2JtOXliV0ZzYVhwbFpFNWhiV1VwSUh0Y2JpQWdkWFJwYkhNdVptOXlSV0ZqYUNob1pXRmtaWEp6TENCbWRXNWpkR2x2YmlCd2NtOWpaWE56U0dWaFpHVnlLSFpoYkhWbExDQnVZVzFsS1NCN1hHNGdJQ0FnYVdZZ0tHNWhiV1VnSVQwOUlHNXZjbTFoYkdsNlpXUk9ZVzFsSUNZbUlHNWhiV1V1ZEc5VmNIQmxja05oYzJVb0tTQTlQVDBnYm05eWJXRnNhWHBsWkU1aGJXVXVkRzlWY0hCbGNrTmhjMlVvS1NrZ2UxeHVJQ0FnSUNBZ2FHVmhaR1Z5YzF0dWIzSnRZV3hwZW1Wa1RtRnRaVjBnUFNCMllXeDFaVHRjYmlBZ0lDQWdJR1JsYkdWMFpTQm9aV0ZrWlhKelcyNWhiV1ZkTzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzU5TzF4dUlpd2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNTJZWElnZFhScGJITWdQU0J5WlhGMWFYSmxLQ2N1THk0dUwzVjBhV3h6SnlrN1hHNWNiaTh2SUVobFlXUmxjbk1nZDJodmMyVWdaSFZ3YkdsallYUmxjeUJoY21VZ2FXZHViM0psWkNCaWVTQnViMlJsWEc0dkx5QmpMbVl1SUdoMGRIQnpPaTh2Ym05a1pXcHpMbTl5Wnk5aGNHa3ZhSFIwY0M1b2RHMXNJMmgwZEhCZmJXVnpjMkZuWlY5b1pXRmtaWEp6WEc1MllYSWdhV2R1YjNKbFJIVndiR2xqWVhSbFQyWWdQU0JiWEc0Z0lDZGhaMlVuTENBbllYVjBhRzl5YVhwaGRHbHZiaWNzSUNkamIyNTBaVzUwTFd4bGJtZDBhQ2NzSUNkamIyNTBaVzUwTFhSNWNHVW5MQ0FuWlhSaFp5Y3NYRzRnSUNkbGVIQnBjbVZ6Snl3Z0oyWnliMjBuTENBbmFHOXpkQ2NzSUNkcFppMXRiMlJwWm1sbFpDMXphVzVqWlNjc0lDZHBaaTExYm0xdlpHbG1hV1ZrTFhOcGJtTmxKeXhjYmlBZ0oyeGhjM1F0Ylc5a2FXWnBaV1FuTENBbmJHOWpZWFJwYjI0bkxDQW5iV0Y0TFdadmNuZGhjbVJ6Snl3Z0ozQnliM2g1TFdGMWRHaHZjbWw2WVhScGIyNG5MRnh1SUNBbmNtVm1aWEpsY2ljc0lDZHlaWFJ5ZVMxaFpuUmxjaWNzSUNkMWMyVnlMV0ZuWlc1MEoxeHVYVHRjYmx4dUx5b3FYRzRnS2lCUVlYSnpaU0JvWldGa1pYSnpJR2x1ZEc4Z1lXNGdiMkpxWldOMFhHNGdLbHh1SUNvZ1lHQmdYRzRnS2lCRVlYUmxPaUJYWldRc0lESTNJRUYxWnlBeU1ERTBJREE0T2pVNE9qUTVJRWROVkZ4dUlDb2dRMjl1ZEdWdWRDMVVlWEJsT2lCaGNIQnNhV05oZEdsdmJpOXFjMjl1WEc0Z0tpQkRiMjV1WldOMGFXOXVPaUJyWldWd0xXRnNhWFpsWEc0Z0tpQlVjbUZ1YzJabGNpMUZibU52WkdsdVp6b2dZMmgxYm10bFpGeHVJQ29nWUdCZ1hHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0VGRISnBibWQ5SUdobFlXUmxjbk1nU0dWaFpHVnljeUJ1WldWa2FXNW5JSFJ2SUdKbElIQmhjbk5sWkZ4dUlDb2dRSEpsZEhWeWJuTWdlMDlpYW1WamRIMGdTR1ZoWkdWeWN5QndZWEp6WldRZ2FXNTBieUJoYmlCdlltcGxZM1JjYmlBcUwxeHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpQndZWEp6WlVobFlXUmxjbk1vYUdWaFpHVnljeWtnZTF4dUlDQjJZWElnY0dGeWMyVmtJRDBnZTMwN1hHNGdJSFpoY2lCclpYazdYRzRnSUhaaGNpQjJZV3c3WEc0Z0lIWmhjaUJwTzF4dVhHNGdJR2xtSUNnaGFHVmhaR1Z5Y3lrZ2V5QnlaWFIxY200Z2NHRnljMlZrT3lCOVhHNWNiaUFnZFhScGJITXVabTl5UldGamFDaG9aV0ZrWlhKekxuTndiR2wwS0NkY1hHNG5LU3dnWm5WdVkzUnBiMjRnY0dGeWMyVnlLR3hwYm1VcElIdGNiaUFnSUNCcElEMGdiR2x1WlM1cGJtUmxlRTltS0NjNkp5azdYRzRnSUNBZ2EyVjVJRDBnZFhScGJITXVkSEpwYlNoc2FXNWxMbk4xWW5OMGNpZ3dMQ0JwS1NrdWRHOU1iM2RsY2tOaGMyVW9LVHRjYmlBZ0lDQjJZV3dnUFNCMWRHbHNjeTUwY21sdEtHeHBibVV1YzNWaWMzUnlLR2tnS3lBeEtTazdYRzVjYmlBZ0lDQnBaaUFvYTJWNUtTQjdYRzRnSUNBZ0lDQnBaaUFvY0dGeWMyVmtXMnRsZVYwZ0ppWWdhV2R1YjNKbFJIVndiR2xqWVhSbFQyWXVhVzVrWlhoUFppaHJaWGtwSUQ0OUlEQXBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdhV1lnS0d0bGVTQTlQVDBnSjNObGRDMWpiMjlyYVdVbktTQjdYRzRnSUNBZ0lDQWdJSEJoY25ObFpGdHJaWGxkSUQwZ0tIQmhjbk5sWkZ0clpYbGRJRDhnY0dGeWMyVmtXMnRsZVYwZ09pQmJYU2t1WTI5dVkyRjBLRnQyWVd4ZEtUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lIQmhjbk5sWkZ0clpYbGRJRDBnY0dGeWMyVmtXMnRsZVYwZ1B5QndZWEp6WldSYmEyVjVYU0FySUNjc0lDY2dLeUIyWVd3Z09pQjJZV3c3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOUtUdGNibHh1SUNCeVpYUjFjbTRnY0dGeWMyVmtPMXh1ZlR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVMeW9xWEc0Z0tpQlRlVzUwWVdOMGFXTWdjM1ZuWVhJZ1ptOXlJR2x1ZG05cmFXNW5JR0VnWm5WdVkzUnBiMjRnWVc1a0lHVjRjR0Z1WkdsdVp5QmhiaUJoY25KaGVTQm1iM0lnWVhKbmRXMWxiblJ6TGx4dUlDcGNiaUFxSUVOdmJXMXZiaUIxYzJVZ1kyRnpaU0IzYjNWc1pDQmlaU0IwYnlCMWMyVWdZRVoxYm1OMGFXOXVMbkJ5YjNSdmRIbHdaUzVoY0hCc2VXQXVYRzRnS2x4dUlDb2dJR0JnWUdwelhHNGdLaUFnWm5WdVkzUnBiMjRnWmloNExDQjVMQ0I2S1NCN2ZWeHVJQ29nSUhaaGNpQmhjbWR6SUQwZ1d6RXNJRElzSUROZE8xeHVJQ29nSUdZdVlYQndiSGtvYm5Wc2JDd2dZWEpuY3lrN1hHNGdLaUFnWUdCZ1hHNGdLbHh1SUNvZ1YybDBhQ0JnYzNCeVpXRmtZQ0IwYUdseklHVjRZVzF3YkdVZ1kyRnVJR0psSUhKbExYZHlhWFIwWlc0dVhHNGdLbHh1SUNvZ0lHQmdZR3B6WEc0Z0tpQWdjM0J5WldGa0tHWjFibU4wYVc5dUtIZ3NJSGtzSUhvcElIdDlLU2hiTVN3Z01pd2dNMTBwTzF4dUlDb2dJR0JnWUZ4dUlDcGNiaUFxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdOaGJHeGlZV05yWEc0Z0tpQkFjbVYwZFhKdWN5QjdSblZ1WTNScGIyNTlYRzRnS2k5Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0Z2MzQnlaV0ZrS0dOaGJHeGlZV05yS1NCN1hHNGdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQjNjbUZ3S0dGeWNpa2dlMXh1SUNBZ0lISmxkSFZ5YmlCallXeHNZbUZqYXk1aGNIQnNlU2h1ZFd4c0xDQmhjbklwTzF4dUlDQjlPMXh1ZlR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVkbUZ5SUdKcGJtUWdQU0J5WlhGMWFYSmxLQ2N1TDJobGJIQmxjbk12WW1sdVpDY3BPMXh1ZG1GeUlHbHpRblZtWm1WeUlEMGdjbVZ4ZFdseVpTZ25hWE10WW5WbVptVnlKeWs3WEc1Y2JpOHFaMnh2WW1Gc0lIUnZVM1J5YVc1bk9uUnlkV1VxTDF4dVhHNHZMeUIxZEdsc2N5QnBjeUJoSUd4cFluSmhjbmtnYjJZZ1oyVnVaWEpwWXlCb1pXeHdaWElnWm5WdVkzUnBiMjV6SUc1dmJpMXpjR1ZqYVdacFl5QjBieUJoZUdsdmMxeHVYRzUyWVhJZ2RHOVRkSEpwYm1jZ1BTQlBZbXBsWTNRdWNISnZkRzkwZVhCbExuUnZVM1J5YVc1bk8xeHVYRzR2S2lwY2JpQXFJRVJsZEdWeWJXbHVaU0JwWmlCaElIWmhiSFZsSUdseklHRnVJRUZ5Y21GNVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUhaaGJDQlVhR1VnZG1Gc2RXVWdkRzhnZEdWemRGeHVJQ29nUUhKbGRIVnlibk1nZTJKdmIyeGxZVzU5SUZSeWRXVWdhV1lnZG1Gc2RXVWdhWE1nWVc0Z1FYSnlZWGtzSUc5MGFHVnlkMmx6WlNCbVlXeHpaVnh1SUNvdlhHNW1kVzVqZEdsdmJpQnBjMEZ5Y21GNUtIWmhiQ2tnZTF4dUlDQnlaWFIxY200Z2RHOVRkSEpwYm1jdVkyRnNiQ2gyWVd3cElEMDlQU0FuVzI5aWFtVmpkQ0JCY25KaGVWMG5PMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFUmxkR1Z5YldsdVpTQnBaaUJoSUhaaGJIVmxJR2x6SUdGdUlFRnljbUY1UW5WbVptVnlYRzRnS2x4dUlDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlIWmhiQ0JVYUdVZ2RtRnNkV1VnZEc4Z2RHVnpkRnh1SUNvZ1FISmxkSFZ5Ym5NZ2UySnZiMnhsWVc1OUlGUnlkV1VnYVdZZ2RtRnNkV1VnYVhNZ1lXNGdRWEp5WVhsQ2RXWm1aWElzSUc5MGFHVnlkMmx6WlNCbVlXeHpaVnh1SUNvdlhHNW1kVzVqZEdsdmJpQnBjMEZ5Y21GNVFuVm1abVZ5S0haaGJDa2dlMXh1SUNCeVpYUjFjbTRnZEc5VGRISnBibWN1WTJGc2JDaDJZV3dwSUQwOVBTQW5XMjlpYW1WamRDQkJjbkpoZVVKMVptWmxjbDBuTzF4dWZWeHVYRzR2S2lwY2JpQXFJRVJsZEdWeWJXbHVaU0JwWmlCaElIWmhiSFZsSUdseklHRWdSbTl5YlVSaGRHRmNiaUFxWEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ2RtRnNJRlJvWlNCMllXeDFaU0IwYnlCMFpYTjBYRzRnS2lCQWNtVjBkWEp1Y3lCN1ltOXZiR1ZoYm4wZ1ZISjFaU0JwWmlCMllXeDFaU0JwY3lCaGJpQkdiM0p0UkdGMFlTd2diM1JvWlhKM2FYTmxJR1poYkhObFhHNGdLaTljYm1aMWJtTjBhVzl1SUdselJtOXliVVJoZEdFb2RtRnNLU0I3WEc0Z0lISmxkSFZ5YmlBb2RIbHdaVzltSUVadmNtMUVZWFJoSUNFOVBTQW5kVzVrWldacGJtVmtKeWtnSmlZZ0tIWmhiQ0JwYm5OMFlXNWpaVzltSUVadmNtMUVZWFJoS1R0Y2JuMWNibHh1THlvcVhHNGdLaUJFWlhSbGNtMXBibVVnYVdZZ1lTQjJZV3gxWlNCcGN5QmhJSFpwWlhjZ2IyNGdZVzRnUVhKeVlYbENkV1ptWlhKY2JpQXFYRzRnS2lCQWNHRnlZVzBnZTA5aWFtVmpkSDBnZG1Gc0lGUm9aU0IyWVd4MVpTQjBieUIwWlhOMFhHNGdLaUJBY21WMGRYSnVjeUI3WW05dmJHVmhibjBnVkhKMVpTQnBaaUIyWVd4MVpTQnBjeUJoSUhacFpYY2diMjRnWVc0Z1FYSnlZWGxDZFdabVpYSXNJRzkwYUdWeWQybHpaU0JtWVd4elpWeHVJQ292WEc1bWRXNWpkR2x2YmlCcGMwRnljbUY1UW5WbVptVnlWbWxsZHloMllXd3BJSHRjYmlBZ2RtRnlJSEpsYzNWc2REdGNiaUFnYVdZZ0tDaDBlWEJsYjJZZ1FYSnlZWGxDZFdabVpYSWdJVDA5SUNkMWJtUmxabWx1WldRbktTQW1KaUFvUVhKeVlYbENkV1ptWlhJdWFYTldhV1YzS1NrZ2UxeHVJQ0FnSUhKbGMzVnNkQ0E5SUVGeWNtRjVRblZtWm1WeUxtbHpWbWxsZHloMllXd3BPMXh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJSEpsYzNWc2RDQTlJQ2gyWVd3cElDWW1JQ2gyWVd3dVluVm1abVZ5S1NBbUppQW9kbUZzTG1KMVptWmxjaUJwYm5OMFlXNWpaVzltSUVGeWNtRjVRblZtWm1WeUtUdGNiaUFnZlZ4dUlDQnlaWFIxY200Z2NtVnpkV3gwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRVJsZEdWeWJXbHVaU0JwWmlCaElIWmhiSFZsSUdseklHRWdVM1J5YVc1blhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUhaaGJDQlVhR1VnZG1Gc2RXVWdkRzhnZEdWemRGeHVJQ29nUUhKbGRIVnlibk1nZTJKdmIyeGxZVzU5SUZSeWRXVWdhV1lnZG1Gc2RXVWdhWE1nWVNCVGRISnBibWNzSUc5MGFHVnlkMmx6WlNCbVlXeHpaVnh1SUNvdlhHNW1kVzVqZEdsdmJpQnBjMU4wY21sdVp5aDJZV3dwSUh0Y2JpQWdjbVYwZFhKdUlIUjVjR1Z2WmlCMllXd2dQVDA5SUNkemRISnBibWNuTzF4dWZWeHVYRzR2S2lwY2JpQXFJRVJsZEdWeWJXbHVaU0JwWmlCaElIWmhiSFZsSUdseklHRWdUblZ0WW1WeVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUhaaGJDQlVhR1VnZG1Gc2RXVWdkRzhnZEdWemRGeHVJQ29nUUhKbGRIVnlibk1nZTJKdmIyeGxZVzU5SUZSeWRXVWdhV1lnZG1Gc2RXVWdhWE1nWVNCT2RXMWlaWElzSUc5MGFHVnlkMmx6WlNCbVlXeHpaVnh1SUNvdlhHNW1kVzVqZEdsdmJpQnBjMDUxYldKbGNpaDJZV3dwSUh0Y2JpQWdjbVYwZFhKdUlIUjVjR1Z2WmlCMllXd2dQVDA5SUNkdWRXMWlaWEluTzF4dWZWeHVYRzR2S2lwY2JpQXFJRVJsZEdWeWJXbHVaU0JwWmlCaElIWmhiSFZsSUdseklIVnVaR1ZtYVc1bFpGeHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCMllXd2dWR2hsSUhaaGJIVmxJSFJ2SUhSbGMzUmNiaUFxSUVCeVpYUjFjbTV6SUh0aWIyOXNaV0Z1ZlNCVWNuVmxJR2xtSUhSb1pTQjJZV3gxWlNCcGN5QjFibVJsWm1sdVpXUXNJRzkwYUdWeWQybHpaU0JtWVd4elpWeHVJQ292WEc1bWRXNWpkR2x2YmlCcGMxVnVaR1ZtYVc1bFpDaDJZV3dwSUh0Y2JpQWdjbVYwZFhKdUlIUjVjR1Z2WmlCMllXd2dQVDA5SUNkMWJtUmxabWx1WldRbk8xeHVmVnh1WEc0dktpcGNiaUFxSUVSbGRHVnliV2x1WlNCcFppQmhJSFpoYkhWbElHbHpJR0Z1SUU5aWFtVmpkRnh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQjJZV3dnVkdobElIWmhiSFZsSUhSdklIUmxjM1JjYmlBcUlFQnlaWFIxY201eklIdGliMjlzWldGdWZTQlVjblZsSUdsbUlIWmhiSFZsSUdseklHRnVJRTlpYW1WamRDd2diM1JvWlhKM2FYTmxJR1poYkhObFhHNGdLaTljYm1aMWJtTjBhVzl1SUdselQySnFaV04wS0haaGJDa2dlMXh1SUNCeVpYUjFjbTRnZG1Gc0lDRTlQU0J1ZFd4c0lDWW1JSFI1Y0dWdlppQjJZV3dnUFQwOUlDZHZZbXBsWTNRbk8xeHVmVnh1WEc0dktpcGNiaUFxSUVSbGRHVnliV2x1WlNCcFppQmhJSFpoYkhWbElHbHpJR0VnUkdGMFpWeHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCMllXd2dWR2hsSUhaaGJIVmxJSFJ2SUhSbGMzUmNiaUFxSUVCeVpYUjFjbTV6SUh0aWIyOXNaV0Z1ZlNCVWNuVmxJR2xtSUhaaGJIVmxJR2x6SUdFZ1JHRjBaU3dnYjNSb1pYSjNhWE5sSUdaaGJITmxYRzRnS2k5Y2JtWjFibU4wYVc5dUlHbHpSR0YwWlNoMllXd3BJSHRjYmlBZ2NtVjBkWEp1SUhSdlUzUnlhVzVuTG1OaGJHd29kbUZzS1NBOVBUMGdKMXR2WW1wbFkzUWdSR0YwWlYwbk8xeHVmVnh1WEc0dktpcGNiaUFxSUVSbGRHVnliV2x1WlNCcFppQmhJSFpoYkhWbElHbHpJR0VnUm1sc1pWeHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCMllXd2dWR2hsSUhaaGJIVmxJSFJ2SUhSbGMzUmNiaUFxSUVCeVpYUjFjbTV6SUh0aWIyOXNaV0Z1ZlNCVWNuVmxJR2xtSUhaaGJIVmxJR2x6SUdFZ1JtbHNaU3dnYjNSb1pYSjNhWE5sSUdaaGJITmxYRzRnS2k5Y2JtWjFibU4wYVc5dUlHbHpSbWxzWlNoMllXd3BJSHRjYmlBZ2NtVjBkWEp1SUhSdlUzUnlhVzVuTG1OaGJHd29kbUZzS1NBOVBUMGdKMXR2WW1wbFkzUWdSbWxzWlYwbk8xeHVmVnh1WEc0dktpcGNiaUFxSUVSbGRHVnliV2x1WlNCcFppQmhJSFpoYkhWbElHbHpJR0VnUW14dllseHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCMllXd2dWR2hsSUhaaGJIVmxJSFJ2SUhSbGMzUmNiaUFxSUVCeVpYUjFjbTV6SUh0aWIyOXNaV0Z1ZlNCVWNuVmxJR2xtSUhaaGJIVmxJR2x6SUdFZ1FteHZZaXdnYjNSb1pYSjNhWE5sSUdaaGJITmxYRzRnS2k5Y2JtWjFibU4wYVc5dUlHbHpRbXh2WWloMllXd3BJSHRjYmlBZ2NtVjBkWEp1SUhSdlUzUnlhVzVuTG1OaGJHd29kbUZzS1NBOVBUMGdKMXR2WW1wbFkzUWdRbXh2WWwwbk8xeHVmVnh1WEc0dktpcGNiaUFxSUVSbGRHVnliV2x1WlNCcFppQmhJSFpoYkhWbElHbHpJR0VnUm5WdVkzUnBiMjVjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdkbUZzSUZSb1pTQjJZV3gxWlNCMGJ5QjBaWE4wWEc0Z0tpQkFjbVYwZFhKdWN5QjdZbTl2YkdWaGJuMGdWSEoxWlNCcFppQjJZV3gxWlNCcGN5QmhJRVoxYm1OMGFXOXVMQ0J2ZEdobGNuZHBjMlVnWm1Gc2MyVmNiaUFxTDF4dVpuVnVZM1JwYjI0Z2FYTkdkVzVqZEdsdmJpaDJZV3dwSUh0Y2JpQWdjbVYwZFhKdUlIUnZVM1J5YVc1bkxtTmhiR3dvZG1Gc0tTQTlQVDBnSjF0dlltcGxZM1FnUm5WdVkzUnBiMjVkSnp0Y2JuMWNibHh1THlvcVhHNGdLaUJFWlhSbGNtMXBibVVnYVdZZ1lTQjJZV3gxWlNCcGN5QmhJRk4wY21WaGJWeHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCMllXd2dWR2hsSUhaaGJIVmxJSFJ2SUhSbGMzUmNiaUFxSUVCeVpYUjFjbTV6SUh0aWIyOXNaV0Z1ZlNCVWNuVmxJR2xtSUhaaGJIVmxJR2x6SUdFZ1UzUnlaV0Z0TENCdmRHaGxjbmRwYzJVZ1ptRnNjMlZjYmlBcUwxeHVablZ1WTNScGIyNGdhWE5UZEhKbFlXMG9kbUZzS1NCN1hHNGdJSEpsZEhWeWJpQnBjMDlpYW1WamRDaDJZV3dwSUNZbUlHbHpSblZ1WTNScGIyNG9kbUZzTG5CcGNHVXBPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFUmxkR1Z5YldsdVpTQnBaaUJoSUhaaGJIVmxJR2x6SUdFZ1ZWSk1VMlZoY21Ob1VHRnlZVzF6SUc5aWFtVmpkRnh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQjJZV3dnVkdobElIWmhiSFZsSUhSdklIUmxjM1JjYmlBcUlFQnlaWFIxY201eklIdGliMjlzWldGdWZTQlVjblZsSUdsbUlIWmhiSFZsSUdseklHRWdWVkpNVTJWaGNtTm9VR0Z5WVcxeklHOWlhbVZqZEN3Z2IzUm9aWEozYVhObElHWmhiSE5sWEc0Z0tpOWNibVoxYm1OMGFXOXVJR2x6VlZKTVUyVmhjbU5vVUdGeVlXMXpLSFpoYkNrZ2UxeHVJQ0J5WlhSMWNtNGdkSGx3Wlc5bUlGVlNURk5sWVhKamFGQmhjbUZ0Y3lBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnSmlZZ2RtRnNJR2x1YzNSaGJtTmxiMllnVlZKTVUyVmhjbU5vVUdGeVlXMXpPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGUnlhVzBnWlhoalpYTnpJSGRvYVhSbGMzQmhZMlVnYjJabUlIUm9aU0JpWldkcGJtNXBibWNnWVc1a0lHVnVaQ0J2WmlCaElITjBjbWx1WjF4dUlDcGNiaUFxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0J6ZEhJZ1ZHaGxJRk4wY21sdVp5QjBieUIwY21sdFhHNGdLaUJBY21WMGRYSnVjeUI3VTNSeWFXNW5mU0JVYUdVZ1UzUnlhVzVuSUdaeVpXVmtJRzltSUdWNFkyVnpjeUIzYUdsMFpYTndZV05sWEc0Z0tpOWNibVoxYm1OMGFXOXVJSFJ5YVcwb2MzUnlLU0I3WEc0Z0lISmxkSFZ5YmlCemRISXVjbVZ3YkdGalpTZ3ZYbHhjY3lvdkxDQW5KeWt1Y21Wd2JHRmpaU2d2WEZ4ektpUXZMQ0FuSnlrN1hHNTlYRzVjYmk4cUtseHVJQ29nUkdWMFpYSnRhVzVsSUdsbUlIZGxKM0psSUhKMWJtNXBibWNnYVc0Z1lTQnpkR0Z1WkdGeVpDQmljbTkzYzJWeUlHVnVkbWx5YjI1dFpXNTBYRzRnS2x4dUlDb2dWR2hwY3lCaGJHeHZkM01nWVhocGIzTWdkRzhnY25WdUlHbHVJR0VnZDJWaUlIZHZjbXRsY2l3Z1lXNWtJSEpsWVdOMExXNWhkR2wyWlM1Y2JpQXFJRUp2ZEdnZ1pXNTJhWEp2Ym0xbGJuUnpJSE4xY0hCdmNuUWdXRTFNU0hSMGNGSmxjWFZsYzNRc0lHSjFkQ0J1YjNRZ1puVnNiSGtnYzNSaGJtUmhjbVFnWjJ4dlltRnNjeTVjYmlBcVhHNGdLaUIzWldJZ2QyOXlhMlZ5Y3pwY2JpQXFJQ0IwZVhCbGIyWWdkMmx1Wkc5M0lDMCtJSFZ1WkdWbWFXNWxaRnh1SUNvZ0lIUjVjR1Z2WmlCa2IyTjFiV1Z1ZENBdFBpQjFibVJsWm1sdVpXUmNiaUFxWEc0Z0tpQnlaV0ZqZEMxdVlYUnBkbVU2WEc0Z0tpQWdibUYyYVdkaGRHOXlMbkJ5YjJSMVkzUWdMVDRnSjFKbFlXTjBUbUYwYVhabEoxeHVJQ292WEc1bWRXNWpkR2x2YmlCcGMxTjBZVzVrWVhKa1FuSnZkM05sY2tWdWRpZ3BJSHRjYmlBZ2FXWWdLSFI1Y0dWdlppQnVZWFpwWjJGMGIzSWdJVDA5SUNkMWJtUmxabWx1WldRbklDWW1JRzVoZG1sbllYUnZjaTV3Y205a2RXTjBJRDA5UFNBblVtVmhZM1JPWVhScGRtVW5LU0I3WEc0Z0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4dUlDQjlYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdkSGx3Wlc5bUlIZHBibVJ2ZHlBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnSmlaY2JpQWdJQ0IwZVhCbGIyWWdaRzlqZFcxbGJuUWdJVDA5SUNkMWJtUmxabWx1WldRblhHNGdJQ2s3WEc1OVhHNWNiaThxS2x4dUlDb2dTWFJsY21GMFpTQnZkbVZ5SUdGdUlFRnljbUY1SUc5eUlHRnVJRTlpYW1WamRDQnBiblp2YTJsdVp5QmhJR1oxYm1OMGFXOXVJR1p2Y2lCbFlXTm9JR2wwWlcwdVhHNGdLbHh1SUNvZ1NXWWdZRzlpYW1BZ2FYTWdZVzRnUVhKeVlYa2dZMkZzYkdKaFkyc2dkMmxzYkNCaVpTQmpZV3hzWldRZ2NHRnpjMmx1WjF4dUlDb2dkR2hsSUhaaGJIVmxMQ0JwYm1SbGVDd2dZVzVrSUdOdmJYQnNaWFJsSUdGeWNtRjVJR1p2Y2lCbFlXTm9JR2wwWlcwdVhHNGdLbHh1SUNvZ1NXWWdKMjlpYWljZ2FYTWdZVzRnVDJKcVpXTjBJR05oYkd4aVlXTnJJSGRwYkd3Z1ltVWdZMkZzYkdWa0lIQmhjM05wYm1kY2JpQXFJSFJvWlNCMllXeDFaU3dnYTJWNUxDQmhibVFnWTI5dGNHeGxkR1VnYjJKcVpXTjBJR1p2Y2lCbFlXTm9JSEJ5YjNCbGNuUjVMbHh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZFRnljbUY1ZlNCdlltb2dWR2hsSUc5aWFtVmpkQ0IwYnlCcGRHVnlZWFJsWEc0Z0tpQkFjR0Z5WVcwZ2UwWjFibU4wYVc5dWZTQm1iaUJVYUdVZ1kyRnNiR0poWTJzZ2RHOGdhVzUyYjJ0bElHWnZjaUJsWVdOb0lHbDBaVzFjYmlBcUwxeHVablZ1WTNScGIyNGdabTl5UldGamFDaHZZbW9zSUdadUtTQjdYRzRnSUM4dklFUnZiaWQwSUdKdmRHaGxjaUJwWmlCdWJ5QjJZV3gxWlNCd2NtOTJhV1JsWkZ4dUlDQnBaaUFvYjJKcUlEMDlQU0J1ZFd4c0lIeDhJSFI1Y0dWdlppQnZZbW9nUFQwOUlDZDFibVJsWm1sdVpXUW5LU0I3WEc0Z0lDQWdjbVYwZFhKdU8xeHVJQ0I5WEc1Y2JpQWdMeThnUm05eVkyVWdZVzRnWVhKeVlYa2dhV1lnYm05MElHRnNjbVZoWkhrZ2MyOXRaWFJvYVc1bklHbDBaWEpoWW14bFhHNGdJR2xtSUNoMGVYQmxiMllnYjJKcUlDRTlQU0FuYjJKcVpXTjBKeWtnZTF4dUlDQWdJQzhxWlhOc2FXNTBJRzV2TFhCaGNtRnRMWEpsWVhOemFXZHVPakFxTDF4dUlDQWdJRzlpYWlBOUlGdHZZbXBkTzF4dUlDQjlYRzVjYmlBZ2FXWWdLR2x6UVhKeVlYa29iMkpxS1NrZ2UxeHVJQ0FnSUM4dklFbDBaWEpoZEdVZ2IzWmxjaUJoY25KaGVTQjJZV3gxWlhOY2JpQWdJQ0JtYjNJZ0tIWmhjaUJwSUQwZ01Dd2diQ0E5SUc5aWFpNXNaVzVuZEdnN0lHa2dQQ0JzT3lCcEt5c3BJSHRjYmlBZ0lDQWdJR1p1TG1OaGJHd29iblZzYkN3Z2IySnFXMmxkTENCcExDQnZZbW9wTzF4dUlDQWdJSDFjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0F2THlCSmRHVnlZWFJsSUc5MlpYSWdiMkpxWldOMElHdGxlWE5jYmlBZ0lDQm1iM0lnS0haaGNpQnJaWGtnYVc0Z2IySnFLU0I3WEc0Z0lDQWdJQ0JwWmlBb1QySnFaV04wTG5CeWIzUnZkSGx3WlM1b1lYTlBkMjVRY205d1pYSjBlUzVqWVd4c0tHOWlhaXdnYTJWNUtTa2dlMXh1SUNBZ0lDQWdJQ0JtYmk1allXeHNLRzUxYkd3c0lHOWlhbHRyWlhsZExDQnJaWGtzSUc5aWFpazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2dRV05qWlhCMGN5QjJZWEpoY21keklHVjRjR1ZqZEdsdVp5QmxZV05vSUdGeVozVnRaVzUwSUhSdklHSmxJR0Z1SUc5aWFtVmpkQ3dnZEdobGJseHVJQ29nYVcxdGRYUmhZbXg1SUcxbGNtZGxjeUIwYUdVZ2NISnZjR1Z5ZEdsbGN5QnZaaUJsWVdOb0lHOWlhbVZqZENCaGJtUWdjbVYwZFhKdWN5QnlaWE4xYkhRdVhHNGdLbHh1SUNvZ1YyaGxiaUJ0ZFd4MGFYQnNaU0J2WW1wbFkzUnpJR052Ym5SaGFXNGdkR2hsSUhOaGJXVWdhMlY1SUhSb1pTQnNZWFJsY2lCdlltcGxZM1FnYVc1Y2JpQXFJSFJvWlNCaGNtZDFiV1Z1ZEhNZ2JHbHpkQ0IzYVd4c0lIUmhhMlVnY0hKbFkyVmtaVzVqWlM1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDcGNiaUFxSUdCZ1lHcHpYRzRnS2lCMllYSWdjbVZ6ZFd4MElEMGdiV1Z5WjJVb2UyWnZiem9nTVRJemZTd2dlMlp2YnpvZ05EVTJmU2s3WEc0Z0tpQmpiMjV6YjJ4bExteHZaeWh5WlhOMWJIUXVabTl2S1RzZ0x5OGdiM1YwY0hWMGN5QTBOVFpjYmlBcUlHQmdZRnh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQnZZbW94SUU5aWFtVmpkQ0IwYnlCdFpYSm5aVnh1SUNvZ1FISmxkSFZ5Ym5NZ2UwOWlhbVZqZEgwZ1VtVnpkV3gwSUc5bUlHRnNiQ0J0WlhKblpTQndjbTl3WlhKMGFXVnpYRzRnS2k5Y2JtWjFibU4wYVc5dUlHMWxjbWRsS0M4cUlHOWlhakVzSUc5aWFqSXNJRzlpYWpNc0lDNHVMaUFxTHlrZ2UxeHVJQ0IyWVhJZ2NtVnpkV3gwSUQwZ2UzMDdYRzRnSUdaMWJtTjBhVzl1SUdGemMybG5ibFpoYkhWbEtIWmhiQ3dnYTJWNUtTQjdYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQnlaWE4xYkhSYmEyVjVYU0E5UFQwZ0oyOWlhbVZqZENjZ0ppWWdkSGx3Wlc5bUlIWmhiQ0E5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lISmxjM1ZzZEZ0clpYbGRJRDBnYldWeVoyVW9jbVZ6ZFd4MFcydGxlVjBzSUhaaGJDazdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUhKbGMzVnNkRnRyWlhsZElEMGdkbUZzTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUdadmNpQW9kbUZ5SUdrZ1BTQXdMQ0JzSUQwZ1lYSm5kVzFsYm5SekxteGxibWQwYURzZ2FTQThJR3c3SUdrckt5a2dlMXh1SUNBZ0lHWnZja1ZoWTJnb1lYSm5kVzFsYm5SelcybGRMQ0JoYzNOcFoyNVdZV3gxWlNrN1hHNGdJSDFjYmlBZ2NtVjBkWEp1SUhKbGMzVnNkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkZlSFJsYm1SeklHOWlhbVZqZENCaElHSjVJRzExZEdGaWJIa2dZV1JrYVc1bklIUnZJR2wwSUhSb1pTQndjbTl3WlhKMGFXVnpJRzltSUc5aWFtVmpkQ0JpTGx4dUlDcGNiaUFxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0JoSUZSb1pTQnZZbXBsWTNRZ2RHOGdZbVVnWlhoMFpXNWtaV1JjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCaUlGUm9aU0J2WW1wbFkzUWdkRzhnWTI5d2VTQndjbTl3WlhKMGFXVnpJR1p5YjIxY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQjBhR2x6UVhKbklGUm9aU0J2WW1wbFkzUWdkRzhnWW1sdVpDQm1kVzVqZEdsdmJpQjBiMXh1SUNvZ1FISmxkSFZ5YmlCN1QySnFaV04wZlNCVWFHVWdjbVZ6ZFd4MGFXNW5JSFpoYkhWbElHOW1JRzlpYW1WamRDQmhYRzRnS2k5Y2JtWjFibU4wYVc5dUlHVjRkR1Z1WkNoaExDQmlMQ0IwYUdselFYSm5LU0I3WEc0Z0lHWnZja1ZoWTJnb1lpd2dablZ1WTNScGIyNGdZWE56YVdkdVZtRnNkV1VvZG1Gc0xDQnJaWGtwSUh0Y2JpQWdJQ0JwWmlBb2RHaHBjMEZ5WnlBbUppQjBlWEJsYjJZZ2RtRnNJRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ0lDQmhXMnRsZVYwZ1BTQmlhVzVrS0haaGJDd2dkR2hwYzBGeVp5azdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUdGYmEyVjVYU0E5SUhaaGJEdGNiaUFnSUNCOVhHNGdJSDBwTzF4dUlDQnlaWFIxY200Z1lUdGNibjFjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCN1hHNGdJR2x6UVhKeVlYazZJR2x6UVhKeVlYa3NYRzRnSUdselFYSnlZWGxDZFdabVpYSTZJR2x6UVhKeVlYbENkV1ptWlhJc1hHNGdJR2x6UW5WbVptVnlPaUJwYzBKMVptWmxjaXhjYmlBZ2FYTkdiM0p0UkdGMFlUb2dhWE5HYjNKdFJHRjBZU3hjYmlBZ2FYTkJjbkpoZVVKMVptWmxjbFpwWlhjNklHbHpRWEp5WVhsQ2RXWm1aWEpXYVdWM0xGeHVJQ0JwYzFOMGNtbHVaem9nYVhOVGRISnBibWNzWEc0Z0lHbHpUblZ0WW1WeU9pQnBjMDUxYldKbGNpeGNiaUFnYVhOUFltcGxZM1E2SUdselQySnFaV04wTEZ4dUlDQnBjMVZ1WkdWbWFXNWxaRG9nYVhOVmJtUmxabWx1WldRc1hHNGdJR2x6UkdGMFpUb2dhWE5FWVhSbExGeHVJQ0JwYzBacGJHVTZJR2x6Um1sc1pTeGNiaUFnYVhOQ2JHOWlPaUJwYzBKc2IySXNYRzRnSUdselJuVnVZM1JwYjI0NklHbHpSblZ1WTNScGIyNHNYRzRnSUdselUzUnlaV0Z0T2lCcGMxTjBjbVZoYlN4Y2JpQWdhWE5WVWt4VFpXRnlZMmhRWVhKaGJYTTZJR2x6VlZKTVUyVmhjbU5vVUdGeVlXMXpMRnh1SUNCcGMxTjBZVzVrWVhKa1FuSnZkM05sY2tWdWRqb2dhWE5UZEdGdVpHRnlaRUp5YjNkelpYSkZibllzWEc0Z0lHWnZja1ZoWTJnNklHWnZja1ZoWTJnc1hHNGdJRzFsY21kbE9pQnRaWEpuWlN4Y2JpQWdaWGgwWlc1a09pQmxlSFJsYm1Rc1hHNGdJSFJ5YVcwNklIUnlhVzFjYm4wN1hHNGlMQ0l2S2lGY2JpQXFJRVJsZEdWeWJXbHVaU0JwWmlCaGJpQnZZbXBsWTNRZ2FYTWdZU0JDZFdabVpYSmNiaUFxWEc0Z0tpQkFZWFYwYUc5eUlDQWdSbVZ5YjNOeklFRmliM1ZyYUdGa2FXcGxhQ0E4YUhSMGNITTZMeTltWlhKdmMzTXViM0puUGx4dUlDb2dRR3hwWTJWdWMyVWdJRTFKVkZ4dUlDb3ZYRzVjYmk4dklGUm9aU0JmYVhOQ2RXWm1aWElnWTJobFkyc2dhWE1nWm05eUlGTmhabUZ5YVNBMUxUY2djM1Z3Y0c5eWRDd2dZbVZqWVhWelpTQnBkQ2R6SUcxcGMzTnBibWRjYmk4dklFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdVkyOXVjM1J5ZFdOMGIzSXVJRkpsYlc5MlpTQjBhR2x6SUdWMlpXNTBkV0ZzYkhsY2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0Z0tHOWlhaWtnZTF4dUlDQnlaWFIxY200Z2IySnFJQ0U5SUc1MWJHd2dKaVlnS0dselFuVm1abVZ5S0c5aWFpa2dmSHdnYVhOVGJHOTNRblZtWm1WeUtHOWlhaWtnZkh3Z0lTRnZZbW91WDJselFuVm1abVZ5S1Z4dWZWeHVYRzVtZFc1amRHbHZiaUJwYzBKMVptWmxjaUFvYjJKcUtTQjdYRzRnSUhKbGRIVnliaUFoSVc5aWFpNWpiMjV6ZEhKMVkzUnZjaUFtSmlCMGVYQmxiMllnYjJKcUxtTnZibk4wY25WamRHOXlMbWx6UW5WbVptVnlJRDA5UFNBblpuVnVZM1JwYjI0bklDWW1JRzlpYWk1amIyNXpkSEoxWTNSdmNpNXBjMEoxWm1abGNpaHZZbW9wWEc1OVhHNWNiaTh2SUVadmNpQk9iMlJsSUhZd0xqRXdJSE4xY0hCdmNuUXVJRkpsYlc5MlpTQjBhR2x6SUdWMlpXNTBkV0ZzYkhrdVhHNW1kVzVqZEdsdmJpQnBjMU5zYjNkQ2RXWm1aWElnS0c5aWFpa2dlMXh1SUNCeVpYUjFjbTRnZEhsd1pXOW1JRzlpYWk1eVpXRmtSbXh2WVhSTVJTQTlQVDBnSjJaMWJtTjBhVzl1SnlBbUppQjBlWEJsYjJZZ2IySnFMbk5zYVdObElEMDlQU0FuWm5WdVkzUnBiMjRuSUNZbUlHbHpRblZtWm1WeUtHOWlhaTV6YkdsalpTZ3dMQ0F3S1NsY2JuMWNiaUlzSWk4dklITm9hVzBnWm05eUlIVnphVzVuSUhCeWIyTmxjM01nYVc0Z1luSnZkM05sY2x4dWRtRnlJSEJ5YjJObGMzTWdQU0J0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSHQ5TzF4dVhHNHZMeUJqWVdOb1pXUWdabkp2YlNCM2FHRjBaWFpsY2lCbmJHOWlZV3dnYVhNZ2NISmxjMlZ1ZENCemJ5QjBhR0YwSUhSbGMzUWdjblZ1Ym1WeWN5QjBhR0YwSUhOMGRXSWdhWFJjYmk4dklHUnZiaWQwSUdKeVpXRnJJSFJvYVc1bmN5NGdJRUoxZENCM1pTQnVaV1ZrSUhSdklIZHlZWEFnYVhRZ2FXNGdZU0IwY25rZ1kyRjBZMmdnYVc0Z1kyRnpaU0JwZENCcGMxeHVMeThnZDNKaGNIQmxaQ0JwYmlCemRISnBZM1FnYlc5a1pTQmpiMlJsSUhkb2FXTm9JR1J2WlhOdUozUWdaR1ZtYVc1bElHRnVlU0JuYkc5aVlXeHpMaUFnU1hRbmN5QnBibk5wWkdVZ1lWeHVMeThnWm5WdVkzUnBiMjRnWW1WallYVnpaU0IwY25rdlkyRjBZMmhsY3lCa1pXOXdkR2x0YVhwbElHbHVJR05sY25SaGFXNGdaVzVuYVc1bGN5NWNibHh1ZG1GeUlHTmhZMmhsWkZObGRGUnBiV1Z2ZFhRN1hHNTJZWElnWTJGamFHVmtRMnhsWVhKVWFXMWxiM1YwTzF4dVhHNW1kVzVqZEdsdmJpQmtaV1poZFd4MFUyVjBWR2x0YjNWMEtDa2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnbmMyVjBWR2x0Wlc5MWRDQm9ZWE1nYm05MElHSmxaVzRnWkdWbWFXNWxaQ2NwTzF4dWZWeHVablZ1WTNScGIyNGdaR1ZtWVhWc2RFTnNaV0Z5VkdsdFpXOTFkQ0FvS1NCN1hHNGdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ2RqYkdWaGNsUnBiV1Z2ZFhRZ2FHRnpJRzV2ZENCaVpXVnVJR1JsWm1sdVpXUW5LVHRjYm4xY2JpaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQnpaWFJVYVcxbGIzVjBJRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCallXTm9aV1JUWlhSVWFXMWxiM1YwSUQwZ2MyVjBWR2x0Wlc5MWREdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOaFkyaGxaRk5sZEZScGJXVnZkWFFnUFNCa1pXWmhkV3gwVTJWMFZHbHRiM1YwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlNCallYUmphQ0FvWlNrZ2UxeHVJQ0FnSUNBZ0lDQmpZV05vWldSVFpYUlVhVzFsYjNWMElEMGdaR1ZtWVhWc2RGTmxkRlJwYlc5MWREdGNiaUFnSUNCOVhHNGdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJqYkdWaGNsUnBiV1Z2ZFhRZ1BUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR05oWTJobFpFTnNaV0Z5VkdsdFpXOTFkQ0E5SUdOc1pXRnlWR2x0Wlc5MWREdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOaFkyaGxaRU5zWldGeVZHbHRaVzkxZENBOUlHUmxabUYxYkhSRGJHVmhjbFJwYldWdmRYUTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlJR05oZEdOb0lDaGxLU0I3WEc0Z0lDQWdJQ0FnSUdOaFkyaGxaRU5zWldGeVZHbHRaVzkxZENBOUlHUmxabUYxYkhSRGJHVmhjbFJwYldWdmRYUTdYRzRnSUNBZ2ZWeHVmU0FvS1NsY2JtWjFibU4wYVc5dUlISjFibFJwYldWdmRYUW9ablZ1S1NCN1hHNGdJQ0FnYVdZZ0tHTmhZMmhsWkZObGRGUnBiV1Z2ZFhRZ1BUMDlJSE5sZEZScGJXVnZkWFFwSUh0Y2JpQWdJQ0FnSUNBZ0x5OXViM0p0WVd3Z1pXNTJhWEp2YldWdWRITWdhVzRnYzJGdVpTQnphWFIxWVhScGIyNXpYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnpaWFJVYVcxbGIzVjBLR1oxYml3Z01DazdYRzRnSUNBZ2ZWeHVJQ0FnSUM4dklHbG1JSE5sZEZScGJXVnZkWFFnZDJGemJpZDBJR0YyWVdsc1lXSnNaU0JpZFhRZ2QyRnpJR3hoZEhSbGNpQmtaV1pwYm1Wa1hHNGdJQ0FnYVdZZ0tDaGpZV05vWldSVFpYUlVhVzFsYjNWMElEMDlQU0JrWldaaGRXeDBVMlYwVkdsdGIzVjBJSHg4SUNGallXTm9aV1JUWlhSVWFXMWxiM1YwS1NBbUppQnpaWFJVYVcxbGIzVjBLU0I3WEc0Z0lDQWdJQ0FnSUdOaFkyaGxaRk5sZEZScGJXVnZkWFFnUFNCelpYUlVhVzFsYjNWME8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2MyVjBWR2x0Wlc5MWRDaG1kVzRzSURBcE8xeHVJQ0FnSUgxY2JpQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ0lDQXZMeUIzYUdWdUlIZG9aVzRnYzI5dFpXSnZaSGtnYUdGeklITmpjbVYzWldRZ2QybDBhQ0J6WlhSVWFXMWxiM1YwSUdKMWRDQnVieUJKTGtVdUlHMWhaR1J1WlhOelhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCallXTm9aV1JUWlhSVWFXMWxiM1YwS0daMWJpd2dNQ2s3WEc0Z0lDQWdmU0JqWVhSamFDaGxLWHRjYmlBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklGZG9aVzRnZDJVZ1lYSmxJR2x1SUVrdVJTNGdZblYwSUhSb1pTQnpZM0pwY0hRZ2FHRnpJR0psWlc0Z1pYWmhiR1ZrSUhOdklFa3VSUzRnWkc5bGMyNG5kQ0IwY25WemRDQjBhR1VnWjJ4dlltRnNJRzlpYW1WamRDQjNhR1Z1SUdOaGJHeGxaQ0J1YjNKdFlXeHNlVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOaFkyaGxaRk5sZEZScGJXVnZkWFF1WTJGc2JDaHVkV3hzTENCbWRXNHNJREFwTzF4dUlDQWdJQ0FnSUNCOUlHTmhkR05vS0dVcGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2MyRnRaU0JoY3lCaFltOTJaU0JpZFhRZ2QyaGxiaUJwZENkeklHRWdkbVZ5YzJsdmJpQnZaaUJKTGtVdUlIUm9ZWFFnYlhWemRDQm9ZWFpsSUhSb1pTQm5iRzlpWVd3Z2IySnFaV04wSUdadmNpQW5kR2hwY3ljc0lHaHZjR1oxYkd4NUlHOTFjaUJqYjI1MFpYaDBJR052Y25KbFkzUWdiM1JvWlhKM2FYTmxJR2wwSUhkcGJHd2dkR2h5YjNjZ1lTQm5iRzlpWVd3Z1pYSnliM0pjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCallXTm9aV1JUWlhSVWFXMWxiM1YwTG1OaGJHd29kR2hwY3l3Z1puVnVMQ0F3S1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVYRzU5WEc1bWRXNWpkR2x2YmlCeWRXNURiR1ZoY2xScGJXVnZkWFFvYldGeWEyVnlLU0I3WEc0Z0lDQWdhV1lnS0dOaFkyaGxaRU5zWldGeVZHbHRaVzkxZENBOVBUMGdZMnhsWVhKVWFXMWxiM1YwS1NCN1hHNGdJQ0FnSUNBZ0lDOHZibTl5YldGc0lHVnVkbWx5YjIxbGJuUnpJR2x1SUhOaGJtVWdjMmwwZFdGMGFXOXVjMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMnhsWVhKVWFXMWxiM1YwS0cxaGNtdGxjaWs3WEc0Z0lDQWdmVnh1SUNBZ0lDOHZJR2xtSUdOc1pXRnlWR2x0Wlc5MWRDQjNZWE51SjNRZ1lYWmhhV3hoWW14bElHSjFkQ0IzWVhNZ2JHRjBkR1Z5SUdSbFptbHVaV1JjYmlBZ0lDQnBaaUFvS0dOaFkyaGxaRU5zWldGeVZHbHRaVzkxZENBOVBUMGdaR1ZtWVhWc2RFTnNaV0Z5VkdsdFpXOTFkQ0I4ZkNBaFkyRmphR1ZrUTJ4bFlYSlVhVzFsYjNWMEtTQW1KaUJqYkdWaGNsUnBiV1Z2ZFhRcElIdGNiaUFnSUNBZ0lDQWdZMkZqYUdWa1EyeGxZWEpVYVcxbGIzVjBJRDBnWTJ4bFlYSlVhVzFsYjNWME8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyeGxZWEpVYVcxbGIzVjBLRzFoY210bGNpazdYRzRnSUNBZ2ZWeHVJQ0FnSUhSeWVTQjdYRzRnSUNBZ0lDQWdJQzh2SUhkb1pXNGdkMmhsYmlCemIyMWxZbTlrZVNCb1lYTWdjMk55WlhkbFpDQjNhWFJvSUhObGRGUnBiV1Z2ZFhRZ1luVjBJRzV2SUVrdVJTNGdiV0ZrWkc1bGMzTmNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTmhZMmhsWkVOc1pXRnlWR2x0Wlc5MWRDaHRZWEpyWlhJcE8xeHVJQ0FnSUgwZ1kyRjBZMmdnS0dVcGUxeHVJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnVjJobGJpQjNaU0JoY21VZ2FXNGdTUzVGTGlCaWRYUWdkR2hsSUhOamNtbHdkQ0JvWVhNZ1ltVmxiaUJsZG1Gc1pXUWdjMjhnU1M1RkxpQmtiMlZ6YmlkMElDQjBjblZ6ZENCMGFHVWdaMnh2WW1Gc0lHOWlhbVZqZENCM2FHVnVJR05oYkd4bFpDQnViM0p0WVd4c2VWeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR05oWTJobFpFTnNaV0Z5VkdsdFpXOTFkQzVqWVd4c0tHNTFiR3dzSUcxaGNtdGxjaWs3WEc0Z0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dVcGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2MyRnRaU0JoY3lCaFltOTJaU0JpZFhRZ2QyaGxiaUJwZENkeklHRWdkbVZ5YzJsdmJpQnZaaUJKTGtVdUlIUm9ZWFFnYlhWemRDQm9ZWFpsSUhSb1pTQm5iRzlpWVd3Z2IySnFaV04wSUdadmNpQW5kR2hwY3ljc0lHaHZjR1oxYkd4NUlHOTFjaUJqYjI1MFpYaDBJR052Y25KbFkzUWdiM1JvWlhKM2FYTmxJR2wwSUhkcGJHd2dkR2h5YjNjZ1lTQm5iRzlpWVd3Z1pYSnliM0l1WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJUYjIxbElIWmxjbk5wYjI1eklHOW1JRWt1UlM0Z2FHRjJaU0JrYVdabVpYSmxiblFnY25Wc1pYTWdabTl5SUdOc1pXRnlWR2x0Wlc5MWRDQjJjeUJ6WlhSVWFXMWxiM1YwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyRmphR1ZrUTJ4bFlYSlVhVzFsYjNWMExtTmhiR3dvZEdocGN5d2diV0Z5YTJWeUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1WEc1Y2JuMWNiblpoY2lCeGRXVjFaU0E5SUZ0ZE8xeHVkbUZ5SUdSeVlXbHVhVzVuSUQwZ1ptRnNjMlU3WEc1MllYSWdZM1Z5Y21WdWRGRjFaWFZsTzF4dWRtRnlJSEYxWlhWbFNXNWtaWGdnUFNBdE1UdGNibHh1Wm5WdVkzUnBiMjRnWTJ4bFlXNVZjRTVsZUhSVWFXTnJLQ2tnZTF4dUlDQWdJR2xtSUNnaFpISmhhVzVwYm1jZ2ZId2dJV04xY25KbGJuUlJkV1YxWlNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnZlZ4dUlDQWdJR1J5WVdsdWFXNW5JRDBnWm1Gc2MyVTdYRzRnSUNBZ2FXWWdLR04xY25KbGJuUlJkV1YxWlM1c1pXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ2NYVmxkV1VnUFNCamRYSnlaVzUwVVhWbGRXVXVZMjl1WTJGMEtIRjFaWFZsS1R0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0J4ZFdWMVpVbHVaR1Y0SUQwZ0xURTdYRzRnSUNBZ2ZWeHVJQ0FnSUdsbUlDaHhkV1YxWlM1c1pXNW5kR2dwSUh0Y2JpQWdJQ0FnSUNBZ1pISmhhVzVSZFdWMVpTZ3BPMXh1SUNBZ0lIMWNibjFjYmx4dVpuVnVZM1JwYjI0Z1pISmhhVzVSZFdWMVpTZ3BJSHRjYmlBZ0lDQnBaaUFvWkhKaGFXNXBibWNwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJSDFjYmlBZ0lDQjJZWElnZEdsdFpXOTFkQ0E5SUhKMWJsUnBiV1Z2ZFhRb1kyeGxZVzVWY0U1bGVIUlVhV05yS1R0Y2JpQWdJQ0JrY21GcGJtbHVaeUE5SUhSeWRXVTdYRzVjYmlBZ0lDQjJZWElnYkdWdUlEMGdjWFZsZFdVdWJHVnVaM1JvTzF4dUlDQWdJSGRvYVd4bEtHeGxiaWtnZTF4dUlDQWdJQ0FnSUNCamRYSnlaVzUwVVhWbGRXVWdQU0J4ZFdWMVpUdGNiaUFnSUNBZ0lDQWdjWFZsZFdVZ1BTQmJYVHRjYmlBZ0lDQWdJQ0FnZDJocGJHVWdLQ3NyY1hWbGRXVkpibVJsZUNBOElHeGxiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOMWNuSmxiblJSZFdWMVpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR04xY25KbGJuUlJkV1YxWlZ0eGRXVjFaVWx1WkdWNFhTNXlkVzRvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeGRXVjFaVWx1WkdWNElEMGdMVEU3WEc0Z0lDQWdJQ0FnSUd4bGJpQTlJSEYxWlhWbExteGxibWQwYUR0Y2JpQWdJQ0I5WEc0Z0lDQWdZM1Z5Y21WdWRGRjFaWFZsSUQwZ2JuVnNiRHRjYmlBZ0lDQmtjbUZwYm1sdVp5QTlJR1poYkhObE8xeHVJQ0FnSUhKMWJrTnNaV0Z5VkdsdFpXOTFkQ2gwYVcxbGIzVjBLVHRjYm4xY2JseHVjSEp2WTJWemN5NXVaWGgwVkdsamF5QTlJR1oxYm1OMGFXOXVJQ2htZFc0cElIdGNiaUFnSUNCMllYSWdZWEpuY3lBOUlHNWxkeUJCY25KaGVTaGhjbWQxYldWdWRITXViR1Z1WjNSb0lDMGdNU2s3WEc0Z0lDQWdhV1lnS0dGeVozVnRaVzUwY3k1c1pXNW5kR2dnUGlBeEtTQjdYRzRnSUNBZ0lDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBeE95QnBJRHdnWVhKbmRXMWxiblJ6TG14bGJtZDBhRHNnYVNzcktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaGNtZHpXMmtnTFNBeFhTQTlJR0Z5WjNWdFpXNTBjMXRwWFR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0J4ZFdWMVpTNXdkWE5vS0c1bGR5QkpkR1Z0S0daMWJpd2dZWEpuY3lrcE8xeHVJQ0FnSUdsbUlDaHhkV1YxWlM1c1pXNW5kR2dnUFQwOUlERWdKaVlnSVdSeVlXbHVhVzVuS1NCN1hHNGdJQ0FnSUNBZ0lISjFibFJwYldWdmRYUW9aSEpoYVc1UmRXVjFaU2s3WEc0Z0lDQWdmVnh1ZlR0Y2JseHVMeThnZGpnZ2JHbHJaWE1nY0hKbFpHbGpkR2xpYkdVZ2IySnFaV04wYzF4dVpuVnVZM1JwYjI0Z1NYUmxiU2htZFc0c0lHRnljbUY1S1NCN1hHNGdJQ0FnZEdocGN5NW1kVzRnUFNCbWRXNDdYRzRnSUNBZ2RHaHBjeTVoY25KaGVTQTlJR0Z5Y21GNU8xeHVmVnh1U1hSbGJTNXdjbTkwYjNSNWNHVXVjblZ1SUQwZ1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lIUm9hWE11Wm5WdUxtRndjR3g1S0c1MWJHd3NJSFJvYVhNdVlYSnlZWGtwTzF4dWZUdGNibkJ5YjJObGMzTXVkR2wwYkdVZ1BTQW5Zbkp2ZDNObGNpYzdYRzV3Y205alpYTnpMbUp5YjNkelpYSWdQU0IwY25WbE8xeHVjSEp2WTJWemN5NWxibllnUFNCN2ZUdGNibkJ5YjJObGMzTXVZWEpuZGlBOUlGdGRPMXh1Y0hKdlkyVnpjeTUyWlhKemFXOXVJRDBnSnljN0lDOHZJR1Z0Y0hSNUlITjBjbWx1WnlCMGJ5QmhkbTlwWkNCeVpXZGxlSEFnYVhOemRXVnpYRzV3Y205alpYTnpMblpsY25OcGIyNXpJRDBnZTMwN1hHNWNibVoxYm1OMGFXOXVJRzV2YjNBb0tTQjdmVnh1WEc1d2NtOWpaWE56TG05dUlEMGdibTl2Y0R0Y2JuQnliMk5sYzNNdVlXUmtUR2x6ZEdWdVpYSWdQU0J1YjI5d08xeHVjSEp2WTJWemN5NXZibU5sSUQwZ2JtOXZjRHRjYm5CeWIyTmxjM011YjJabUlEMGdibTl2Y0R0Y2JuQnliMk5sYzNNdWNtVnRiM1psVEdsemRHVnVaWElnUFNCdWIyOXdPMXh1Y0hKdlkyVnpjeTV5WlcxdmRtVkJiR3hNYVhOMFpXNWxjbk1nUFNCdWIyOXdPMXh1Y0hKdlkyVnpjeTVsYldsMElEMGdibTl2Y0R0Y2JuQnliMk5sYzNNdWNISmxjR1Z1WkV4cGMzUmxibVZ5SUQwZ2JtOXZjRHRjYm5CeWIyTmxjM011Y0hKbGNHVnVaRTl1WTJWTWFYTjBaVzVsY2lBOUlHNXZiM0E3WEc1Y2JuQnliMk5sYzNNdWJHbHpkR1Z1WlhKeklEMGdablZ1WTNScGIyNGdLRzVoYldVcElIc2djbVYwZFhKdUlGdGRJSDFjYmx4dWNISnZZMlZ6Y3k1aWFXNWthVzVuSUQwZ1puVnVZM1JwYjI0Z0tHNWhiV1VwSUh0Y2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KM0J5YjJObGMzTXVZbWx1WkdsdVp5QnBjeUJ1YjNRZ2MzVndjRzl5ZEdWa0p5azdYRzU5TzF4dVhHNXdjbTlqWlhOekxtTjNaQ0E5SUdaMWJtTjBhVzl1SUNncElIc2djbVYwZFhKdUlDY3ZKeUI5TzF4dWNISnZZMlZ6Y3k1amFHUnBjaUE5SUdaMWJtTjBhVzl1SUNoa2FYSXBJSHRjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ozQnliMk5sYzNNdVkyaGthWElnYVhNZ2JtOTBJSE4xY0hCdmNuUmxaQ2NwTzF4dWZUdGNibkJ5YjJObGMzTXVkVzFoYzJzZ1BTQm1kVzVqZEdsdmJpZ3BJSHNnY21WMGRYSnVJREE3SUgwN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCeVpYQnNZV05sSUQwZ1UzUnlhVzVuTG5CeWIzUnZkSGx3WlM1eVpYQnNZV05sTzF4dWRtRnlJSEJsY21ObGJuUlVkMlZ1ZEdsbGN5QTlJQzhsTWpBdlp6dGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0I3WEc0Z0lDQWdKMlJsWm1GMWJIUW5PaUFuVWtaRE16azROaWNzWEc0Z0lDQWdabTl5YldGMGRHVnljem9nZTF4dUlDQWdJQ0FnSUNCU1JrTXhOek00T2lCbWRXNWpkR2x2YmlBb2RtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnlaWEJzWVdObExtTmhiR3dvZG1Gc2RXVXNJSEJsY21ObGJuUlVkMlZ1ZEdsbGN5d2dKeXNuS1R0Y2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdVa1pETXprNE5qb2dablZ1WTNScGIyNGdLSFpoYkhWbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZG1Gc2RXVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlMRnh1SUNBZ0lGSkdRekUzTXpnNklDZFNSa014TnpNNEp5eGNiaUFnSUNCU1JrTXpPVGcyT2lBblVrWkRNems0TmlkY2JuMDdYRzRpTENJbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQnpkSEpwYm1kcFpua2dQU0J5WlhGMWFYSmxLQ2N1TDNOMGNtbHVaMmxtZVNjcE8xeHVkbUZ5SUhCaGNuTmxJRDBnY21WeGRXbHlaU2duTGk5d1lYSnpaU2NwTzF4dWRtRnlJR1p2Y20xaGRITWdQU0J5WlhGMWFYSmxLQ2N1TDJadmNtMWhkSE1uS1R0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQjdYRzRnSUNBZ1ptOXliV0YwY3pvZ1ptOXliV0YwY3l4Y2JpQWdJQ0J3WVhKelpUb2djR0Z5YzJVc1hHNGdJQ0FnYzNSeWFXNW5hV1o1T2lCemRISnBibWRwWm5sY2JuMDdYRzRpTENJbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQjFkR2xzY3lBOUlISmxjWFZwY21Vb0p5NHZkWFJwYkhNbktUdGNibHh1ZG1GeUlHaGhjeUE5SUU5aWFtVmpkQzV3Y205MGIzUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIazdYRzVjYm5aaGNpQmtaV1poZFd4MGN5QTlJSHRjYmlBZ0lDQmhiR3h2ZDBSdmRITTZJR1poYkhObExGeHVJQ0FnSUdGc2JHOTNVSEp2ZEc5MGVYQmxjem9nWm1Gc2MyVXNYRzRnSUNBZ1lYSnlZWGxNYVcxcGREb2dNakFzWEc0Z0lDQWdaR1ZqYjJSbGNqb2dkWFJwYkhNdVpHVmpiMlJsTEZ4dUlDQWdJR1JsYkdsdGFYUmxjam9nSnlZbkxGeHVJQ0FnSUdSbGNIUm9PaUExTEZ4dUlDQWdJSEJoY21GdFpYUmxja3hwYldsME9pQXhNREF3TEZ4dUlDQWdJSEJzWVdsdVQySnFaV04wY3pvZ1ptRnNjMlVzWEc0Z0lDQWdjM1J5YVdOMFRuVnNiRWhoYm1Sc2FXNW5PaUJtWVd4elpWeHVmVHRjYmx4dWRtRnlJSEJoY25ObFZtRnNkV1Z6SUQwZ1puVnVZM1JwYjI0Z2NHRnljMlZSZFdWeWVWTjBjbWx1WjFaaGJIVmxjeWh6ZEhJc0lHOXdkR2x2Ym5NcElIdGNiaUFnSUNCMllYSWdiMkpxSUQwZ2UzMDdYRzRnSUNBZ2RtRnlJR05zWldGdVUzUnlJRDBnYjNCMGFXOXVjeTVwWjI1dmNtVlJkV1Z5ZVZCeVpXWnBlQ0EvSUhOMGNpNXlaWEJzWVdObEtDOWVYRncvTHl3Z0p5Y3BJRG9nYzNSeU8xeHVJQ0FnSUhaaGNpQnNhVzFwZENBOUlHOXdkR2x2Ym5NdWNHRnlZVzFsZEdWeVRHbHRhWFFnUFQwOUlFbHVabWx1YVhSNUlEOGdkVzVrWldacGJtVmtJRG9nYjNCMGFXOXVjeTV3WVhKaGJXVjBaWEpNYVcxcGREdGNiaUFnSUNCMllYSWdjR0Z5ZEhNZ1BTQmpiR1ZoYmxOMGNpNXpjR3hwZENodmNIUnBiMjV6TG1SbGJHbHRhWFJsY2l3Z2JHbHRhWFFwTzF4dVhHNGdJQ0FnWm05eUlDaDJZWElnYVNBOUlEQTdJR2tnUENCd1lYSjBjeTVzWlc1bmRHZzdJQ3NyYVNrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnY0dGeWRDQTlJSEJoY25SelcybGRPMXh1WEc0Z0lDQWdJQ0FnSUhaaGNpQmljbUZqYTJWMFJYRjFZV3h6VUc5eklEMGdjR0Z5ZEM1cGJtUmxlRTltS0NkZFBTY3BPMXh1SUNBZ0lDQWdJQ0IyWVhJZ2NHOXpJRDBnWW5KaFkydGxkRVZ4ZFdGc2MxQnZjeUE5UFQwZ0xURWdQeUJ3WVhKMExtbHVaR1Y0VDJZb0p6MG5LU0E2SUdKeVlXTnJaWFJGY1hWaGJITlFiM01nS3lBeE8xeHVYRzRnSUNBZ0lDQWdJSFpoY2lCclpYa3NJSFpoYkR0Y2JpQWdJQ0FnSUNBZ2FXWWdLSEJ2Y3lBOVBUMGdMVEVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR3RsZVNBOUlHOXdkR2x2Ym5NdVpHVmpiMlJsY2lod1lYSjBMQ0JrWldaaGRXeDBjeTVrWldOdlpHVnlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhiQ0E5SUc5d2RHbHZibk11YzNSeWFXTjBUblZzYkVoaGJtUnNhVzVuSUQ4Z2JuVnNiQ0E2SUNjbk8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYTJWNUlEMGdiM0IwYVc5dWN5NWtaV052WkdWeUtIQmhjblF1YzJ4cFkyVW9NQ3dnY0c5ektTd2daR1ZtWVhWc2RITXVaR1ZqYjJSbGNpazdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllXd2dQU0J2Y0hScGIyNXpMbVJsWTI5a1pYSW9jR0Z5ZEM1emJHbGpaU2h3YjNNZ0t5QXhLU3dnWkdWbVlYVnNkSE11WkdWamIyUmxjaWs3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2FXWWdLR2hoY3k1allXeHNLRzlpYWl3Z2EyVjVLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiMkpxVzJ0bGVWMGdQU0JiWFM1amIyNWpZWFFvYjJKcVcydGxlVjBwTG1OdmJtTmhkQ2gyWVd3cE8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVcydGxlVjBnUFNCMllXdzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2IySnFPMXh1ZlR0Y2JseHVkbUZ5SUhCaGNuTmxUMkpxWldOMElEMGdablZ1WTNScGIyNGdLR05vWVdsdUxDQjJZV3dzSUc5d2RHbHZibk1wSUh0Y2JpQWdJQ0IyWVhJZ2JHVmhaaUE5SUhaaGJEdGNibHh1SUNBZ0lHWnZjaUFvZG1GeUlHa2dQU0JqYUdGcGJpNXNaVzVuZEdnZ0xTQXhPeUJwSUQ0OUlEQTdJQzB0YVNrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnYjJKcU8xeHVJQ0FnSUNBZ0lDQjJZWElnY205dmRDQTlJR05vWVdsdVcybGRPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaHliMjkwSUQwOVBTQW5XMTBuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2WW1vZ1BTQmJYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOWlhaUE5SUc5aWFpNWpiMjVqWVhRb2JHVmhaaWs3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZZbW9nUFNCdmNIUnBiMjV6TG5Cc1lXbHVUMkpxWldOMGN5QS9JRTlpYW1WamRDNWpjbVZoZEdVb2JuVnNiQ2tnT2lCN2ZUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQmpiR1ZoYmxKdmIzUWdQU0J5YjI5MExtTm9ZWEpCZENnd0tTQTlQVDBnSjFzbklDWW1JSEp2YjNRdVkyaGhja0YwS0hKdmIzUXViR1Z1WjNSb0lDMGdNU2tnUFQwOUlDZGRKeUEvSUhKdmIzUXVjMnhwWTJVb01Td2dMVEVwSURvZ2NtOXZkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwYm1SbGVDQTlJSEJoY25ObFNXNTBLR05zWldGdVVtOXZkQ3dnTVRBcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDRnBjMDVoVGlocGJtUmxlQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FtSmlCeWIyOTBJQ0U5UFNCamJHVmhibEp2YjNSY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbUppQlRkSEpwYm1jb2FXNWtaWGdwSUQwOVBTQmpiR1ZoYmxKdmIzUmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW1KaUJwYm1SbGVDQStQU0F3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSmlZZ0tHOXdkR2x2Ym5NdWNHRnljMlZCY25KaGVYTWdKaVlnYVc1a1pYZ2dQRDBnYjNCMGFXOXVjeTVoY25KaGVVeHBiV2wwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjJKcUlEMGdXMTA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVcybHVaR1Y0WFNBOUlHeGxZV1k3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOWlhbHRqYkdWaGJsSnZiM1JkSUQwZ2JHVmhaanRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUd4bFlXWWdQU0J2WW1vN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJR3hsWVdZN1hHNTlPMXh1WEc1MllYSWdjR0Z5YzJWTFpYbHpJRDBnWm5WdVkzUnBiMjRnY0dGeWMyVlJkV1Z5ZVZOMGNtbHVaMHRsZVhNb1oybDJaVzVMWlhrc0lIWmhiQ3dnYjNCMGFXOXVjeWtnZTF4dUlDQWdJR2xtSUNnaFoybDJaVzVMWlhrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklGUnlZVzV6Wm05eWJTQmtiM1FnYm05MFlYUnBiMjRnZEc4Z1luSmhZMnRsZENCdWIzUmhkR2x2Ymx4dUlDQWdJSFpoY2lCclpYa2dQU0J2Y0hScGIyNXpMbUZzYkc5M1JHOTBjeUEvSUdkcGRtVnVTMlY1TG5KbGNHeGhZMlVvTDF4Y0xpaGJYaTViWFNzcEwyY3NJQ2RiSkRGZEp5a2dPaUJuYVhabGJrdGxlVHRjYmx4dUlDQWdJQzh2SUZSb1pTQnlaV2RsZUNCamFIVnVhM05jYmx4dUlDQWdJSFpoY2lCaWNtRmphMlYwY3lBOUlDOG9YRnhiVzE1YlhGeGRYU3BkS1M4N1hHNGdJQ0FnZG1GeUlHTm9hV3hrSUQwZ0x5aGNYRnRiWGx0Y1hGMWRLbDBwTDJjN1hHNWNiaUFnSUNBdkx5QkhaWFFnZEdobElIQmhjbVZ1ZEZ4dVhHNGdJQ0FnZG1GeUlITmxaMjFsYm5RZ1BTQmljbUZqYTJWMGN5NWxlR1ZqS0d0bGVTazdYRzRnSUNBZ2RtRnlJSEJoY21WdWRDQTlJSE5sWjIxbGJuUWdQeUJyWlhrdWMyeHBZMlVvTUN3Z2MyVm5iV1Z1ZEM1cGJtUmxlQ2tnT2lCclpYazdYRzVjYmlBZ0lDQXZMeUJUZEdGemFDQjBhR1VnY0dGeVpXNTBJR2xtSUdsMElHVjRhWE4wYzF4dVhHNGdJQ0FnZG1GeUlHdGxlWE1nUFNCYlhUdGNiaUFnSUNCcFppQW9jR0Z5Wlc1MEtTQjdYRzRnSUNBZ0lDQWdJQzh2SUVsbUlIZGxJR0Z5Wlc0bmRDQjFjMmx1WnlCd2JHRnBiaUJ2WW1wbFkzUnpMQ0J2Y0hScGIyNWhiR3g1SUhCeVpXWnBlQ0JyWlhselhHNGdJQ0FnSUNBZ0lDOHZJSFJvWVhRZ2QyOTFiR1FnYjNabGNuZHlhWFJsSUc5aWFtVmpkQ0J3Y205MGIzUjVjR1VnY0hKdmNHVnlkR2xsYzF4dUlDQWdJQ0FnSUNCcFppQW9JVzl3ZEdsdmJuTXVjR3hoYVc1UFltcGxZM1J6SUNZbUlHaGhjeTVqWVd4c0tFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVc0lIQmhjbVZ1ZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hiM0IwYVc5dWN5NWhiR3h2ZDFCeWIzUnZkSGx3WlhNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnJaWGx6TG5CMWMyZ29jR0Z5Wlc1MEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5Qk1iMjl3SUhSb2NtOTFaMmdnWTJocGJHUnlaVzRnWVhCd1pXNWthVzVuSUhSdklIUm9aU0JoY25KaGVTQjFiblJwYkNCM1pTQm9hWFFnWkdWd2RHaGNibHh1SUNBZ0lIWmhjaUJwSUQwZ01EdGNiaUFnSUNCM2FHbHNaU0FvS0hObFoyMWxiblFnUFNCamFHbHNaQzVsZUdWaktHdGxlU2twSUNFOVBTQnVkV3hzSUNZbUlHa2dQQ0J2Y0hScGIyNXpMbVJsY0hSb0tTQjdYRzRnSUNBZ0lDQWdJR2tnS3owZ01UdGNiaUFnSUNBZ0lDQWdhV1lnS0NGdmNIUnBiMjV6TG5Cc1lXbHVUMkpxWldOMGN5QW1KaUJvWVhNdVkyRnNiQ2hQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMQ0J6WldkdFpXNTBXekZkTG5Oc2FXTmxLREVzSUMweEtTa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doYjNCMGFXOXVjeTVoYkd4dmQxQnliM1J2ZEhsd1pYTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhMlY1Y3k1d2RYTm9LSE5sWjIxbGJuUmJNVjBwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUVsbUlIUm9aWEpsSjNNZ1lTQnlaVzFoYVc1a1pYSXNJR3AxYzNRZ1lXUmtJSGRvWVhSbGRtVnlJR2x6SUd4bFpuUmNibHh1SUNBZ0lHbG1JQ2h6WldkdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUd0bGVYTXVjSFZ6YUNnbld5Y2dLeUJyWlhrdWMyeHBZMlVvYzJWbmJXVnVkQzVwYm1SbGVDa2dLeUFuWFNjcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ3WVhKelpVOWlhbVZqZENoclpYbHpMQ0IyWVd3c0lHOXdkR2x2Ym5NcE8xeHVmVHRjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlBb2MzUnlMQ0J2Y0hSektTQjdYRzRnSUNBZ2RtRnlJRzl3ZEdsdmJuTWdQU0J2Y0hSeklEOGdkWFJwYkhNdVlYTnphV2R1S0h0OUxDQnZjSFJ6S1NBNklIdDlPMXh1WEc0Z0lDQWdhV1lnS0c5d2RHbHZibk11WkdWamIyUmxjaUFoUFQwZ2JuVnNiQ0FtSmlCdmNIUnBiMjV6TG1SbFkyOWtaWElnSVQwOUlIVnVaR1ZtYVc1bFpDQW1KaUIwZVhCbGIyWWdiM0IwYVc5dWN5NWtaV052WkdWeUlDRTlQU0FuWm5WdVkzUnBiMjRuS1NCN1hHNGdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QlVlWEJsUlhKeWIzSW9KMFJsWTI5a1pYSWdhR0Z6SUhSdklHSmxJR0VnWm5WdVkzUnBiMjR1SnlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYjNCMGFXOXVjeTVwWjI1dmNtVlJkV1Z5ZVZCeVpXWnBlQ0E5SUc5d2RHbHZibk11YVdkdWIzSmxVWFZsY25sUWNtVm1hWGdnUFQwOUlIUnlkV1U3WEc0Z0lDQWdiM0IwYVc5dWN5NWtaV3hwYldsMFpYSWdQU0IwZVhCbGIyWWdiM0IwYVc5dWN5NWtaV3hwYldsMFpYSWdQVDA5SUNkemRISnBibWNuSUh4OElIVjBhV3h6TG1selVtVm5SWGh3S0c5d2RHbHZibk11WkdWc2FXMXBkR1Z5S1NBL0lHOXdkR2x2Ym5NdVpHVnNhVzFwZEdWeUlEb2daR1ZtWVhWc2RITXVaR1ZzYVcxcGRHVnlPMXh1SUNBZ0lHOXdkR2x2Ym5NdVpHVndkR2dnUFNCMGVYQmxiMllnYjNCMGFXOXVjeTVrWlhCMGFDQTlQVDBnSjI1MWJXSmxjaWNnUHlCdmNIUnBiMjV6TG1SbGNIUm9JRG9nWkdWbVlYVnNkSE11WkdWd2RHZzdYRzRnSUNBZ2IzQjBhVzl1Y3k1aGNuSmhlVXhwYldsMElEMGdkSGx3Wlc5bUlHOXdkR2x2Ym5NdVlYSnlZWGxNYVcxcGRDQTlQVDBnSjI1MWJXSmxjaWNnUHlCdmNIUnBiMjV6TG1GeWNtRjVUR2x0YVhRZ09pQmtaV1poZFd4MGN5NWhjbkpoZVV4cGJXbDBPMXh1SUNBZ0lHOXdkR2x2Ym5NdWNHRnljMlZCY25KaGVYTWdQU0J2Y0hScGIyNXpMbkJoY25ObFFYSnlZWGx6SUNFOVBTQm1ZV3h6WlR0Y2JpQWdJQ0J2Y0hScGIyNXpMbVJsWTI5a1pYSWdQU0IwZVhCbGIyWWdiM0IwYVc5dWN5NWtaV052WkdWeUlEMDlQU0FuWm5WdVkzUnBiMjRuSUQ4Z2IzQjBhVzl1Y3k1a1pXTnZaR1Z5SURvZ1pHVm1ZWFZzZEhNdVpHVmpiMlJsY2p0Y2JpQWdJQ0J2Y0hScGIyNXpMbUZzYkc5M1JHOTBjeUE5SUhSNWNHVnZaaUJ2Y0hScGIyNXpMbUZzYkc5M1JHOTBjeUE5UFQwZ0oySnZiMnhsWVc0bklEOGdiM0IwYVc5dWN5NWhiR3h2ZDBSdmRITWdPaUJrWldaaGRXeDBjeTVoYkd4dmQwUnZkSE03WEc0Z0lDQWdiM0IwYVc5dWN5NXdiR0ZwYms5aWFtVmpkSE1nUFNCMGVYQmxiMllnYjNCMGFXOXVjeTV3YkdGcGJrOWlhbVZqZEhNZ1BUMDlJQ2RpYjI5c1pXRnVKeUEvSUc5d2RHbHZibk11Y0d4aGFXNVBZbXBsWTNSeklEb2daR1ZtWVhWc2RITXVjR3hoYVc1UFltcGxZM1J6TzF4dUlDQWdJRzl3ZEdsdmJuTXVZV3hzYjNkUWNtOTBiM1I1Y0dWeklEMGdkSGx3Wlc5bUlHOXdkR2x2Ym5NdVlXeHNiM2RRY205MGIzUjVjR1Z6SUQwOVBTQW5ZbTl2YkdWaGJpY2dQeUJ2Y0hScGIyNXpMbUZzYkc5M1VISnZkRzkwZVhCbGN5QTZJR1JsWm1GMWJIUnpMbUZzYkc5M1VISnZkRzkwZVhCbGN6dGNiaUFnSUNCdmNIUnBiMjV6TG5CaGNtRnRaWFJsY2t4cGJXbDBJRDBnZEhsd1pXOW1JRzl3ZEdsdmJuTXVjR0Z5WVcxbGRHVnlUR2x0YVhRZ1BUMDlJQ2R1ZFcxaVpYSW5JRDhnYjNCMGFXOXVjeTV3WVhKaGJXVjBaWEpNYVcxcGRDQTZJR1JsWm1GMWJIUnpMbkJoY21GdFpYUmxja3hwYldsME8xeHVJQ0FnSUc5d2RHbHZibk11YzNSeWFXTjBUblZzYkVoaGJtUnNhVzVuSUQwZ2RIbHdaVzltSUc5d2RHbHZibk11YzNSeWFXTjBUblZzYkVoaGJtUnNhVzVuSUQwOVBTQW5ZbTl2YkdWaGJpY2dQeUJ2Y0hScGIyNXpMbk4wY21samRFNTFiR3hJWVc1a2JHbHVaeUE2SUdSbFptRjFiSFJ6TG5OMGNtbGpkRTUxYkd4SVlXNWtiR2x1Wnp0Y2JseHVJQ0FnSUdsbUlDaHpkSElnUFQwOUlDY25JSHg4SUhOMGNpQTlQVDBnYm5Wc2JDQjhmQ0IwZVhCbGIyWWdjM1J5SUQwOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYjNCMGFXOXVjeTV3YkdGcGJrOWlhbVZqZEhNZ1B5QlBZbXBsWTNRdVkzSmxZWFJsS0c1MWJHd3BJRG9nZTMwN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZG1GeUlIUmxiWEJQWW1vZ1BTQjBlWEJsYjJZZ2MzUnlJRDA5UFNBbmMzUnlhVzVuSnlBL0lIQmhjbk5sVm1Gc2RXVnpLSE4wY2l3Z2IzQjBhVzl1Y3lrZ09pQnpkSEk3WEc0Z0lDQWdkbUZ5SUc5aWFpQTlJRzl3ZEdsdmJuTXVjR3hoYVc1UFltcGxZM1J6SUQ4Z1QySnFaV04wTG1OeVpXRjBaU2h1ZFd4c0tTQTZJSHQ5TzF4dVhHNGdJQ0FnTHk4Z1NYUmxjbUYwWlNCdmRtVnlJSFJvWlNCclpYbHpJR0Z1WkNCelpYUjFjQ0IwYUdVZ2JtVjNJRzlpYW1WamRGeHVYRzRnSUNBZ2RtRnlJR3RsZVhNZ1BTQlBZbXBsWTNRdWEyVjVjeWgwWlcxd1QySnFLVHRjYmlBZ0lDQm1iM0lnS0haaGNpQnBJRDBnTURzZ2FTQThJR3RsZVhNdWJHVnVaM1JvT3lBcksya3BJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHdGxlU0E5SUd0bGVYTmJhVjA3WEc0Z0lDQWdJQ0FnSUhaaGNpQnVaWGRQWW1vZ1BTQndZWEp6WlV0bGVYTW9hMlY1TENCMFpXMXdUMkpxVzJ0bGVWMHNJRzl3ZEdsdmJuTXBPMXh1SUNBZ0lDQWdJQ0J2WW1vZ1BTQjFkR2xzY3k1dFpYSm5aU2h2WW1vc0lHNWxkMDlpYWl3Z2IzQjBhVzl1Y3lrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJSFYwYVd4ekxtTnZiWEJoWTNRb2IySnFLVHRjYm4wN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCMWRHbHNjeUE5SUhKbGNYVnBjbVVvSnk0dmRYUnBiSE1uS1R0Y2JuWmhjaUJtYjNKdFlYUnpJRDBnY21WeGRXbHlaU2duTGk5bWIzSnRZWFJ6SnlrN1hHNWNiblpoY2lCaGNuSmhlVkJ5WldacGVFZGxibVZ5WVhSdmNuTWdQU0I3WEc0Z0lDQWdZbkpoWTJ0bGRITTZJR1oxYm1OMGFXOXVJR0p5WVdOclpYUnpLSEJ5WldacGVDa2dleUF2THlCbGMyeHBiblF0WkdsellXSnNaUzFzYVc1bElHWjFibU10Ym1GdFpTMXRZWFJqYUdsdVoxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2NISmxabWw0SUNzZ0oxdGRKenRjYmlBZ0lDQjlMRnh1SUNBZ0lHbHVaR2xqWlhNNklHWjFibU4wYVc5dUlHbHVaR2xqWlhNb2NISmxabWw0TENCclpYa3BJSHNnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0YkdsdVpTQm1kVzVqTFc1aGJXVXRiV0YwWTJocGJtZGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIQnlaV1pwZUNBcklDZGJKeUFySUd0bGVTQXJJQ2RkSnp0Y2JpQWdJQ0I5TEZ4dUlDQWdJSEpsY0dWaGREb2dablZ1WTNScGIyNGdjbVZ3WldGMEtIQnlaV1pwZUNrZ2V5QXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXNhVzVsSUdaMWJtTXRibUZ0WlMxdFlYUmphR2x1WjF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnY0hKbFptbDRPMXh1SUNBZ0lIMWNibjA3WEc1Y2JuWmhjaUIwYjBsVFR5QTlJRVJoZEdVdWNISnZkRzkwZVhCbExuUnZTVk5QVTNSeWFXNW5PMXh1WEc1MllYSWdaR1ZtWVhWc2RITWdQU0I3WEc0Z0lDQWdaR1ZzYVcxcGRHVnlPaUFuSmljc1hHNGdJQ0FnWlc1amIyUmxPaUIwY25WbExGeHVJQ0FnSUdWdVkyOWtaWEk2SUhWMGFXeHpMbVZ1WTI5a1pTeGNiaUFnSUNCbGJtTnZaR1ZXWVd4MVpYTlBibXg1T2lCbVlXeHpaU3hjYmlBZ0lDQnpaWEpwWVd4cGVtVkVZWFJsT2lCbWRXNWpkR2x2YmlCelpYSnBZV3hwZW1WRVlYUmxLR1JoZEdVcElIc2dMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRiR2x1WlNCbWRXNWpMVzVoYldVdGJXRjBZMmhwYm1kY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSdlNWTlBMbU5oYkd3b1pHRjBaU2s3WEc0Z0lDQWdmU3hjYmlBZ0lDQnphMmx3VG5Wc2JITTZJR1poYkhObExGeHVJQ0FnSUhOMGNtbGpkRTUxYkd4SVlXNWtiR2x1WnpvZ1ptRnNjMlZjYm4wN1hHNWNiblpoY2lCemRISnBibWRwWm5rZ1BTQm1kVzVqZEdsdmJpQnpkSEpwYm1kcFpua29JQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMV3hwYm1VZ1puVnVZeTF1WVcxbExXMWhkR05vYVc1blhHNGdJQ0FnYjJKcVpXTjBMRnh1SUNBZ0lIQnlaV1pwZUN4Y2JpQWdJQ0JuWlc1bGNtRjBaVUZ5Y21GNVVISmxabWw0TEZ4dUlDQWdJSE4wY21samRFNTFiR3hJWVc1a2JHbHVaeXhjYmlBZ0lDQnphMmx3VG5Wc2JITXNYRzRnSUNBZ1pXNWpiMlJsY2l4Y2JpQWdJQ0JtYVd4MFpYSXNYRzRnSUNBZ2MyOXlkQ3hjYmlBZ0lDQmhiR3h2ZDBSdmRITXNYRzRnSUNBZ2MyVnlhV0ZzYVhwbFJHRjBaU3hjYmlBZ0lDQm1iM0p0WVhSMFpYSXNYRzRnSUNBZ1pXNWpiMlJsVm1Gc2RXVnpUMjVzZVZ4dUtTQjdYRzRnSUNBZ2RtRnlJRzlpYWlBOUlHOWlhbVZqZER0Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUdacGJIUmxjaUE5UFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lDQWdJQ0J2WW1vZ1BTQm1hV3gwWlhJb2NISmxabWw0TENCdlltb3BPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9iMkpxSUdsdWMzUmhibU5sYjJZZ1JHRjBaU2tnZTF4dUlDQWdJQ0FnSUNCdlltb2dQU0J6WlhKcFlXeHBlbVZFWVhSbEtHOWlhaWs3WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2h2WW1vZ1BUMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hOMGNtbGpkRTUxYkd4SVlXNWtiR2x1WnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1Z1WTI5a1pYSWdKaVlnSVdWdVkyOWtaVlpoYkhWbGMwOXViSGtnUHlCbGJtTnZaR1Z5S0hCeVpXWnBlQ3dnWkdWbVlYVnNkSE11Wlc1amIyUmxjaWtnT2lCd2NtVm1hWGc3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnZZbW9nUFNBbkp6dGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9kSGx3Wlc5bUlHOWlhaUE5UFQwZ0ozTjBjbWx1WnljZ2ZId2dkSGx3Wlc5bUlHOWlhaUE5UFQwZ0oyNTFiV0psY2ljZ2ZId2dkSGx3Wlc5bUlHOWlhaUE5UFQwZ0oySnZiMnhsWVc0bklIeDhJSFYwYVd4ekxtbHpRblZtWm1WeUtHOWlhaWtwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR1Z1WTI5a1pYSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJyWlhsV1lXeDFaU0E5SUdWdVkyOWtaVlpoYkhWbGMwOXViSGtnUHlCd2NtVm1hWGdnT2lCbGJtTnZaR1Z5S0hCeVpXWnBlQ3dnWkdWbVlYVnNkSE11Wlc1amIyUmxjaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1cyWnZjbTFoZEhSbGNpaHJaWGxXWVd4MVpTa2dLeUFuUFNjZ0t5Qm1iM0p0WVhSMFpYSW9aVzVqYjJSbGNpaHZZbW9zSUdSbFptRjFiSFJ6TG1WdVkyOWtaWElwS1YwN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGdG1iM0p0WVhSMFpYSW9jSEpsWm1sNEtTQXJJQ2M5SnlBcklHWnZjbTFoZEhSbGNpaFRkSEpwYm1jb2IySnFLU2xkTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFpoY2lCMllXeDFaWE1nUFNCYlhUdGNibHh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdiMkpxSUQwOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZG1Gc2RXVnpPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIWmhjaUJ2WW1wTFpYbHpPMXh1SUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHWnBiSFJsY2lrcElIdGNiaUFnSUNBZ0lDQWdiMkpxUzJWNWN5QTlJR1pwYkhSbGNqdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCMllYSWdhMlY1Y3lBOUlFOWlhbVZqZEM1clpYbHpLRzlpYWlrN1hHNGdJQ0FnSUNBZ0lHOWlha3RsZVhNZ1BTQnpiM0owSUQ4Z2EyVjVjeTV6YjNKMEtITnZjblFwSURvZ2EyVjVjenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQm1iM0lnS0haaGNpQnBJRDBnTURzZ2FTQThJRzlpYWt0bGVYTXViR1Z1WjNSb095QXJLMmtwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJR3RsZVNBOUlHOWlha3RsZVhOYmFWMDdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tITnJhWEJPZFd4c2N5QW1KaUJ2WW1wYmEyVjVYU0E5UFQwZ2JuVnNiQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNodlltb3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlhNZ1BTQjJZV3gxWlhNdVkyOXVZMkYwS0hOMGNtbHVaMmxtZVNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdlltcGJhMlY1WFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpXNWxjbUYwWlVGeWNtRjVVSEpsWm1sNEtIQnlaV1pwZUN3Z2EyVjVLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc1bGNtRjBaVUZ5Y21GNVVISmxabWw0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMGNtbGpkRTUxYkd4SVlXNWtiR2x1Wnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemEybHdUblZzYkhNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJsY2l4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWFXeDBaWElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzI5eWRDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhiR3h2ZDBSdmRITXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZ5YVdGc2FYcGxSR0YwWlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSnRZWFIwWlhJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJsVm1Gc2RXVnpUMjVzZVZ4dUlDQWdJQ0FnSUNBZ0lDQWdLU2s3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlhNZ1BTQjJZV3gxWlhNdVkyOXVZMkYwS0hOMGNtbHVaMmxtZVNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdlltcGJhMlY1WFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtVm1hWGdnS3lBb1lXeHNiM2RFYjNSeklEOGdKeTRuSUNzZ2EyVjVJRG9nSjFzbklDc2dhMlY1SUNzZ0oxMG5LU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc1bGNtRjBaVUZ5Y21GNVVISmxabWw0TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMGNtbGpkRTUxYkd4SVlXNWtiR2x1Wnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemEybHdUblZzYkhNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJsY2l4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWFXeDBaWElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzI5eWRDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhiR3h2ZDBSdmRITXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZ5YVdGc2FYcGxSR0YwWlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSnRZWFIwWlhJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJsVm1Gc2RXVnpUMjVzZVZ4dUlDQWdJQ0FnSUNBZ0lDQWdLU2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdkbUZzZFdWek8xeHVmVHRjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlBb2IySnFaV04wTENCdmNIUnpLU0I3WEc0Z0lDQWdkbUZ5SUc5aWFpQTlJRzlpYW1WamREdGNiaUFnSUNCMllYSWdiM0IwYVc5dWN5QTlJRzl3ZEhNZ1B5QjFkR2xzY3k1aGMzTnBaMjRvZTMwc0lHOXdkSE1wSURvZ2UzMDdYRzVjYmlBZ0lDQnBaaUFvYjNCMGFXOXVjeTVsYm1OdlpHVnlJQ0U5UFNCdWRXeHNJQ1ltSUc5d2RHbHZibk11Wlc1amIyUmxjaUFoUFQwZ2RXNWtaV1pwYm1Wa0lDWW1JSFI1Y0dWdlppQnZjSFJwYjI1ekxtVnVZMjlrWlhJZ0lUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lGUjVjR1ZGY25KdmNpZ25SVzVqYjJSbGNpQm9ZWE1nZEc4Z1ltVWdZU0JtZFc1amRHbHZiaTRuS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IyWVhJZ1pHVnNhVzFwZEdWeUlEMGdkSGx3Wlc5bUlHOXdkR2x2Ym5NdVpHVnNhVzFwZEdWeUlEMDlQU0FuZFc1a1pXWnBibVZrSnlBL0lHUmxabUYxYkhSekxtUmxiR2x0YVhSbGNpQTZJRzl3ZEdsdmJuTXVaR1ZzYVcxcGRHVnlPMXh1SUNBZ0lIWmhjaUJ6ZEhKcFkzUk9kV3hzU0dGdVpHeHBibWNnUFNCMGVYQmxiMllnYjNCMGFXOXVjeTV6ZEhKcFkzUk9kV3hzU0dGdVpHeHBibWNnUFQwOUlDZGliMjlzWldGdUp5QS9JRzl3ZEdsdmJuTXVjM1J5YVdOMFRuVnNiRWhoYm1Sc2FXNW5JRG9nWkdWbVlYVnNkSE11YzNSeWFXTjBUblZzYkVoaGJtUnNhVzVuTzF4dUlDQWdJSFpoY2lCemEybHdUblZzYkhNZ1BTQjBlWEJsYjJZZ2IzQjBhVzl1Y3k1emEybHdUblZzYkhNZ1BUMDlJQ2RpYjI5c1pXRnVKeUEvSUc5d2RHbHZibk11YzJ0cGNFNTFiR3h6SURvZ1pHVm1ZWFZzZEhNdWMydHBjRTUxYkd4ek8xeHVJQ0FnSUhaaGNpQmxibU52WkdVZ1BTQjBlWEJsYjJZZ2IzQjBhVzl1Y3k1bGJtTnZaR1VnUFQwOUlDZGliMjlzWldGdUp5QS9JRzl3ZEdsdmJuTXVaVzVqYjJSbElEb2daR1ZtWVhWc2RITXVaVzVqYjJSbE8xeHVJQ0FnSUhaaGNpQmxibU52WkdWeUlEMGdkSGx3Wlc5bUlHOXdkR2x2Ym5NdVpXNWpiMlJsY2lBOVBUMGdKMloxYm1OMGFXOXVKeUEvSUc5d2RHbHZibk11Wlc1amIyUmxjaUE2SUdSbFptRjFiSFJ6TG1WdVkyOWtaWEk3WEc0Z0lDQWdkbUZ5SUhOdmNuUWdQU0IwZVhCbGIyWWdiM0IwYVc5dWN5NXpiM0owSUQwOVBTQW5ablZ1WTNScGIyNG5JRDhnYjNCMGFXOXVjeTV6YjNKMElEb2diblZzYkR0Y2JpQWdJQ0IyWVhJZ1lXeHNiM2RFYjNSeklEMGdkSGx3Wlc5bUlHOXdkR2x2Ym5NdVlXeHNiM2RFYjNSeklEMDlQU0FuZFc1a1pXWnBibVZrSnlBL0lHWmhiSE5sSURvZ2IzQjBhVzl1Y3k1aGJHeHZkMFJ2ZEhNN1hHNGdJQ0FnZG1GeUlITmxjbWxoYkdsNlpVUmhkR1VnUFNCMGVYQmxiMllnYjNCMGFXOXVjeTV6WlhKcFlXeHBlbVZFWVhSbElEMDlQU0FuWm5WdVkzUnBiMjRuSUQ4Z2IzQjBhVzl1Y3k1elpYSnBZV3hwZW1WRVlYUmxJRG9nWkdWbVlYVnNkSE11YzJWeWFXRnNhWHBsUkdGMFpUdGNiaUFnSUNCMllYSWdaVzVqYjJSbFZtRnNkV1Z6VDI1c2VTQTlJSFI1Y0dWdlppQnZjSFJwYjI1ekxtVnVZMjlrWlZaaGJIVmxjMDl1YkhrZ1BUMDlJQ2RpYjI5c1pXRnVKeUEvSUc5d2RHbHZibk11Wlc1amIyUmxWbUZzZFdWelQyNXNlU0E2SUdSbFptRjFiSFJ6TG1WdVkyOWtaVlpoYkhWbGMwOXViSGs3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJ2Y0hScGIyNXpMbVp2Y20xaGRDQTlQVDBnSjNWdVpHVm1hVzVsWkNjcElIdGNiaUFnSUNBZ0lDQWdiM0IwYVc5dWN5NW1iM0p0WVhRZ1BTQm1iM0p0WVhSeld5ZGtaV1poZFd4MEoxMDdYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDZ2hUMkpxWldOMExuQnliM1J2ZEhsd1pTNW9ZWE5QZDI1UWNtOXdaWEowZVM1allXeHNLR1p2Y20xaGRITXVabTl5YldGMGRHVnljeXdnYjNCMGFXOXVjeTVtYjNKdFlYUXBLU0I3WEc0Z0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCVWVYQmxSWEp5YjNJb0oxVnVhMjV2ZDI0Z1ptOXliV0YwSUc5d2RHbHZiaUJ3Y205MmFXUmxaQzRuS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdkbUZ5SUdadmNtMWhkSFJsY2lBOUlHWnZjbTFoZEhNdVptOXliV0YwZEdWeWMxdHZjSFJwYjI1ekxtWnZjbTFoZEYwN1hHNGdJQ0FnZG1GeUlHOWlha3RsZVhNN1hHNGdJQ0FnZG1GeUlHWnBiSFJsY2p0Y2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ2IzQjBhVzl1Y3k1bWFXeDBaWElnUFQwOUlDZG1kVzVqZEdsdmJpY3BJSHRjYmlBZ0lDQWdJQ0FnWm1sc2RHVnlJRDBnYjNCMGFXOXVjeTVtYVd4MFpYSTdYRzRnSUNBZ0lDQWdJRzlpYWlBOUlHWnBiSFJsY2lnbkp5d2diMkpxS1R0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29iM0IwYVc5dWN5NW1hV3gwWlhJcEtTQjdYRzRnSUNBZ0lDQWdJR1pwYkhSbGNpQTlJRzl3ZEdsdmJuTXVabWxzZEdWeU8xeHVJQ0FnSUNBZ0lDQnZZbXBMWlhseklEMGdabWxzZEdWeU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhaaGNpQnJaWGx6SUQwZ1cxMDdYRzVjYmlBZ0lDQnBaaUFvZEhsd1pXOW1JRzlpYWlBaFBUMGdKMjlpYW1WamRDY2dmSHdnYjJKcUlEMDlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQW5KenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQjJZWElnWVhKeVlYbEdiM0p0WVhRN1hHNGdJQ0FnYVdZZ0tHOXdkR2x2Ym5NdVlYSnlZWGxHYjNKdFlYUWdhVzRnWVhKeVlYbFFjbVZtYVhoSFpXNWxjbUYwYjNKektTQjdYRzRnSUNBZ0lDQWdJR0Z5Y21GNVJtOXliV0YwSUQwZ2IzQjBhVzl1Y3k1aGNuSmhlVVp2Y20xaGREdGNiaUFnSUNCOUlHVnNjMlVnYVdZZ0tDZHBibVJwWTJWekp5QnBiaUJ2Y0hScGIyNXpLU0I3WEc0Z0lDQWdJQ0FnSUdGeWNtRjVSbTl5YldGMElEMGdiM0IwYVc5dWN5NXBibVJwWTJWeklEOGdKMmx1WkdsalpYTW5JRG9nSjNKbGNHVmhkQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdZWEp5WVhsR2IzSnRZWFFnUFNBbmFXNWthV05sY3ljN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZG1GeUlHZGxibVZ5WVhSbFFYSnlZWGxRY21WbWFYZ2dQU0JoY25KaGVWQnlaV1pwZUVkbGJtVnlZWFJ2Y25OYllYSnlZWGxHYjNKdFlYUmRPMXh1WEc0Z0lDQWdhV1lnS0NGdlltcExaWGx6S1NCN1hHNGdJQ0FnSUNBZ0lHOWlha3RsZVhNZ1BTQlBZbXBsWTNRdWEyVjVjeWh2WW1vcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaHpiM0owS1NCN1hHNGdJQ0FnSUNBZ0lHOWlha3RsZVhNdWMyOXlkQ2h6YjNKMEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCbWIzSWdLSFpoY2lCcElEMGdNRHNnYVNBOElHOWlha3RsZVhNdWJHVnVaM1JvT3lBcksya3BJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHdGxlU0E5SUc5aWFrdGxlWE5iYVYwN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hOcmFYQk9kV3hzY3lBbUppQnZZbXBiYTJWNVhTQTlQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JyWlhseklEMGdhMlY1Y3k1amIyNWpZWFFvYzNSeWFXNW5hV1o1S0Z4dUlDQWdJQ0FnSUNBZ0lDQWdiMkpxVzJ0bGVWMHNYRzRnSUNBZ0lDQWdJQ0FnSUNCclpYa3NYRzRnSUNBZ0lDQWdJQ0FnSUNCblpXNWxjbUYwWlVGeWNtRjVVSEpsWm1sNExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSeWFXTjBUblZzYkVoaGJtUnNhVzVuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjMnRwY0U1MWJHeHpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJsSUQ4Z1pXNWpiMlJsY2lBNklHNTFiR3dzWEc0Z0lDQWdJQ0FnSUNBZ0lDQm1hV3gwWlhJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6YjNKMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnWVd4c2IzZEViM1J6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjMlZ5YVdGc2FYcGxSR0YwWlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGRIUmxjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnVZMjlrWlZaaGJIVmxjMDl1YkhsY2JpQWdJQ0FnSUNBZ0tTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RtRnlJR3B2YVc1bFpDQTlJR3RsZVhNdWFtOXBiaWhrWld4cGJXbDBaWElwTzF4dUlDQWdJSFpoY2lCd2NtVm1hWGdnUFNCdmNIUnBiMjV6TG1Ga1pGRjFaWEo1VUhKbFptbDRJRDA5UFNCMGNuVmxJRDhnSno4bklEb2dKeWM3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdhbTlwYm1Wa0xteGxibWQwYUNBK0lEQWdQeUJ3Y21WbWFYZ2dLeUJxYjJsdVpXUWdPaUFuSnp0Y2JuMDdYRzRpTENJbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQm9ZWE1nUFNCUFltcGxZM1F1Y0hKdmRHOTBlWEJsTG1oaGMwOTNibEJ5YjNCbGNuUjVPMXh1WEc1MllYSWdhR1Y0VkdGaWJHVWdQU0FvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUhaaGNpQmhjbkpoZVNBOUlGdGRPMXh1SUNBZ0lHWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2dNalUyT3lBcksya3BJSHRjYmlBZ0lDQWdJQ0FnWVhKeVlYa3VjSFZ6YUNnbkpTY2dLeUFvS0drZ1BDQXhOaUEvSUNjd0p5QTZJQ2NuS1NBcklHa3VkRzlUZEhKcGJtY29NVFlwS1M1MGIxVndjR1Z5UTJGelpTZ3BLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1lYSnlZWGs3WEc1OUtDa3BPMXh1WEc1MllYSWdZMjl0Y0dGamRGRjFaWFZsSUQwZ1puVnVZM1JwYjI0Z1kyOXRjR0ZqZEZGMVpYVmxLSEYxWlhWbEtTQjdYRzRnSUNBZ2RtRnlJRzlpYWp0Y2JseHVJQ0FnSUhkb2FXeGxJQ2h4ZFdWMVpTNXNaVzVuZEdncElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUdsMFpXMGdQU0J4ZFdWMVpTNXdiM0FvS1R0Y2JpQWdJQ0FnSUNBZ2IySnFJRDBnYVhSbGJTNXZZbXBiYVhSbGJTNXdjbTl3WFR0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaHZZbW9wS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyOXRjR0ZqZEdWa0lEMGdXMTA3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lBb2RtRnlJR29nUFNBd095QnFJRHdnYjJKcUxteGxibWQwYURzZ0t5dHFLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCdlltcGJhbDBnSVQwOUlDZDFibVJsWm1sdVpXUW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiWEJoWTNSbFpDNXdkWE5vS0c5aWFsdHFYU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0TG05aWFsdHBkR1Z0TG5CeWIzQmRJRDBnWTI5dGNHRmpkR1ZrTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRzlpYWp0Y2JuMDdYRzVjYm1WNGNHOXlkSE11WVhKeVlYbFViMDlpYW1WamRDQTlJR1oxYm1OMGFXOXVJR0Z5Y21GNVZHOVBZbXBsWTNRb2MyOTFjbU5sTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnZG1GeUlHOWlhaUE5SUc5d2RHbHZibk1nSmlZZ2IzQjBhVzl1Y3k1d2JHRnBiazlpYW1WamRITWdQeUJQWW1wbFkzUXVZM0psWVhSbEtHNTFiR3dwSURvZ2UzMDdYRzRnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQnpiM1Z5WTJVdWJHVnVaM1JvT3lBcksya3BJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCemIzVnlZMlZiYVYwZ0lUMDlJQ2QxYm1SbFptbHVaV1FuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2WW1wYmFWMGdQU0J6YjNWeVkyVmJhVjA3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdiMkpxTzF4dWZUdGNibHh1Wlhod2IzSjBjeTV0WlhKblpTQTlJR1oxYm1OMGFXOXVJRzFsY21kbEtIUmhjbWRsZEN3Z2MyOTFjbU5sTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnYVdZZ0tDRnpiM1Z5WTJVcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmhjbWRsZER0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUhOdmRYSmpaU0FoUFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29kR0Z5WjJWMEtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwTG5CMWMyZ29jMjkxY21ObEtUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2gwZVhCbGIyWWdkR0Z5WjJWMElEMDlQU0FuYjJKcVpXTjBKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c5d2RHbHZibk11Y0d4aGFXNVBZbXBsWTNSeklIeDhJRzl3ZEdsdmJuTXVZV3hzYjNkUWNtOTBiM1I1Y0dWeklIeDhJQ0ZvWVhNdVkyRnNiQ2hQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMQ0J6YjNWeVkyVXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdGeVoyVjBXM052ZFhKalpWMGdQU0IwY25WbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGdDBZWEpuWlhRc0lITnZkWEpqWlYwN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR0Z5WjJWME8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ2RHRnlaMlYwSUNFOVBTQW5iMkpxWldOMEp5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdXM1JoY21kbGRGMHVZMjl1WTJGMEtITnZkWEpqWlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZG1GeUlHMWxjbWRsVkdGeVoyVjBJRDBnZEdGeVoyVjBPMXh1SUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtIUmhjbWRsZENrZ0ppWWdJVUZ5Y21GNUxtbHpRWEp5WVhrb2MyOTFjbU5sS1NrZ2UxeHVJQ0FnSUNBZ0lDQnRaWEpuWlZSaGNtZGxkQ0E5SUdWNGNHOXlkSE11WVhKeVlYbFViMDlpYW1WamRDaDBZWEpuWlhRc0lHOXdkR2x2Ym5NcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0hSaGNtZGxkQ2tnSmlZZ1FYSnlZWGt1YVhOQmNuSmhlU2h6YjNWeVkyVXBLU0I3WEc0Z0lDQWdJQ0FnSUhOdmRYSmpaUzVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2hwZEdWdExDQnBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYUdGekxtTmhiR3dvZEdGeVoyVjBMQ0JwS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwWVhKblpYUmJhVjBnSmlZZ2RIbHdaVzltSUhSaGNtZGxkRnRwWFNBOVBUMGdKMjlpYW1WamRDY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwVzJsZElEMGdaWGh3YjNKMGN5NXRaWEpuWlNoMFlYSm5aWFJiYVYwc0lHbDBaVzBzSUc5d2RHbHZibk1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjbWRsZEM1d2RYTm9LR2wwWlcwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdGeVoyVjBXMmxkSUQwZ2FYUmxiVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwWVhKblpYUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUU5aWFtVmpkQzVyWlhsektITnZkWEpqWlNrdWNtVmtkV05sS0daMWJtTjBhVzl1SUNoaFkyTXNJR3RsZVNrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnZG1Gc2RXVWdQU0J6YjNWeVkyVmJhMlY1WFR0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvYUdGekxtTmhiR3dvWVdOakxDQnJaWGtwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoWTJOYmEyVjVYU0E5SUdWNGNHOXlkSE11YldWeVoyVW9ZV05qVzJ0bGVWMHNJSFpoYkhWbExDQnZjSFJwYjI1ektUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdGalkxdHJaWGxkSUQwZ2RtRnNkV1U3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGall6dGNiaUFnSUNCOUxDQnRaWEpuWlZSaGNtZGxkQ2s3WEc1OU8xeHVYRzVsZUhCdmNuUnpMbUZ6YzJsbmJpQTlJR1oxYm1OMGFXOXVJR0Z6YzJsbmJsTnBibWRzWlZOdmRYSmpaU2gwWVhKblpYUXNJSE52ZFhKalpTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCUFltcGxZM1F1YTJWNWN5aHpiM1Z5WTJVcExuSmxaSFZqWlNobWRXNWpkR2x2YmlBb1lXTmpMQ0JyWlhrcElIdGNiaUFnSUNBZ0lDQWdZV05qVzJ0bGVWMGdQU0J6YjNWeVkyVmJhMlY1WFR0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGall6dGNiaUFnSUNCOUxDQjBZWEpuWlhRcE8xeHVmVHRjYmx4dVpYaHdiM0owY3k1a1pXTnZaR1VnUFNCbWRXNWpkR2x2YmlBb2MzUnlLU0I3WEc0Z0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdSbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENoemRISXVjbVZ3YkdGalpTZ3ZYRndyTDJjc0lDY2dKeWtwTzF4dUlDQWdJSDBnWTJGMFkyZ2dLR1VwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMGNqdGNiaUFnSUNCOVhHNTlPMXh1WEc1bGVIQnZjblJ6TG1WdVkyOWtaU0E5SUdaMWJtTjBhVzl1SUdWdVkyOWtaU2h6ZEhJcElIdGNiaUFnSUNBdkx5QlVhR2x6SUdOdlpHVWdkMkZ6SUc5eWFXZHBibUZzYkhrZ2QzSnBkSFJsYmlCaWVTQkNjbWxoYmlCWGFHbDBaU0FvYlhOalpHVjRLU0JtYjNJZ2RHaGxJR2x2TG1weklHTnZjbVVnY1hWbGNubHpkSEpwYm1jZ2JHbGljbUZ5ZVM1Y2JpQWdJQ0F2THlCSmRDQm9ZWE1nWW1WbGJpQmhaR0Z3ZEdWa0lHaGxjbVVnWm05eUlITjBjbWxqZEdWeUlHRmthR1Z5Wlc1alpTQjBieUJTUmtNZ016azRObHh1SUNBZ0lHbG1JQ2h6ZEhJdWJHVnVaM1JvSUQwOVBTQXdLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZEhJN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZG1GeUlITjBjbWx1WnlBOUlIUjVjR1Z2WmlCemRISWdQVDA5SUNkemRISnBibWNuSUQ4Z2MzUnlJRG9nVTNSeWFXNW5LSE4wY2lrN1hHNWNiaUFnSUNCMllYSWdiM1YwSUQwZ0p5YzdYRzRnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQnpkSEpwYm1jdWJHVnVaM1JvT3lBcksya3BJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHTWdQU0J6ZEhKcGJtY3VZMmhoY2tOdlpHVkJkQ2hwS1R0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpJRDA5UFNBd2VESkVJQzh2SUMxY2JpQWdJQ0FnSUNBZ0lDQWdJSHg4SUdNZ1BUMDlJREI0TWtVZ0x5OGdMbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZId2dZeUE5UFQwZ01IZzFSaUF2THlCZlhHNGdJQ0FnSUNBZ0lDQWdJQ0I4ZkNCaklEMDlQU0F3ZURkRklDOHZJSDVjYmlBZ0lDQWdJQ0FnSUNBZ0lIeDhJQ2hqSUQ0OUlEQjRNekFnSmlZZ1l5QThQU0F3ZURNNUtTQXZMeUF3TFRsY2JpQWdJQ0FnSUNBZ0lDQWdJSHg4SUNoaklENDlJREI0TkRFZ0ppWWdZeUE4UFNBd2VEVkJLU0F2THlCaExYcGNiaUFnSUNBZ0lDQWdJQ0FnSUh4OElDaGpJRDQ5SURCNE5qRWdKaVlnWXlBOFBTQXdlRGRCS1NBdkx5QkJMVnBjYmlBZ0lDQWdJQ0FnS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdjM1J5YVc1bkxtTm9ZWEpCZENocEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0dNZ1BDQXdlRGd3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ1BTQnZkWFFnS3lCb1pYaFVZV0pzWlZ0alhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0dNZ1BDQXdlRGd3TUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElEMGdiM1YwSUNzZ0tHaGxlRlJoWW14bFd6QjRRekFnZkNBb1l5QStQaUEyS1YwZ0t5Qm9aWGhVWVdKc1pWc3dlRGd3SUh3Z0tHTWdKaUF3ZUROR0tWMHBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1l5QThJREI0UkRnd01DQjhmQ0JqSUQ0OUlEQjRSVEF3TUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElEMGdiM1YwSUNzZ0tHaGxlRlJoWW14bFd6QjRSVEFnZkNBb1l5QStQaUF4TWlsZElDc2dhR1Y0VkdGaWJHVmJNSGc0TUNCOElDZ29ZeUErUGlBMktTQW1JREI0TTBZcFhTQXJJR2hsZUZSaFlteGxXekI0T0RBZ2ZDQW9ZeUFtSURCNE0wWXBYU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwYVc1MVpUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdrZ0t6MGdNVHRjYmlBZ0lDQWdJQ0FnWXlBOUlEQjRNVEF3TURBZ0t5QW9LQ2hqSUNZZ01IZ3pSa1lwSUR3OElERXdLU0I4SUNoemRISnBibWN1WTJoaGNrTnZaR1ZCZENocEtTQW1JREI0TTBaR0tTazdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQm9aWGhVWVdKc1pWc3dlRVl3SUh3Z0tHTWdQajRnTVRncFhWeHVJQ0FnSUNBZ0lDQWdJQ0FnS3lCb1pYaFVZV0pzWlZzd2VEZ3dJSHdnS0NoaklENCtJREV5S1NBbUlEQjRNMFlwWFZ4dUlDQWdJQ0FnSUNBZ0lDQWdLeUJvWlhoVVlXSnNaVnN3ZURnd0lId2dLQ2hqSUQ0K0lEWXBJQ1lnTUhnelJpbGRYRzRnSUNBZ0lDQWdJQ0FnSUNBcklHaGxlRlJoWW14bFd6QjRPREFnZkNBb1l5QW1JREI0TTBZcFhUdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnYjNWME8xeHVmVHRjYmx4dVpYaHdiM0owY3k1amIyMXdZV04wSUQwZ1puVnVZM1JwYjI0Z1kyOXRjR0ZqZENoMllXeDFaU2tnZTF4dUlDQWdJSFpoY2lCeGRXVjFaU0E5SUZ0N0lHOWlham9nZXlCdk9pQjJZV3gxWlNCOUxDQndjbTl3T2lBbmJ5Y2dmVjA3WEc0Z0lDQWdkbUZ5SUhKbFpuTWdQU0JiWFR0Y2JseHVJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z2NYVmxkV1V1YkdWdVozUm9PeUFySzJrcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUdsMFpXMGdQU0J4ZFdWMVpWdHBYVHRjYmlBZ0lDQWdJQ0FnZG1GeUlHOWlhaUE5SUdsMFpXMHViMkpxVzJsMFpXMHVjSEp2Y0YwN1hHNWNiaUFnSUNBZ0lDQWdkbUZ5SUd0bGVYTWdQU0JQWW1wbFkzUXVhMlY1Y3lodlltb3BPMXh1SUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUJxSUQwZ01Ec2dhaUE4SUd0bGVYTXViR1Z1WjNSb095QXJLMm9wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCclpYa2dQU0JyWlhselcycGRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJSFpoYkNBOUlHOWlhbHRyWlhsZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMllXd2dQVDA5SUNkdlltcGxZM1FuSUNZbUlIWmhiQ0FoUFQwZ2JuVnNiQ0FtSmlCeVpXWnpMbWx1WkdWNFQyWW9kbUZzS1NBOVBUMGdMVEVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeGRXVjFaUzV3ZFhOb0tIc2diMkpxT2lCdlltb3NJSEJ5YjNBNklHdGxlU0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpXWnpMbkIxYzJnb2RtRnNLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCamIyMXdZV04wVVhWbGRXVW9jWFZsZFdVcE8xeHVmVHRjYmx4dVpYaHdiM0owY3k1cGMxSmxaMFY0Y0NBOUlHWjFibU4wYVc5dUlHbHpVbVZuUlhod0tHOWlhaWtnZTF4dUlDQWdJSEpsZEhWeWJpQlBZbXBsWTNRdWNISnZkRzkwZVhCbExuUnZVM1J5YVc1bkxtTmhiR3dvYjJKcUtTQTlQVDBnSjF0dlltcGxZM1FnVW1WblJYaHdYU2M3WEc1OU8xeHVYRzVsZUhCdmNuUnpMbWx6UW5WbVptVnlJRDBnWm5WdVkzUnBiMjRnYVhOQ2RXWm1aWElvYjJKcUtTQjdYRzRnSUNBZ2FXWWdLRzlpYWlBOVBUMGdiblZzYkNCOGZDQjBlWEJsYjJZZ2IySnFJRDA5UFNBbmRXNWtaV1pwYm1Wa0p5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJQ0VoS0c5aWFpNWpiMjV6ZEhKMVkzUnZjaUFtSmlCdlltb3VZMjl1YzNSeWRXTjBiM0l1YVhOQ2RXWm1aWElnSmlZZ2IySnFMbU52Ym5OMGNuVmpkRzl5TG1selFuVm1abVZ5S0c5aWFpa3BPMXh1ZlR0Y2JpSmRmUT09XG4iXX0=
