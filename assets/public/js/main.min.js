!function e(t,r,n){function i(o,a){if(!r[o]){if(!t[o]){var c="function"==typeof require&&require;if(!a&&c)return c(o,!0);if(s)return s(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var u=r[o]={exports:{}};t[o][0].call(u.exports,function(e){var r=t[o][1][e];return i(r||e)},u,u.exports,e,t,r,n)}return r[o].exports}for(var s="function"==typeof require&&require,o=0;o<n.length;o++)i(n[o]);return i}({1:[function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.header=t,this.trigger=t.querySelector(".site-header__nav-trigger"),this.wrapper=t.querySelector(".site-header__wrapper"),this.dropDown=t.querySelector(".drop__trigger"),this.trigger.addEventListener("click",function(e){r.toggleVisibility()}),this.dropDown.addEventListener("click",function(e){e.preventDefault()})}return n(e,[{key:"toggleVisibility",value:function(){this.wrapper.classList.toggle("site-header__wrapper--hide")}}]),e}();t.exports=i},{}],2:[function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(r,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),s=n(e("axios")),o=n(e("qs")),a=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.footer=document.querySelector("footer.site-footer"),this.wait=!1,this.page=1,this.date=vars.postDate,this.id=vars.postID,this.select={},this.card_scroll=document.querySelector(".card__scroll"),this.card_end=document.querySelector(".card__end"),window.addEventListener("scroll",function(){document.body.scrollHeight-document.documentElement.scrollTop-(window.innerHeight+r.footer.offsetHeight)<=2*window.innerHeight&&!r.wait&&(r.addPost(),r.wait=!0)})}return i(e,[{key:"addPost",value:function(){var e=this,t={action:"publication_load_more",post_date:this.date,post_id:this.id,page:this.page};s.default.post(ajaxurl,o.default.stringify(t)).then(function(t){t.data.data.posts.forEach(function(t){e.container.insertAdjacentHTML("beforeend",t.content)}),e.page+=1,e.wait=!1,0===t.data.data.posts.length&&(e.card_scroll.classList.add("card--hide"),e.card_end.classList.remove("card--hide"))}).catch(function(){e.card_scroll.classList.add("card--hide"),e.card_end.classList.remove("card--hide")})}}]),e}();r.default=a},{axios:9,qs:37}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.buttons=t.querySelectorAll(".button__anchor"),this.sections_container=t.querySelector(".member__about"),this.sections=t.querySelectorAll(".section__post"),this.buttons.forEach(function(e){e.addEventListener("click",function(e){var t=Array.prototype.indexOf.call(r.buttons,e.currentTarget);r.scrollTo(t)})})}return n(e,[{key:"scrollTo",value:function(e){var t=this.sections[e].getBoundingClientRect().top;this.sections_container.scrollTo({top:t-140,behavior:"smooth"})}}]),e}();r.default=i},{}],4:[function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(r,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),s=n(e("axios")),o=n(e("qs")),a=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.header_list=t.querySelector(".header__list"),this.header_items=t.querySelectorAll(".header__item button"),this.header_prev=t.querySelector(".header__nav--prev"),this.header_next=t.querySelector(".header__nav--next"),this.header_index=0,this.card_loading=document.querySelector(".publications__loading"),window.innerWidth>=900?(this.header_offset=5,this.header_offsetWidth=this.header_list.parentNode.offsetWidth/5):(this.header_offset=1,this.header_offsetWidth=this.header_list.parentNode.offsetWidth),this.filter={},this.posts_container=t.querySelector(".publications__posts"),this.header_items.forEach(function(e,t){e.classList.contains("item--active")&&(r.header_index=t),e.addEventListener("click",function(e){var t=r.header_index!==e.currentTarget.dataset.index;r.updateHeader(parseInt(e.currentTarget.dataset.index,10)),t&&(r.setFilter(),r.fetchPublications())})}),this.header_next.addEventListener("click",function(){r.header_index<r.header_items.length-1&&r.updateHeader(r.header_index+1),r.setFilter(),r.fetchPublications()}),this.header_prev.addEventListener("click",function(){r.header_index>=1&&r.updateHeader(r.header_index-1),r.setFilter(),r.fetchPublications()})}return i(e,[{key:"updateHeader",value:function(e){if(this.header_items[this.header_index].classList.remove("item--active"),this.header_index=e,this.header_items[this.header_index].classList.add("item--active"),this.header_index<=0?this.header_prev.classList.add("header__nav--disable"):this.header_index>=this.header_items.length-1?this.header_next.classList.add("header__nav--disable"):(this.header_next.classList.remove("header__nav--disable"),this.header_prev.classList.remove("header__nav--disable")),this.header_index-this.header_offset>=0){var t=(this.header_index-this.header_offset+1)*this.header_offsetWidth;this.header_list.style.transform="translateX(-"+t+"px)"}else this.header_list.style.transform="translateX(0px)"}},{key:"setFilter",value:function(){this.filter={slug:this.header_items[this.header_index].dataset.slug,taxonomy:this.header_items[this.header_index].dataset.taxonomy}}},{key:"fetchPublications",value:function(){var e=this,t={action:"fetch_publications",filter:this.filter};this.posts_container.innerHTML="",this.card_loading.classList.remove("card--hide"),s.default.post(ajaxurl,o.default.stringify(t)).then(function(t){e.card_loading.classList.add("card--hide"),e.posts_container.insertAdjacentHTML("beforeend",t.data.data.posts)})}}]),e}();r.default=a},{axios:9,qs:37}],5:[function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),s=n(e("axios")),o=n(e("qs")),a=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.container=t,this.results_buttons=t.querySelectorAll(".header__switch"),this.results_count=t.querySelectorAll(".header__button span"),this.results_tabs=t.querySelectorAll(".list__container"),this.results_container=t.querySelectorAll(".list"),this.results_selected=t.querySelector(".results__selected-filters"),this.results_selected_container=t.querySelector(".selected__container"),this.results_selected_delete=t.querySelector(".selected__delete"),this.results_selected_model=t.querySelector(".item--model"),this.results_selected_items=[],this.filters_visibility=t.querySelector(".header__button--filter"),this.filters_container=t.querySelector(".results__filters"),this.filters=t.querySelectorAll(".filter"),this.containerToFix=t.querySelectorAll(".taxonomy-fix"),this.cards_loading=t.querySelectorAll(".card--loading"),this.cards_no_results=t.querySelectorAll(".card--no-result"),this.selected_tab=0,this.selected_filters=[],this.available_filters=[],this.results_buttons.forEach(function(e){e.addEventListener("click",function(e){r.setTabs(e.currentTarget.dataset.index)})}),this.filters_visibility.addEventListener("click",function(){r.filters_container.classList.toggle("results__filters--active")}),this.containerToFix.forEach(function(e){var t=e.querySelector("li").getBoundingClientRect().width;e.style.width=2*t+"px"}),this.filters.forEach(function(e){e.addEventListener("click",function(e){r.toggleFilter(e.currentTarget),r.search()})}),this.results_selected_delete.addEventListener("click",function(){r.clearFilter()})}return i(e,[{key:"setTabs",value:function(e){this.selected_tab!==e&&(this.results_tabs[this.selected_tab].classList.remove("list__container--active"),this.results_buttons[this.selected_tab].classList.remove("header__button--active"),this.results_tabs[e].classList.add("list__container--active"),this.results_buttons[e].classList.add("header__button--active"),this.selected_tab=e)}},{key:"toggleFilter",value:function(e){var t={slug:e.dataset.slug,taxonomy:e.dataset.taxonomy,name:e.dataset.name};e.classList.contains("filter--active")?(this.removeFilter(t),e.classList.remove("filter--active")):(this.selected_filters.push(t),this.addFilter(t),e.classList.add("filter--active"))}},{key:"addFilter",value:function(e){var t=this,r=this.results_selected_model.cloneNode(!0);r.querySelector(".item__label").textContent=e.name,r.dataset.slug=e.slug,r.classList.remove("item--model"),this.results_selected_container.appendChild(r),this.results_selected_items.push(r),r.querySelector(".item__delete").addEventListener("click",function(e){var r={slug:e.currentTarget.parentNode.dataset.slug,taxonomy:e.currentTarget.parentNode.dataset.taxonomy,name:e.currentTarget.parentNode.dataset.name};t.removeFilter(r),t.search()}),this.setSelectedVisibility()}},{key:"removeFilter",value:function(e){document.querySelector(".selected__item[data-slug="+e.slug+"]").remove();document.querySelector(".taxonomy__filters .filter[data-slug="+e.slug+"]").classList.remove("filter--active");var t=this.selected_filters.findIndex(function(t){return t.slug===e.slug&&t.taxonomy===e.taxonomy});this.selected_filters.splice(t,1),this.setSelectedVisibility(),this.updateFiltersVisibility()}},{key:"clearFilter",value:function(){this.filters.forEach(function(e){e.classList.remove("filter--active")}),this.selected_filters=[],this.results_selected_items.forEach(function(e){e.remove()}),this.setSelectedVisibility(),this.search()}},{key:"setSelectedVisibility",value:function(){this.selected_filters.length>0?this.results_selected.classList.add("results__selected-filters--active"):this.results_selected.classList.remove("results__selected-filters--active")}},{key:"updateFiltersVisibility",value:function(){var e=this;this.filters.forEach(function(t){-1===e.available_filters.indexOf(t.dataset.slug)?(t.classList.add("filter--inactive"),t.classList.remove("filter--active")):t.classList.remove("filter--inactive")})}},{key:"search",value:function(){var e=this,t={action:"search_filters",query:searchquery,filters:this.selected_filters};this.results_container.forEach(function(e){e.innerHTML=""}),this.cards_loading.forEach(function(e){e.classList.remove("card--hide")}),this.cards_no_results.forEach(function(e){e.classList.add("card--hide")}),s.default.post(ajaxurl,o.default.stringify(t)).then(function(t){e.cards_loading.forEach(function(e){e.classList.add("card--hide")}),e.results_container.forEach(function(r,n){e.results_count[n].innerHTML=t.data.data.results[n].length,t.data.data.results[n].forEach(function(e){r.insertAdjacentHTML("beforeend",e)}),0===t.data.data.results[n].length&&e.cards_no_results[n].classList.remove("card--hide")}),e.available_filters=t.data.data.available_filters,e.updateFiltersVisibility()})}}]),e}();t.exports=a},{axios:9,qs:37}],6:[function(e,t,r){"use strict";t.exports=function e(t){var r=this,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];!function(t,r){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this),this.container=t,this.buttons=t.querySelectorAll(".item__button"),this.wrappers=t.querySelectorAll(".item__wrapper"),this.last_index=null,this.desktop=n,this.buttons.forEach(function(e){e.addEventListener("click",function(t){t.preventDefault();var i=Array.prototype.indexOf.call(r.buttons,e);window.innerWidth<700?(e.classList.add("mobile-active"),r.wrappers[i].style.height=60*r.wrappers[i].childElementCount+"px",r.container.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),r.wrappers.forEach(function(e,t){t===i&&i!==r.last_index||(e.style.removeProperty("height"),r.buttons[t].classList.remove("mobile-active"))})):n&&(e.classList.add("desktop-active"),r.wrappers[i].classList.add("desktop-active"),r.wrappers.forEach(function(e,t){r.wrappers[t].classList.remove("mobile-active"),r.buttons[t].classList.remove("mobile-active"),e.style.removeProperty("height"),t!==i&&(r.wrappers[t].classList.remove("desktop-active"),r.buttons[t].classList.remove("desktop-active"))})),r.last_index=r.last_index===i?null:i})})}},{}],7:[function(e,t,r){"use strict";t.exports=function e(t){var r=this;!function(t,r){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this),this.container=t,this.tabs=t.querySelectorAll("section.related__section"),this.buttons=t.querySelectorAll("button.header__button"),this.wrapper=t.querySelector(".related__container"),this.return=t.querySelector(".related__return"),this.tabsWrapper=t.querySelector(".related__wrapper"),this.last_index=0,this.buttons.forEach(function(e){e.addEventListener("click",function(e){var t=e.currentTarget.dataset.index;t!==r.last_index&&(r.buttons[r.last_index].classList.remove("active"),r.tabs[r.last_index].classList.remove("active"),r.buttons[t].classList.add("active"),r.tabs[t].classList.add("active"),r.last_index=t),window.innerWidth<=700&&(r.wrapper.classList.add("container--slide"),r.tabsWrapper.classList.remove("wrapper--hide"))})}),this.return.addEventListener("click",function(){window.innerWidth<=700&&(r.wrapper.classList.remove("container--slide"),r.tabsWrapper.classList.add("wrapper--hide"))})}},{}],8:[function(e,t,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var i=n(e("./Classes/Header")),s=n(e("./Classes/Rubrics")),o=n(e("./Classes/TaxonomyTabs")),a=n(e("./Classes/LoadMore")),c=n(e("./Classes/Results")),l=n(e("./Classes/Publications")),u=n(e("./Classes/Member"));new i.default(document.querySelector(".site-header"));if(document.querySelector(".home-section.rubrics"))new s.default(document.querySelector(".home-section.rubrics"),!0);if(document.querySelector(".taxonomy__related"))new o.default(document.querySelector(".taxonomy__related"));if(document.querySelector(".page-rubrics"))new s.default(document.querySelector(".page-rubrics"),!1);if(document.querySelector(".publication__container"))new a.default(document.querySelector(".publication__container"));if(document.querySelector(".results"))new c.default(document.querySelector(".results"));if(document.querySelector(".publications"))new l.default(document.querySelector(".publications"));if(document.querySelector(".member"))new u.default(document.querySelector(".member"))},{"./Classes/Header":1,"./Classes/LoadMore":2,"./Classes/Member":3,"./Classes/Publications":4,"./Classes/Results":5,"./Classes/Rubrics":6,"./Classes/TaxonomyTabs":7}],9:[function(e,t,r){t.exports=e("./lib/axios")},{"./lib/axios":11}],10:[function(e,t,r){(function(r){"use strict";var n=e("./../utils"),i=e("./../core/settle"),s=e("./../helpers/buildURL"),o=e("./../helpers/parseHeaders"),a=e("./../helpers/isURLSameOrigin"),c=e("../core/createError"),l="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||e("./../helpers/btoa");t.exports=function(t){return new Promise(function(u,f){var d=t.data,h=t.headers;n.isFormData(d)&&delete h["Content-Type"];var p=new XMLHttpRequest,y="onreadystatechange",m=!1;if("test"===r.env.NODE_ENV||"undefined"==typeof window||!window.XDomainRequest||"withCredentials"in p||a(t.url)||(p=new window.XDomainRequest,y="onload",m=!0,p.onprogress=function(){},p.ontimeout=function(){}),t.auth){var v=t.auth.username||"",_=t.auth.password||"";h.Authorization="Basic "+l(v+":"+_)}if(p.open(t.method.toUpperCase(),s(t.url,t.params,t.paramsSerializer),!0),p.timeout=t.timeout,p[y]=function(){if(p&&(4===p.readyState||m)&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var e="getAllResponseHeaders"in p?o(p.getAllResponseHeaders()):null,r={data:t.responseType&&"text"!==t.responseType?p.response:p.responseText,status:1223===p.status?204:p.status,statusText:1223===p.status?"No Content":p.statusText,headers:e,config:t,request:p};i(u,f,r),p=null}},p.onerror=function(){f(c("Network Error",t,null,p)),p=null},p.ontimeout=function(){f(c("timeout of "+t.timeout+"ms exceeded",t,"ECONNABORTED",p)),p=null},n.isStandardBrowserEnv()){var b=e("./../helpers/cookies"),g=(t.withCredentials||a(t.url))&&t.xsrfCookieName?b.read(t.xsrfCookieName):void 0;g&&(h[t.xsrfHeaderName]=g)}if("setRequestHeader"in p&&n.forEach(h,function(e,t){void 0===d&&"content-type"===t.toLowerCase()?delete h[t]:p.setRequestHeader(t,e)}),t.withCredentials&&(p.withCredentials=!0),t.responseType)try{p.responseType=t.responseType}catch(e){if("json"!==t.responseType)throw e}"function"==typeof t.onDownloadProgress&&p.addEventListener("progress",t.onDownloadProgress),"function"==typeof t.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",t.onUploadProgress),t.cancelToken&&t.cancelToken.promise.then(function(e){p&&(p.abort(),f(e),p=null)}),void 0===d&&(d=null),p.send(d)})}}).call(this,e("_process"))},{"../core/createError":17,"./../core/settle":20,"./../helpers/btoa":24,"./../helpers/buildURL":25,"./../helpers/cookies":27,"./../helpers/isURLSameOrigin":29,"./../helpers/parseHeaders":31,"./../utils":33,_process:35}],11:[function(e,t,r){"use strict";function n(e){var t=new o(e),r=s(o.prototype.request,t);return i.extend(r,o.prototype,t),i.extend(r,t),r}var i=e("./utils"),s=e("./helpers/bind"),o=e("./core/Axios"),a=e("./defaults"),c=n(a);c.Axios=o,c.create=function(e){return n(i.merge(a,e))},c.Cancel=e("./cancel/Cancel"),c.CancelToken=e("./cancel/CancelToken"),c.isCancel=e("./cancel/isCancel"),c.all=function(e){return Promise.all(e)},c.spread=e("./helpers/spread"),t.exports=c,t.exports.default=c},{"./cancel/Cancel":12,"./cancel/CancelToken":13,"./cancel/isCancel":14,"./core/Axios":15,"./defaults":22,"./helpers/bind":23,"./helpers/spread":32,"./utils":33}],12:[function(e,t,r){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,t.exports=n},{}],13:[function(e,t,r){"use strict";function n(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var r=this;e(function(e){r.reason||(r.reason=new i(e),t(r.reason))})}var i=e("./Cancel");n.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},n.source=function(){var e;return{token:new n(function(t){e=t}),cancel:e}},t.exports=n},{"./Cancel":12}],14:[function(e,t,r){"use strict";t.exports=function(e){return!(!e||!e.__CANCEL__)}},{}],15:[function(e,t,r){"use strict";function n(e){this.defaults=e,this.interceptors={request:new o,response:new o}}var i=e("./../defaults"),s=e("./../utils"),o=e("./InterceptorManager"),a=e("./dispatchRequest");n.prototype.request=function(e){"string"==typeof e&&(e=s.merge({url:arguments[0]},arguments[1])),(e=s.merge(i,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var t=[a,void 0],r=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)r=r.then(t.shift(),t.shift());return r},s.forEach(["delete","get","head","options"],function(e){n.prototype[e]=function(t,r){return this.request(s.merge(r||{},{method:e,url:t}))}}),s.forEach(["post","put","patch"],function(e){n.prototype[e]=function(t,r,n){return this.request(s.merge(n||{},{method:e,url:t,data:r}))}}),t.exports=n},{"./../defaults":22,"./../utils":33,"./InterceptorManager":16,"./dispatchRequest":18}],16:[function(e,t,r){"use strict";function n(){this.handlers=[]}var i=e("./../utils");n.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},n.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},n.prototype.forEach=function(e){i.forEach(this.handlers,function(t){null!==t&&e(t)})},t.exports=n},{"./../utils":33}],17:[function(e,t,r){"use strict";var n=e("./enhanceError");t.exports=function(e,t,r,i,s){var o=new Error(e);return n(o,t,r,i,s)}},{"./enhanceError":19}],18:[function(e,t,r){"use strict";function n(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var i=e("./../utils"),s=e("./transformData"),o=e("../cancel/isCancel"),a=e("../defaults"),c=e("./../helpers/isAbsoluteURL"),l=e("./../helpers/combineURLs");t.exports=function(e){n(e),e.baseURL&&!c(e.url)&&(e.url=l(e.baseURL,e.url)),e.headers=e.headers||{},e.data=s(e.data,e.headers,e.transformRequest),e.headers=i.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),i.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]});return(e.adapter||a.adapter)(e).then(function(t){return n(e),t.data=s(t.data,t.headers,e.transformResponse),t},function(t){return o(t)||(n(e),t&&t.response&&(t.response.data=s(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},{"../cancel/isCancel":14,"../defaults":22,"./../helpers/combineURLs":26,"./../helpers/isAbsoluteURL":28,"./../utils":33,"./transformData":21}],19:[function(e,t,r){"use strict";t.exports=function(e,t,r,n,i){return e.config=t,r&&(e.code=r),e.request=n,e.response=i,e}},{}],20:[function(e,t,r){"use strict";var n=e("./createError");t.exports=function(e,t,r){var i=r.config.validateStatus;r.status&&i&&!i(r.status)?t(n("Request failed with status code "+r.status,r.config,null,r.request,r)):e(r)}},{"./createError":17}],21:[function(e,t,r){"use strict";var n=e("./../utils");t.exports=function(e,t,r){return n.forEach(r,function(r){e=r(e,t)}),e}},{"./../utils":33}],22:[function(e,t,r){(function(r){"use strict";function n(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var i=e("./utils"),s=e("./helpers/normalizeHeaderName"),o={"Content-Type":"application/x-www-form-urlencoded"},a={adapter:function(){var t;return"undefined"!=typeof XMLHttpRequest?t=e("./adapters/xhr"):void 0!==r&&(t=e("./adapters/http")),t}(),transformRequest:[function(e,t){return s(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(n(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(n(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};a.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){a.headers[e]={}}),i.forEach(["post","put","patch"],function(e){a.headers[e]=i.merge(o)}),t.exports=a}).call(this,e("_process"))},{"./adapters/http":10,"./adapters/xhr":10,"./helpers/normalizeHeaderName":30,"./utils":33,_process:35}],23:[function(e,t,r){"use strict";t.exports=function(e,t){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return e.apply(t,r)}}},{}],24:[function(e,t,r){"use strict";function n(){this.message="String contains an invalid character"}var i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";(n.prototype=new Error).code=5,n.prototype.name="InvalidCharacterError",t.exports=function(e){for(var t,r,s=String(e),o="",a=0,c=i;s.charAt(0|a)||(c="=",a%1);o+=c.charAt(63&t>>8-a%1*8)){if((r=s.charCodeAt(a+=.75))>255)throw new n;t=t<<8|r}return o}},{}],25:[function(e,t,r){"use strict";function n(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var i=e("./../utils");t.exports=function(e,t,r){if(!t)return e;var s;if(r)s=r(t);else if(i.isURLSearchParams(t))s=t.toString();else{var o=[];i.forEach(t,function(e,t){null!==e&&void 0!==e&&(i.isArray(e)?t+="[]":e=[e],i.forEach(e,function(e){i.isDate(e)?e=e.toISOString():i.isObject(e)&&(e=JSON.stringify(e)),o.push(n(t)+"="+n(e))}))}),s=o.join("&")}return s&&(e+=(-1===e.indexOf("?")?"?":"&")+s),e}},{"./../utils":33}],26:[function(e,t,r){"use strict";t.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},{}],27:[function(e,t,r){"use strict";var n=e("./../utils");t.exports=n.isStandardBrowserEnv()?{write:function(e,t,r,i,s,o){var a=[];a.push(e+"="+encodeURIComponent(t)),n.isNumber(r)&&a.push("expires="+new Date(r).toGMTString()),n.isString(i)&&a.push("path="+i),n.isString(s)&&a.push("domain="+s),!0===o&&a.push("secure"),document.cookie=a.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},{"./../utils":33}],28:[function(e,t,r){"use strict";t.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},{}],29:[function(e,t,r){"use strict";var n=e("./../utils");t.exports=n.isStandardBrowserEnv()?function(){function e(e){var t=e;return r&&(i.setAttribute("href",t),t=i.href),i.setAttribute("href",t),{href:i.href,protocol:i.protocol?i.protocol.replace(/:$/,""):"",host:i.host,search:i.search?i.search.replace(/^\?/,""):"",hash:i.hash?i.hash.replace(/^#/,""):"",hostname:i.hostname,port:i.port,pathname:"/"===i.pathname.charAt(0)?i.pathname:"/"+i.pathname}}var t,r=/(msie|trident)/i.test(navigator.userAgent),i=document.createElement("a");return t=e(window.location.href),function(r){var i=n.isString(r)?e(r):r;return i.protocol===t.protocol&&i.host===t.host}}():function(){return!0}},{"./../utils":33}],30:[function(e,t,r){"use strict";var n=e("../utils");t.exports=function(e,t){n.forEach(e,function(r,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[n])})}},{"../utils":33}],31:[function(e,t,r){"use strict";var n=e("./../utils"),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];t.exports=function(e){var t,r,s,o={};return e?(n.forEach(e.split("\n"),function(e){if(s=e.indexOf(":"),t=n.trim(e.substr(0,s)).toLowerCase(),r=n.trim(e.substr(s+1)),t){if(o[t]&&i.indexOf(t)>=0)return;o[t]="set-cookie"===t?(o[t]?o[t]:[]).concat([r]):o[t]?o[t]+", "+r:r}}),o):o}},{"./../utils":33}],32:[function(e,t,r){"use strict";t.exports=function(e){return function(t){return e.apply(null,t)}}},{}],33:[function(e,t,r){"use strict";function n(e){return"[object Array]"===u.call(e)}function i(e){return null!==e&&"object"==typeof e}function s(e){return"[object Function]"===u.call(e)}function o(e,t){if(null!==e&&void 0!==e)if("object"!=typeof e&&(e=[e]),n(e))for(var r=0,i=e.length;r<i;r++)t.call(null,e[r],r,e);else for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.call(null,e[s],s,e)}function a(){function e(e,r){"object"==typeof t[r]&&"object"==typeof e?t[r]=a(t[r],e):t[r]=e}for(var t={},r=0,n=arguments.length;r<n;r++)o(arguments[r],e);return t}var c=e("./helpers/bind"),l=e("is-buffer"),u=Object.prototype.toString;t.exports={isArray:n,isArrayBuffer:function(e){return"[object ArrayBuffer]"===u.call(e)},isBuffer:l,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:i,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===u.call(e)},isFile:function(e){return"[object File]"===u.call(e)},isBlob:function(e){return"[object Blob]"===u.call(e)},isFunction:s,isStream:function(e){return i(e)&&s(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:o,merge:a,extend:function(e,t,r){return o(t,function(t,n){e[n]=r&&"function"==typeof t?c(t,r):t}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},{"./helpers/bind":23,"is-buffer":34}],34:[function(e,t,r){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}t.exports=function(e){return null!=e&&(n(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},{}],35:[function(e,t,r){function n(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function s(e){if(u===setTimeout)return setTimeout(e,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function o(){y&&h&&(y=!1,h.length?p=h.concat(p):m=-1,p.length&&a())}function a(){if(!y){var e=s(o);y=!0;for(var t=p.length;t;){for(h=p,p=[];++m<t;)h&&h[m].run();m=-1,t=p.length}h=null,y=!1,function(e){if(f===clearTimeout)return clearTimeout(e);if((f===i||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(e);try{f(e)}catch(t){try{return f.call(null,e)}catch(t){return f.call(this,e)}}}(e)}}function c(e,t){this.fun=e,this.array=t}function l(){}var u,f,d=t.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(e){u=n}try{f="function"==typeof clearTimeout?clearTimeout:i}catch(e){f=i}}();var h,p=[],y=!1,m=-1;d.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];p.push(new c(e,t)),1!==p.length||y||s(a)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(e){return[]},d.binding=function(e){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(e){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},{}],36:[function(e,t,r){"use strict";var n=String.prototype.replace,i=/%20/g;t.exports={default:"RFC3986",formatters:{RFC1738:function(e){return n.call(e,i,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},{}],37:[function(e,t,r){"use strict";var n=e("./stringify"),i=e("./parse"),s=e("./formats");t.exports={formats:s,parse:i,stringify:n}},{"./formats":36,"./parse":38,"./stringify":39}],38:[function(e,t,r){"use strict";var n=e("./utils"),i=Object.prototype.hasOwnProperty,s={allowDots:!1,allowPrototypes:!1,arrayLimit:20,decoder:n.decode,delimiter:"&",depth:5,parameterLimit:1e3,plainObjects:!1,strictNullHandling:!1},o=function(e,t,r){if(e){var n=r.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,s=/(\[[^[\]]*])/g,o=/(\[[^[\]]*])/.exec(n),a=o?n.slice(0,o.index):n,c=[];if(a){if(!r.plainObjects&&i.call(Object.prototype,a)&&!r.allowPrototypes)return;c.push(a)}for(var l=0;null!==(o=s.exec(n))&&l<r.depth;){if(l+=1,!r.plainObjects&&i.call(Object.prototype,o[1].slice(1,-1))&&!r.allowPrototypes)return;c.push(o[1])}return o&&c.push("["+n.slice(o.index)+"]"),function(e,t,r){for(var n=t,i=e.length-1;i>=0;--i){var s,o=e[i];if("[]"===o)s=(s=[]).concat(n);else{s=r.plainObjects?Object.create(null):{};var a="["===o.charAt(0)&&"]"===o.charAt(o.length-1)?o.slice(1,-1):o,c=parseInt(a,10);!isNaN(c)&&o!==a&&String(c)===a&&c>=0&&r.parseArrays&&c<=r.arrayLimit?(s=[])[c]=n:s[a]=n}n=s}return n}(c,t,r)}};t.exports=function(e,t){var r=t?n.assign({},t):{};if(null!==r.decoder&&void 0!==r.decoder&&"function"!=typeof r.decoder)throw new TypeError("Decoder has to be a function.");if(r.ignoreQueryPrefix=!0===r.ignoreQueryPrefix,r.delimiter="string"==typeof r.delimiter||n.isRegExp(r.delimiter)?r.delimiter:s.delimiter,r.depth="number"==typeof r.depth?r.depth:s.depth,r.arrayLimit="number"==typeof r.arrayLimit?r.arrayLimit:s.arrayLimit,r.parseArrays=!1!==r.parseArrays,r.decoder="function"==typeof r.decoder?r.decoder:s.decoder,r.allowDots="boolean"==typeof r.allowDots?r.allowDots:s.allowDots,r.plainObjects="boolean"==typeof r.plainObjects?r.plainObjects:s.plainObjects,r.allowPrototypes="boolean"==typeof r.allowPrototypes?r.allowPrototypes:s.allowPrototypes,r.parameterLimit="number"==typeof r.parameterLimit?r.parameterLimit:s.parameterLimit,r.strictNullHandling="boolean"==typeof r.strictNullHandling?r.strictNullHandling:s.strictNullHandling,""===e||null===e||void 0===e)return r.plainObjects?Object.create(null):{};for(var a="string"==typeof e?function(e,t){for(var r={},n=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,o=t.parameterLimit===1/0?void 0:t.parameterLimit,a=n.split(t.delimiter,o),c=0;c<a.length;++c){var l,u,f=a[c],d=f.indexOf("]="),h=-1===d?f.indexOf("="):d+1;-1===h?(l=t.decoder(f,s.decoder),u=t.strictNullHandling?null:""):(l=t.decoder(f.slice(0,h),s.decoder),u=t.decoder(f.slice(h+1),s.decoder)),i.call(r,l)?r[l]=[].concat(r[l]).concat(u):r[l]=u}return r}(e,r):e,c=r.plainObjects?Object.create(null):{},l=Object.keys(a),u=0;u<l.length;++u){var f=l[u],d=o(f,a[f],r);c=n.merge(c,d,r)}return n.compact(c)}},{"./utils":40}],39:[function(e,t,r){"use strict";var n=e("./utils"),i=e("./formats"),s={brackets:function(e){return e+"[]"},indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},o=Date.prototype.toISOString,a={delimiter:"&",encode:!0,encoder:n.encode,encodeValuesOnly:!1,serializeDate:function(e){return o.call(e)},skipNulls:!1,strictNullHandling:!1},c=function e(t,r,i,s,o,c,l,u,f,d,h,p){var y=t;if("function"==typeof l)y=l(r,y);else if(y instanceof Date)y=d(y);else if(null===y){if(s)return c&&!p?c(r,a.encoder):r;y=""}if("string"==typeof y||"number"==typeof y||"boolean"==typeof y||n.isBuffer(y)){if(c){return[h(p?r:c(r,a.encoder))+"="+h(c(y,a.encoder))]}return[h(r)+"="+h(String(y))]}var m=[];if(void 0===y)return m;var v;if(Array.isArray(l))v=l;else{var _=Object.keys(y);v=u?_.sort(u):_}for(var b=0;b<v.length;++b){var g=v[b];o&&null===y[g]||(m=Array.isArray(y)?m.concat(e(y[g],i(r,g),i,s,o,c,l,u,f,d,h,p)):m.concat(e(y[g],r+(f?"."+g:"["+g+"]"),i,s,o,c,l,u,f,d,h,p)))}return m};t.exports=function(e,t){var r=e,o=t?n.assign({},t):{};if(null!==o.encoder&&void 0!==o.encoder&&"function"!=typeof o.encoder)throw new TypeError("Encoder has to be a function.");var l=void 0===o.delimiter?a.delimiter:o.delimiter,u="boolean"==typeof o.strictNullHandling?o.strictNullHandling:a.strictNullHandling,f="boolean"==typeof o.skipNulls?o.skipNulls:a.skipNulls,d="boolean"==typeof o.encode?o.encode:a.encode,h="function"==typeof o.encoder?o.encoder:a.encoder,p="function"==typeof o.sort?o.sort:null,y=void 0!==o.allowDots&&o.allowDots,m="function"==typeof o.serializeDate?o.serializeDate:a.serializeDate,v="boolean"==typeof o.encodeValuesOnly?o.encodeValuesOnly:a.encodeValuesOnly;if(void 0===o.format)o.format=i.default;else if(!Object.prototype.hasOwnProperty.call(i.formatters,o.format))throw new TypeError("Unknown format option provided.");var _,b,g=i.formatters[o.format];"function"==typeof o.filter?r=(b=o.filter)("",r):Array.isArray(o.filter)&&(_=b=o.filter);var w=[];if("object"!=typeof r||null===r)return"";var x;x=o.arrayFormat in s?o.arrayFormat:"indices"in o?o.indices?"indices":"repeat":"indices";var L=s[x];_||(_=Object.keys(r)),p&&_.sort(p);for(var S=0;S<_.length;++S){var E=_[S];f&&null===r[E]||(w=w.concat(c(r[E],E,L,u,f,d?h:null,b,p,y,m,g,v)))}var q=w.join(l),C=!0===o.addQueryPrefix?"?":"";return q.length>0?C+q:""}},{"./formats":36,"./utils":40}],40:[function(e,t,r){"use strict";var n=Object.prototype.hasOwnProperty,i=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),s=function(e,t){for(var r=t&&t.plainObjects?Object.create(null):{},n=0;n<e.length;++n)void 0!==e[n]&&(r[n]=e[n]);return r};t.exports={arrayToObject:s,assign:function(e,t){return Object.keys(t).reduce(function(e,r){return e[r]=t[r],e},e)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],r=[],n=0;n<t.length;++n)for(var i=t[n],s=i.obj[i.prop],o=Object.keys(s),a=0;a<o.length;++a){var c=o[a],l=s[c];"object"==typeof l&&null!==l&&-1===r.indexOf(l)&&(t.push({obj:s,prop:c}),r.push(l))}return function(e){for(var t;e.length;){var r=e.pop();if(t=r.obj[r.prop],Array.isArray(t)){for(var n=[],i=0;i<t.length;++i)void 0!==t[i]&&n.push(t[i]);r.obj[r.prop]=n}}return t}(t)},decode:function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(t){return e}},encode:function(e){if(0===e.length)return e;for(var t="string"==typeof e?e:String(e),r="",n=0;n<t.length;++n){var s=t.charCodeAt(n);45===s||46===s||95===s||126===s||s>=48&&s<=57||s>=65&&s<=90||s>=97&&s<=122?r+=t.charAt(n):s<128?r+=i[s]:s<2048?r+=i[192|s>>6]+i[128|63&s]:s<55296||s>=57344?r+=i[224|s>>12]+i[128|s>>6&63]+i[128|63&s]:(n+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(n)),r+=i[240|s>>18]+i[128|s>>12&63]+i[128|s>>6&63]+i[128|63&s])}return r},isBuffer:function(e){return null!==e&&void 0!==e&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},merge:function e(t,r,i){if(!r)return t;if("object"!=typeof r){if(Array.isArray(t))t.push(r);else{if("object"!=typeof t)return[t,r];(i.plainObjects||i.allowPrototypes||!n.call(Object.prototype,r))&&(t[r]=!0)}return t}if("object"!=typeof t)return[t].concat(r);var o=t;return Array.isArray(t)&&!Array.isArray(r)&&(o=s(t,i)),Array.isArray(t)&&Array.isArray(r)?(r.forEach(function(r,s){n.call(t,s)?t[s]&&"object"==typeof t[s]?t[s]=e(t[s],r,i):t.push(r):t[s]=r}),t):Object.keys(r).reduce(function(t,s){var o=r[s];return n.call(t,s)?t[s]=e(t[s],o,i):t[s]=o,t},o)}}},{}]},{},[8]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZSIsInQiLCJuIiwiciIsInMiLCJvIiwidSIsImEiLCJyZXF1aXJlIiwiaSIsImYiLCJFcnJvciIsImNvZGUiLCJsIiwiZXhwb3J0cyIsImNhbGwiLCJsZW5ndGgiLCIxIiwibW9kdWxlIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJIZWFkZXIiLCJjb250YWluZXIiLCJfdGhpcyIsInRoaXMiLCJpbnN0YW5jZSIsIlR5cGVFcnJvciIsIl9jbGFzc0NhbGxDaGVjayIsImhlYWRlciIsInRyaWdnZXIiLCJxdWVyeVNlbGVjdG9yIiwid3JhcHBlciIsImRyb3BEb3duIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZVZpc2liaWxpdHkiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9heGlvczIiLCJfcXMyIiwiTG9hZE1vcmUiLCJmb290ZXIiLCJkb2N1bWVudCIsIndhaXQiLCJwYWdlIiwiZGF0ZSIsInZhcnMiLCJwb3N0RGF0ZSIsImlkIiwicG9zdElEIiwic2VsZWN0IiwiY2FyZF9zY3JvbGwiLCJjYXJkX2VuZCIsIndpbmRvdyIsImJvZHkiLCJzY3JvbGxIZWlnaHQiLCJkb2N1bWVudEVsZW1lbnQiLCJzY3JvbGxUb3AiLCJpbm5lckhlaWdodCIsIm9mZnNldEhlaWdodCIsImFkZFBvc3QiLCJfdGhpczIiLCJkYXRhIiwiYWN0aW9uIiwicG9zdF9kYXRlIiwicG9zdF9pZCIsInBvc3QiLCJhamF4dXJsIiwic3RyaW5naWZ5IiwidGhlbiIsInJlcyIsInBvc3RzIiwiZm9yRWFjaCIsImluc2VydEFkamFjZW50SFRNTCIsImNvbnRlbnQiLCJhZGQiLCJyZW1vdmUiLCJjYXRjaCIsImF4aW9zIiwicXMiLCIzIiwiTWVtYmVyIiwiYnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzZWN0aW9uc19jb250YWluZXIiLCJzZWN0aW9ucyIsImJ1dHRvbiIsImluZGV4IiwiQXJyYXkiLCJpbmRleE9mIiwiY3VycmVudFRhcmdldCIsInNjcm9sbFRvIiwidG9Ub3AiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJiZWhhdmlvciIsIjQiLCJQdWJsaWNhdGlvbnMiLCJoZWFkZXJfbGlzdCIsImhlYWRlcl9pdGVtcyIsImhlYWRlcl9wcmV2IiwiaGVhZGVyX25leHQiLCJoZWFkZXJfaW5kZXgiLCJjYXJkX2xvYWRpbmciLCJpbm5lcldpZHRoIiwiaGVhZGVyX29mZnNldCIsImhlYWRlcl9vZmZzZXRXaWR0aCIsInBhcmVudE5vZGUiLCJvZmZzZXRXaWR0aCIsImZpbHRlciIsInBvc3RzX2NvbnRhaW5lciIsIml0ZW0iLCJjb250YWlucyIsInVwZGF0ZWQiLCJkYXRhc2V0IiwidXBkYXRlSGVhZGVyIiwicGFyc2VJbnQiLCJzZXRGaWx0ZXIiLCJmZXRjaFB1YmxpY2F0aW9ucyIsIm5ld0luZGV4Iiwib2Zmc2V0Iiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJzbHVnIiwidGF4b25vbXkiLCJpbm5lckhUTUwiLCJyZXNwb25zZSIsIjUiLCJSZXN1bHRzIiwicmVzdWx0c19idXR0b25zIiwicmVzdWx0c19jb3VudCIsInJlc3VsdHNfdGFicyIsInJlc3VsdHNfY29udGFpbmVyIiwicmVzdWx0c19zZWxlY3RlZCIsInJlc3VsdHNfc2VsZWN0ZWRfY29udGFpbmVyIiwicmVzdWx0c19zZWxlY3RlZF9kZWxldGUiLCJyZXN1bHRzX3NlbGVjdGVkX21vZGVsIiwicmVzdWx0c19zZWxlY3RlZF9pdGVtcyIsImZpbHRlcnNfdmlzaWJpbGl0eSIsImZpbHRlcnNfY29udGFpbmVyIiwiZmlsdGVycyIsImNvbnRhaW5lclRvRml4IiwiY2FyZHNfbG9hZGluZyIsImNhcmRzX25vX3Jlc3VsdHMiLCJzZWxlY3RlZF90YWIiLCJzZWxlY3RlZF9maWx0ZXJzIiwiYXZhaWxhYmxlX2ZpbHRlcnMiLCJzZXRUYWJzIiwiY29udCIsIndpZHRoIiwidG9nZ2xlRmlsdGVyIiwic2VhcmNoIiwiY2xlYXJGaWx0ZXIiLCJlbGVtZW50IiwibmFtZSIsInJlbW92ZUZpbHRlciIsInB1c2giLCJhZGRGaWx0ZXIiLCJjbG9uZU5vZGUiLCJ0ZXh0Q29udGVudCIsImFwcGVuZENoaWxkIiwiZmlsIiwic2V0U2VsZWN0ZWRWaXNpYmlsaXR5IiwiZmluZEluZGV4Iiwic2VsZWN0ZWQiLCJzcGxpY2UiLCJ1cGRhdGVGaWx0ZXJzVmlzaWJpbGl0eSIsIl90aGlzMyIsIl90aGlzNCIsInF1ZXJ5Iiwic2VhcmNocXVlcnkiLCJjYXJkIiwicmVzdWx0cyIsInJlc3VsdCIsIjYiLCJSdWJyaWNzIiwiZGVza3RvcCIsImFyZ3VtZW50cyIsInVuZGVmaW5lZCIsIndyYXBwZXJzIiwibGFzdF9pbmRleCIsImhlaWdodCIsImNoaWxkRWxlbWVudENvdW50Iiwic2Nyb2xsSW50b1ZpZXciLCJibG9jayIsImlubGluZSIsInJlbW92ZVByb3BlcnR5IiwiNyIsIlRheG9ub215VGFicyIsInRhYnMiLCJyZXR1cm4iLCJ0YWJzV3JhcHBlciIsIjgiLCJfSGVhZGVyMiIsIl9SdWJyaWNzMiIsIl9UYXhvbm9teVRhYnMyIiwiX0xvYWRNb3JlMiIsIl9SZXN1bHRzMiIsIl9QdWJsaWNhdGlvbnMyIiwiX01lbWJlcjIiLCIuL0NsYXNzZXMvSGVhZGVyIiwiLi9DbGFzc2VzL0xvYWRNb3JlIiwiLi9DbGFzc2VzL01lbWJlciIsIi4vQ2xhc3Nlcy9QdWJsaWNhdGlvbnMiLCIuL0NsYXNzZXMvUmVzdWx0cyIsIi4vQ2xhc3Nlcy9SdWJyaWNzIiwiLi9DbGFzc2VzL1RheG9ub215VGFicyIsIjkiLCIuL2xpYi9heGlvcyIsIjEwIiwicHJvY2VzcyIsInV0aWxzIiwic2V0dGxlIiwiYnVpbGRVUkwiLCJwYXJzZUhlYWRlcnMiLCJpc1VSTFNhbWVPcmlnaW4iLCJjcmVhdGVFcnJvciIsImJ0b2EiLCJiaW5kIiwiY29uZmlnIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXF1ZXN0RGF0YSIsInJlcXVlc3RIZWFkZXJzIiwiaGVhZGVycyIsImlzRm9ybURhdGEiLCJyZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJsb2FkRXZlbnQiLCJ4RG9tYWluIiwiZW52IiwiTk9ERV9FTlYiLCJYRG9tYWluUmVxdWVzdCIsInVybCIsIm9ucHJvZ3Jlc3MiLCJvbnRpbWVvdXQiLCJhdXRoIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsIkF1dGhvcml6YXRpb24iLCJvcGVuIiwibWV0aG9kIiwidG9VcHBlckNhc2UiLCJwYXJhbXMiLCJwYXJhbXNTZXJpYWxpemVyIiwidGltZW91dCIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJyZXNwb25zZVVSTCIsInJlc3BvbnNlSGVhZGVycyIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsInJlc3BvbnNlVHlwZSIsInJlc3BvbnNlVGV4dCIsInN0YXR1c1RleHQiLCJvbmVycm9yIiwiaXNTdGFuZGFyZEJyb3dzZXJFbnYiLCJjb29raWVzIiwieHNyZlZhbHVlIiwid2l0aENyZWRlbnRpYWxzIiwieHNyZkNvb2tpZU5hbWUiLCJyZWFkIiwieHNyZkhlYWRlck5hbWUiLCJ2YWwiLCJ0b0xvd2VyQ2FzZSIsInNldFJlcXVlc3RIZWFkZXIiLCJvbkRvd25sb2FkUHJvZ3Jlc3MiLCJvblVwbG9hZFByb2dyZXNzIiwidXBsb2FkIiwiY2FuY2VsVG9rZW4iLCJwcm9taXNlIiwiY2FuY2VsIiwiYWJvcnQiLCJzZW5kIiwiLi4vY29yZS9jcmVhdGVFcnJvciIsIi4vLi4vY29yZS9zZXR0bGUiLCIuLy4uL2hlbHBlcnMvYnRvYSIsIi4vLi4vaGVscGVycy9idWlsZFVSTCIsIi4vLi4vaGVscGVycy9jb29raWVzIiwiLi8uLi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbiIsIi4vLi4vaGVscGVycy9wYXJzZUhlYWRlcnMiLCIuLy4uL3V0aWxzIiwiX3Byb2Nlc3MiLCIxMSIsImNyZWF0ZUluc3RhbmNlIiwiZGVmYXVsdENvbmZpZyIsImNvbnRleHQiLCJBeGlvcyIsImV4dGVuZCIsImRlZmF1bHRzIiwiY3JlYXRlIiwiaW5zdGFuY2VDb25maWciLCJtZXJnZSIsIkNhbmNlbCIsIkNhbmNlbFRva2VuIiwiaXNDYW5jZWwiLCJhbGwiLCJwcm9taXNlcyIsInNwcmVhZCIsIi4vY2FuY2VsL0NhbmNlbCIsIi4vY2FuY2VsL0NhbmNlbFRva2VuIiwiLi9jYW5jZWwvaXNDYW5jZWwiLCIuL2NvcmUvQXhpb3MiLCIuL2RlZmF1bHRzIiwiLi9oZWxwZXJzL2JpbmQiLCIuL2hlbHBlcnMvc3ByZWFkIiwiLi91dGlscyIsIjEyIiwibWVzc2FnZSIsInRvU3RyaW5nIiwiX19DQU5DRUxfXyIsIjEzIiwiZXhlY3V0b3IiLCJyZXNvbHZlUHJvbWlzZSIsInRva2VuIiwicmVhc29uIiwidGhyb3dJZlJlcXVlc3RlZCIsInNvdXJjZSIsImMiLCIuL0NhbmNlbCIsIjE0IiwiMTUiLCJpbnRlcmNlcHRvcnMiLCJJbnRlcmNlcHRvck1hbmFnZXIiLCJkaXNwYXRjaFJlcXVlc3QiLCJjaGFpbiIsImludGVyY2VwdG9yIiwidW5zaGlmdCIsImZ1bGZpbGxlZCIsInJlamVjdGVkIiwic2hpZnQiLCIuLy4uL2RlZmF1bHRzIiwiLi9JbnRlcmNlcHRvck1hbmFnZXIiLCIuL2Rpc3BhdGNoUmVxdWVzdCIsIjE2IiwiaGFuZGxlcnMiLCJ1c2UiLCJlamVjdCIsImZuIiwiaCIsIjE3IiwiZW5oYW5jZUVycm9yIiwiZXJyb3IiLCIuL2VuaGFuY2VFcnJvciIsIjE4IiwidGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZCIsInRyYW5zZm9ybURhdGEiLCJpc0Fic29sdXRlVVJMIiwiY29tYmluZVVSTHMiLCJiYXNlVVJMIiwidHJhbnNmb3JtUmVxdWVzdCIsImNvbW1vbiIsImFkYXB0ZXIiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsIi4uL2NhbmNlbC9pc0NhbmNlbCIsIi4uL2RlZmF1bHRzIiwiLi8uLi9oZWxwZXJzL2NvbWJpbmVVUkxzIiwiLi8uLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwiLCIuL3RyYW5zZm9ybURhdGEiLCIxOSIsIjIwIiwidmFsaWRhdGVTdGF0dXMiLCIuL2NyZWF0ZUVycm9yIiwiMjEiLCJmbnMiLCIyMiIsInNldENvbnRlbnRUeXBlSWZVbnNldCIsImlzVW5kZWZpbmVkIiwibm9ybWFsaXplSGVhZGVyTmFtZSIsIkRFRkFVTFRfQ09OVEVOVF9UWVBFIiwiQ29udGVudC1UeXBlIiwiZ2V0RGVmYXVsdEFkYXB0ZXIiLCJpc0FycmF5QnVmZmVyIiwiaXNCdWZmZXIiLCJpc1N0cmVhbSIsImlzRmlsZSIsImlzQmxvYiIsImlzQXJyYXlCdWZmZXJWaWV3IiwiYnVmZmVyIiwiaXNVUkxTZWFyY2hQYXJhbXMiLCJpc09iamVjdCIsIkpTT04iLCJwYXJzZSIsIm1heENvbnRlbnRMZW5ndGgiLCJBY2NlcHQiLCIuL2FkYXB0ZXJzL2h0dHAiLCIuL2FkYXB0ZXJzL3hociIsIi4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lIiwiMjMiLCJ0aGlzQXJnIiwiYXJncyIsImFwcGx5IiwiMjQiLCJFIiwiY2hhcnMiLCJpbnB1dCIsImNoYXJDb2RlIiwic3RyIiwiU3RyaW5nIiwib3V0cHV0IiwiaWR4IiwibWFwIiwiY2hhckF0IiwiY2hhckNvZGVBdCIsIjI1IiwiZW5jb2RlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVwbGFjZSIsInNlcmlhbGl6ZWRQYXJhbXMiLCJwYXJ0cyIsImlzQXJyYXkiLCJ2IiwiaXNEYXRlIiwidG9JU09TdHJpbmciLCJqb2luIiwiMjYiLCJyZWxhdGl2ZVVSTCIsIjI3Iiwid3JpdGUiLCJleHBpcmVzIiwicGF0aCIsImRvbWFpbiIsInNlY3VyZSIsImNvb2tpZSIsImlzTnVtYmVyIiwiRGF0ZSIsInRvR01UU3RyaW5nIiwiaXNTdHJpbmciLCJtYXRjaCIsIlJlZ0V4cCIsImRlY29kZVVSSUNvbXBvbmVudCIsIm5vdyIsIjI4IiwidGVzdCIsIjI5IiwicmVzb2x2ZVVSTCIsImhyZWYiLCJtc2llIiwidXJsUGFyc2luZ05vZGUiLCJzZXRBdHRyaWJ1dGUiLCJwcm90b2NvbCIsImhvc3QiLCJoYXNoIiwiaG9zdG5hbWUiLCJwb3J0IiwicGF0aG5hbWUiLCJvcmlnaW5VUkwiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJjcmVhdGVFbGVtZW50IiwibG9jYXRpb24iLCJyZXF1ZXN0VVJMIiwicGFyc2VkIiwiMzAiLCJub3JtYWxpemVkTmFtZSIsIi4uL3V0aWxzIiwiMzEiLCJpZ25vcmVEdXBsaWNhdGVPZiIsInNwbGl0IiwibGluZSIsInRyaW0iLCJzdWJzdHIiLCJjb25jYXQiLCIzMiIsImNhbGxiYWNrIiwiYXJyIiwiMzMiLCJpc0Z1bmN0aW9uIiwiaGFzT3duUHJvcGVydHkiLCJhc3NpZ25WYWx1ZSIsIkZvcm1EYXRhIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJwaXBlIiwiVVJMU2VhcmNoUGFyYW1zIiwicHJvZHVjdCIsImIiLCJpcy1idWZmZXIiLCIzNCIsImNvbnN0cnVjdG9yIiwicmVhZEZsb2F0TEUiLCJzbGljZSIsImlzU2xvd0J1ZmZlciIsIl9pc0J1ZmZlciIsIjM1IiwiZGVmYXVsdFNldFRpbW91dCIsImRlZmF1bHRDbGVhclRpbWVvdXQiLCJydW5UaW1lb3V0IiwiZnVuIiwiY2FjaGVkU2V0VGltZW91dCIsInNldFRpbWVvdXQiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpbmluZyIsImN1cnJlbnRRdWV1ZSIsInF1ZXVlIiwicXVldWVJbmRleCIsImRyYWluUXVldWUiLCJsZW4iLCJydW4iLCJtYXJrZXIiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwiYXJyYXkiLCJub29wIiwibmV4dFRpY2siLCJ0aXRsZSIsImJyb3dzZXIiLCJhcmd2IiwidmVyc2lvbiIsInZlcnNpb25zIiwib24iLCJhZGRMaXN0ZW5lciIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCIzNiIsInBlcmNlbnRUd2VudGllcyIsImZvcm1hdHRlcnMiLCJSRkMxNzM4IiwiUkZDMzk4NiIsIjM3IiwiZm9ybWF0cyIsIi4vZm9ybWF0cyIsIi4vcGFyc2UiLCIuL3N0cmluZ2lmeSIsIjM4IiwiaGFzIiwiYWxsb3dEb3RzIiwiYWxsb3dQcm90b3R5cGVzIiwiYXJyYXlMaW1pdCIsImRlY29kZXIiLCJkZWNvZGUiLCJkZWxpbWl0ZXIiLCJkZXB0aCIsInBhcmFtZXRlckxpbWl0IiwicGxhaW5PYmplY3RzIiwic3RyaWN0TnVsbEhhbmRsaW5nIiwicGFyc2VLZXlzIiwiZ2l2ZW5LZXkiLCJvcHRpb25zIiwiY2hpbGQiLCJzZWdtZW50IiwiZXhlYyIsInBhcmVudCIsImtleXMiLCJsZWFmIiwicm9vdCIsImNsZWFuUm9vdCIsImlzTmFOIiwicGFyc2VBcnJheXMiLCJwYXJzZU9iamVjdCIsIm9wdHMiLCJhc3NpZ24iLCJpZ25vcmVRdWVyeVByZWZpeCIsImlzUmVnRXhwIiwidGVtcE9iaiIsImNsZWFuU3RyIiwibGltaXQiLCJJbmZpbml0eSIsInBhcnQiLCJicmFja2V0RXF1YWxzUG9zIiwicG9zIiwicGFyc2VWYWx1ZXMiLCJuZXdPYmoiLCJjb21wYWN0IiwiMzkiLCJhcnJheVByZWZpeEdlbmVyYXRvcnMiLCJicmFja2V0cyIsInByZWZpeCIsImluZGljZXMiLCJyZXBlYXQiLCJ0b0lTTyIsImVuY29kZXIiLCJlbmNvZGVWYWx1ZXNPbmx5Iiwic2VyaWFsaXplRGF0ZSIsInNraXBOdWxscyIsIm9iamVjdCIsImdlbmVyYXRlQXJyYXlQcmVmaXgiLCJzb3J0IiwiZm9ybWF0dGVyIiwidmFsdWVzIiwib2JqS2V5cyIsImZvcm1hdCIsImFycmF5Rm9ybWF0Iiwiam9pbmVkIiwiYWRkUXVlcnlQcmVmaXgiLCI0MCIsImhleFRhYmxlIiwiYXJyYXlUb09iamVjdCIsInJlZHVjZSIsImFjYyIsInByb3AiLCJyZWZzIiwiaiIsInBvcCIsImNvbXBhY3RlZCIsImNvbXBhY3RRdWV1ZSIsInN0cmluZyIsIm91dCIsIm1lcmdlVGFyZ2V0Il0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFVQSxFQUFFQyxFQUFFQyxFQUFFQyxHQUFHLFNBQVNDLEVBQUVDLEVBQUVDLEdBQUcsSUFBSUosRUFBRUcsR0FBRyxDQUFDLElBQUlKLEVBQUVJLEdBQUcsQ0FBQyxJQUFJRSxFQUFrQixtQkFBVEMsU0FBcUJBLFFBQVEsSUFBSUYsR0FBR0MsRUFBRSxPQUFPQSxFQUFFRixHQUFFLEdBQUksR0FBR0ksRUFBRSxPQUFPQSxFQUFFSixHQUFFLEdBQUksSUFBSUssRUFBRSxJQUFJQyxNQUFNLHVCQUF1Qk4sRUFBRSxLQUFLLE1BQU1LLEVBQUVFLEtBQUssbUJBQW1CRixFQUFFLElBQUlHLEVBQUVYLEVBQUVHLElBQUlTLFlBQVliLEVBQUVJLEdBQUcsR0FBR1UsS0FBS0YsRUFBRUMsUUFBUSxTQUFTZCxHQUFHLElBQUlFLEVBQUVELEVBQUVJLEdBQUcsR0FBR0wsR0FBRyxPQUFPSSxFQUFFRixHQUFJRixJQUFJYSxFQUFFQSxFQUFFQyxRQUFRZCxFQUFFQyxFQUFFQyxFQUFFQyxHQUFHLE9BQU9ELEVBQUVHLEdBQUdTLFFBQWtELElBQUksSUFBMUNMLEVBQWtCLG1CQUFURCxTQUFxQkEsUUFBZ0JILEVBQUUsRUFBRUEsRUFBRUYsRUFBRWEsT0FBT1gsSUFBSUQsRUFBRUQsRUFBRUUsSUFBSSxPQUFPRCxFQUF2YixFQUE0YmEsR0FBRyxTQUFTVCxFQUFRVSxFQUFPSixHQUN2ZCxhQUVBLElBQUlLLEVBQWUsV0FBYyxTQUFTQyxFQUFpQkMs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aUJBQVgzVCxFQUtkLE9BQVFBLEVBQVEyVCxJQUpaME8sRUFBUUosY0FBZ0JJLEVBQVFYLGtCQUFvQkYsRUFBSTloQixLQUFLWSxPQUFPTSxVQUFXK1MsTUFDL0UzVCxFQUFPMlQsSUFBVSxHQU16QixPQUFPM1QsRUFHWCxHQUFzQixpQkFBWEEsRUFDUCxPQUFRQSxHQUFRNGMsT0FBT2pKLEdBRzNCLElBQUlzUyxFQUFjam1CLEVBS2xCLE9BSklzRixNQUFNa1UsUUFBUXhaLEtBQVlzRixNQUFNa1UsUUFBUTdGLEtBQ3hDc1MsRUFBY1gsRUFBY3RsQixFQUFRcWlCLElBR3BDL2MsTUFBTWtVLFFBQVF4WixJQUFXc0YsTUFBTWtVLFFBQVE3RixJQUN2Q0EsRUFBT3JQLFFBQVEsU0FBVXVDLEVBQU16SCxHQUN2Qm9pQixFQUFJOWhCLEtBQUtNLEVBQVFaLEdBQ2JZLEVBQU9aLElBQTJCLGlCQUFkWSxFQUFPWixHQUMzQlksRUFBT1osR0FBSzhTLEVBQU1sUyxFQUFPWixHQUFJeUgsRUFBTXdiLEdBRW5DcmlCLEVBQU8wSixLQUFLN0MsR0FHaEI3RyxFQUFPWixHQUFLeUgsSUFHYjdHLEdBR0pNLE9BQU9vaUIsS0FBSy9PLEdBQVE0UixPQUFPLFNBQVVDLEVBQUtobEIsR0FDN0MsSUFBSW9CLEVBQVErUixFQUFPblQsR0FPbkIsT0FMSWdoQixFQUFJOWhCLEtBQUs4bEIsRUFBS2hsQixHQUNkZ2xCLEVBQUlobEIsR0FBTzBSLEVBQU1zVCxFQUFJaGxCLEdBQU1vQixFQUFPeWdCLEdBRWxDbUQsRUFBSWhsQixHQUFPb0IsRUFFUjRqQixHQUNSUyxlQW1ISSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkoezE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgSGVhZGVyID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBIZWFkZXIoY29udGFpbmVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIZWFkZXIpO1xuXG4gICAgdGhpcy5oZWFkZXIgPSBjb250YWluZXI7XG4gICAgdGhpcy50cmlnZ2VyID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5zaXRlLWhlYWRlcl9fbmF2LXRyaWdnZXInKTtcbiAgICB0aGlzLndyYXBwZXIgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnNpdGUtaGVhZGVyX193cmFwcGVyJyk7XG4gICAgdGhpcy5kcm9wRG93biA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuZHJvcF9fdHJpZ2dlcicpO1xuXG4gICAgdGhpcy50cmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIF90aGlzLnRvZ2dsZVZpc2liaWxpdHkoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuZHJvcERvd24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEhlYWRlciwgW3tcbiAgICBrZXk6ICd0b2dnbGVWaXNpYmlsaXR5JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlVmlzaWJpbGl0eSgpIHtcbiAgICAgIHRoaXMud3JhcHBlci5jbGFzc0xpc3QudG9nZ2xlKCdzaXRlLWhlYWRlcl9fd3JhcHBlci0taGlkZScpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBIZWFkZXI7XG59KCk7XG5cbm1vZHVsZS5leHBvcnRzID0gSGVhZGVyO1xuXG59LHt9XSwyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9heGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7XG5cbnZhciBfYXhpb3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXhpb3MpO1xuXG52YXIgX3FzID0gcmVxdWlyZSgncXMnKTtcblxudmFyIF9xczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9xcyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBMb2FkTW9yZSA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gTG9hZE1vcmUoY29udGFpbmVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2FkTW9yZSk7XG5cbiAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICB0aGlzLmZvb3RlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvb3Rlci5zaXRlLWZvb3RlcicpO1xuICAgIHRoaXMud2FpdCA9IGZhbHNlO1xuICAgIHRoaXMucGFnZSA9IDE7XG4gICAgdGhpcy5kYXRlID0gdmFycy5wb3N0RGF0ZTtcbiAgICB0aGlzLmlkID0gdmFycy5wb3N0SUQ7XG5cbiAgICB0aGlzLnNlbGVjdCA9IHt9O1xuXG4gICAgdGhpcy5jYXJkX3Njcm9sbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19zY3JvbGwnKTtcbiAgICB0aGlzLmNhcmRfZW5kID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2VuZCcpO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzY3JvbGxCb3R0b20gPSBkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCAtIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgLSAod2luZG93LmlubmVySGVpZ2h0ICsgX3RoaXMuZm9vdGVyLm9mZnNldEhlaWdodCk7XG5cbiAgICAgIGlmIChzY3JvbGxCb3R0b20gPD0gd2luZG93LmlubmVySGVpZ2h0ICogMiAmJiAhX3RoaXMud2FpdCkge1xuICAgICAgICBfdGhpcy5hZGRQb3N0KCk7XG4gICAgICAgIF90aGlzLndhaXQgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKExvYWRNb3JlLCBbe1xuICAgIGtleTogJ2FkZFBvc3QnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRQb3N0KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBkYXRhID0ge1xuICAgICAgICBhY3Rpb246ICdwdWJsaWNhdGlvbl9sb2FkX21vcmUnLFxuICAgICAgICBwb3N0X2RhdGU6IHRoaXMuZGF0ZSxcbiAgICAgICAgcG9zdF9pZDogdGhpcy5pZCxcbiAgICAgICAgcGFnZTogdGhpcy5wYWdlXG4gICAgICB9O1xuXG4gICAgICBfYXhpb3MyLmRlZmF1bHQucG9zdChhamF4dXJsLCBfcXMyLmRlZmF1bHQuc3RyaW5naWZ5KGRhdGEpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgcmVzLmRhdGEuZGF0YS5wb3N0cy5mb3JFYWNoKGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgICAgICAgX3RoaXMyLmNvbnRhaW5lci5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHBvc3QuY29udGVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICBfdGhpczIucGFnZSArPSAxO1xuICAgICAgICBfdGhpczIud2FpdCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChyZXMuZGF0YS5kYXRhLnBvc3RzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIF90aGlzMi5jYXJkX3Njcm9sbC5jbGFzc0xpc3QuYWRkKCdjYXJkLS1oaWRlJyk7XG4gICAgICAgICAgX3RoaXMyLmNhcmRfZW5kLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcmQtLWhpZGUnKTtcbiAgICAgICAgfVxuICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIuY2FyZF9zY3JvbGwuY2xhc3NMaXN0LmFkZCgnY2FyZC0taGlkZScpO1xuICAgICAgICBfdGhpczIuY2FyZF9lbmQuY2xhc3NMaXN0LnJlbW92ZSgnY2FyZC0taGlkZScpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExvYWRNb3JlO1xufSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBMb2FkTW9yZTtcblxufSx7XCJheGlvc1wiOjksXCJxc1wiOjM3fV0sMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBNZW1iZXIgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIE1lbWJlcihjb250YWluZXIpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1lbWJlcik7XG5cbiAgICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICB0aGlzLmJ1dHRvbnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmJ1dHRvbl9fYW5jaG9yJyk7XG5cbiAgICB0aGlzLnNlY3Rpb25zX2NvbnRhaW5lciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcubWVtYmVyX19hYm91dCcpO1xuICAgIHRoaXMuc2VjdGlvbnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnNlY3Rpb25fX3Bvc3QnKTtcblxuICAgIHRoaXMuYnV0dG9ucy5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciBpbmRleCA9IEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoX3RoaXMuYnV0dG9ucywgZS5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgX3RoaXMuc2Nyb2xsVG8oaW5kZXgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTWVtYmVyLCBbe1xuICAgIGtleTogJ3Njcm9sbFRvJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2Nyb2xsVG8oaW5kZXgpIHtcbiAgICAgIHZhciB0b1RvcCA9IHRoaXMuc2VjdGlvbnNbaW5kZXhdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgICAgIHRoaXMuc2VjdGlvbnNfY29udGFpbmVyLnNjcm9sbFRvKHtcbiAgICAgICAgdG9wOiB0b1RvcCAtIDE0MCxcbiAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnXG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTWVtYmVyO1xufSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBNZW1iZXI7XG5cbn0se31dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2F4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcblxudmFyIF9heGlvczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9heGlvcyk7XG5cbnZhciBfcXMgPSByZXF1aXJlKCdxcycpO1xuXG52YXIgX3FzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3FzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFB1YmxpY2F0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUHVibGljYXRpb25zKGNvbnRhaW5lcikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHVibGljYXRpb25zKTtcblxuICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgIHRoaXMuaGVhZGVyX2xpc3QgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLmhlYWRlcl9fbGlzdCcpO1xuICAgIHRoaXMuaGVhZGVyX2l0ZW1zID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5oZWFkZXJfX2l0ZW0gYnV0dG9uJyk7XG4gICAgdGhpcy5oZWFkZXJfcHJldiA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19uYXYtLXByZXYnKTtcbiAgICB0aGlzLmhlYWRlcl9uZXh0ID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXJfX25hdi0tbmV4dCcpO1xuICAgIHRoaXMuaGVhZGVyX2luZGV4ID0gMDtcblxuICAgIHRoaXMuY2FyZF9sb2FkaW5nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnB1YmxpY2F0aW9uc19fbG9hZGluZycpO1xuXG4gICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoID49IDkwMCkge1xuICAgICAgdGhpcy5oZWFkZXJfb2Zmc2V0ID0gNTtcbiAgICAgIHRoaXMuaGVhZGVyX29mZnNldFdpZHRoID0gdGhpcy5oZWFkZXJfbGlzdC5wYXJlbnROb2RlLm9mZnNldFdpZHRoIC8gNTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5oZWFkZXJfb2Zmc2V0ID0gMTtcbiAgICAgIHRoaXMuaGVhZGVyX29mZnNldFdpZHRoID0gdGhpcy5oZWFkZXJfbGlzdC5wYXJlbnROb2RlLm9mZnNldFdpZHRoO1xuICAgIH1cblxuICAgIHRoaXMuZmlsdGVyID0ge307XG5cbiAgICB0aGlzLnBvc3RzX2NvbnRhaW5lciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucHVibGljYXRpb25zX19wb3N0cycpO1xuXG4gICAgdGhpcy5oZWFkZXJfaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHtcbiAgICAgIGlmIChpdGVtLmNsYXNzTGlzdC5jb250YWlucygnaXRlbS0tYWN0aXZlJykpIHtcbiAgICAgICAgX3RoaXMuaGVhZGVyX2luZGV4ID0gaW5kZXg7XG4gICAgICB9XG5cbiAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgdXBkYXRlZCA9IF90aGlzLmhlYWRlcl9pbmRleCAhPT0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaW5kZXggPyB0cnVlIDogZmFsc2U7XG4gICAgICAgIF90aGlzLnVwZGF0ZUhlYWRlcihwYXJzZUludChlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pbmRleCwgMTApKTtcblxuICAgICAgICBpZiAodXBkYXRlZCkge1xuICAgICAgICAgIF90aGlzLnNldEZpbHRlcigpO1xuXG4gICAgICAgICAgX3RoaXMuZmV0Y2hQdWJsaWNhdGlvbnMoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmhlYWRlcl9uZXh0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLmhlYWRlcl9pbmRleCA8IF90aGlzLmhlYWRlcl9pdGVtcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIF90aGlzLnVwZGF0ZUhlYWRlcihfdGhpcy5oZWFkZXJfaW5kZXggKyAxKTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuc2V0RmlsdGVyKCk7XG5cbiAgICAgIF90aGlzLmZldGNoUHVibGljYXRpb25zKCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmhlYWRlcl9wcmV2LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLmhlYWRlcl9pbmRleCA+PSAxKSB7XG4gICAgICAgIF90aGlzLnVwZGF0ZUhlYWRlcihfdGhpcy5oZWFkZXJfaW5kZXggLSAxKTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuc2V0RmlsdGVyKCk7XG5cbiAgICAgIF90aGlzLmZldGNoUHVibGljYXRpb25zKCk7XG4gICAgfSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUHVibGljYXRpb25zLCBbe1xuICAgIGtleTogJ3VwZGF0ZUhlYWRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZUhlYWRlcihuZXdJbmRleCkge1xuICAgICAgdGhpcy5oZWFkZXJfaXRlbXNbdGhpcy5oZWFkZXJfaW5kZXhdLmNsYXNzTGlzdC5yZW1vdmUoJ2l0ZW0tLWFjdGl2ZScpO1xuXG4gICAgICB0aGlzLmhlYWRlcl9pbmRleCA9IG5ld0luZGV4O1xuICAgICAgdGhpcy5oZWFkZXJfaXRlbXNbdGhpcy5oZWFkZXJfaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2l0ZW0tLWFjdGl2ZScpO1xuXG4gICAgICBpZiAodGhpcy5oZWFkZXJfaW5kZXggPD0gMCkge1xuICAgICAgICB0aGlzLmhlYWRlcl9wcmV2LmNsYXNzTGlzdC5hZGQoJ2hlYWRlcl9fbmF2LS1kaXNhYmxlJyk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaGVhZGVyX2luZGV4ID49IHRoaXMuaGVhZGVyX2l0ZW1zLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgdGhpcy5oZWFkZXJfbmV4dC5jbGFzc0xpc3QuYWRkKCdoZWFkZXJfX25hdi0tZGlzYWJsZScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5oZWFkZXJfbmV4dC5jbGFzc0xpc3QucmVtb3ZlKCdoZWFkZXJfX25hdi0tZGlzYWJsZScpO1xuICAgICAgICB0aGlzLmhlYWRlcl9wcmV2LmNsYXNzTGlzdC5yZW1vdmUoJ2hlYWRlcl9fbmF2LS1kaXNhYmxlJyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmhlYWRlcl9pbmRleCAtIHRoaXMuaGVhZGVyX29mZnNldCA+PSAwKSB7XG4gICAgICAgIHZhciBvZmZzZXQgPSAodGhpcy5oZWFkZXJfaW5kZXggLSB0aGlzLmhlYWRlcl9vZmZzZXQgKyAxKSAqIHRoaXMuaGVhZGVyX29mZnNldFdpZHRoO1xuICAgICAgICB0aGlzLmhlYWRlcl9saXN0LnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKC0nICsgb2Zmc2V0ICsgJ3B4KSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmhlYWRlcl9saXN0LnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKDBweCknO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3NldEZpbHRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldEZpbHRlcigpIHtcbiAgICAgIHRoaXMuZmlsdGVyID0ge1xuICAgICAgICBzbHVnOiB0aGlzLmhlYWRlcl9pdGVtc1t0aGlzLmhlYWRlcl9pbmRleF0uZGF0YXNldC5zbHVnLFxuICAgICAgICB0YXhvbm9teTogdGhpcy5oZWFkZXJfaXRlbXNbdGhpcy5oZWFkZXJfaW5kZXhdLmRhdGFzZXQudGF4b25vbXlcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZmV0Y2hQdWJsaWNhdGlvbnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmZXRjaFB1YmxpY2F0aW9ucygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgYWN0aW9uOiAnZmV0Y2hfcHVibGljYXRpb25zJyxcbiAgICAgICAgZmlsdGVyOiB0aGlzLmZpbHRlclxuICAgICAgfTtcblxuICAgICAgdGhpcy5wb3N0c19jb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgICB0aGlzLmNhcmRfbG9hZGluZy5jbGFzc0xpc3QucmVtb3ZlKCdjYXJkLS1oaWRlJyk7XG5cbiAgICAgIF9heGlvczIuZGVmYXVsdC5wb3N0KGFqYXh1cmwsIF9xczIuZGVmYXVsdC5zdHJpbmdpZnkoZGF0YSkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIF90aGlzMi5jYXJkX2xvYWRpbmcuY2xhc3NMaXN0LmFkZCgnY2FyZC0taGlkZScpO1xuICAgICAgICBfdGhpczIucG9zdHNfY29udGFpbmVyLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgcmVzcG9uc2UuZGF0YS5kYXRhLnBvc3RzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQdWJsaWNhdGlvbnM7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFB1YmxpY2F0aW9ucztcblxufSx7XCJheGlvc1wiOjksXCJxc1wiOjM3fV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfYXhpb3MgPSByZXF1aXJlKCdheGlvcycpO1xuXG52YXIgX2F4aW9zMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2F4aW9zKTtcblxudmFyIF9xcyA9IHJlcXVpcmUoJ3FzJyk7XG5cbnZhciBfcXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgUmVzdWx0cyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUmVzdWx0cyhjb250YWluZXIpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlc3VsdHMpO1xuXG4gICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XG4gICAgdGhpcy5yZXN1bHRzX2J1dHRvbnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmhlYWRlcl9fc3dpdGNoJyk7XG4gICAgdGhpcy5yZXN1bHRzX2NvdW50ID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5oZWFkZXJfX2J1dHRvbiBzcGFuJyk7XG5cbiAgICB0aGlzLnJlc3VsdHNfdGFicyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcubGlzdF9fY29udGFpbmVyJyk7XG4gICAgdGhpcy5yZXN1bHRzX2NvbnRhaW5lciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcubGlzdCcpO1xuXG4gICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5yZXN1bHRzX19zZWxlY3RlZC1maWx0ZXJzJyk7XG4gICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkX2NvbnRhaW5lciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuc2VsZWN0ZWRfX2NvbnRhaW5lcicpO1xuICAgIHRoaXMucmVzdWx0c19zZWxlY3RlZF9kZWxldGUgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkX19kZWxldGUnKTtcbiAgICB0aGlzLnJlc3VsdHNfc2VsZWN0ZWRfbW9kZWwgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLml0ZW0tLW1vZGVsJyk7XG4gICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkX2l0ZW1zID0gW107XG5cbiAgICB0aGlzLmZpbHRlcnNfdmlzaWJpbGl0eSA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19idXR0b24tLWZpbHRlcicpO1xuICAgIHRoaXMuZmlsdGVyc19jb250YWluZXIgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLnJlc3VsdHNfX2ZpbHRlcnMnKTtcbiAgICB0aGlzLmZpbHRlcnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmZpbHRlcicpO1xuXG4gICAgdGhpcy5jb250YWluZXJUb0ZpeCA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcudGF4b25vbXktZml4Jyk7XG5cbiAgICB0aGlzLmNhcmRzX2xvYWRpbmcgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmNhcmQtLWxvYWRpbmcnKTtcbiAgICB0aGlzLmNhcmRzX25vX3Jlc3VsdHMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmNhcmQtLW5vLXJlc3VsdCcpO1xuXG4gICAgdGhpcy5zZWxlY3RlZF90YWIgPSAwO1xuICAgIHRoaXMuc2VsZWN0ZWRfZmlsdGVycyA9IFtdO1xuICAgIHRoaXMuYXZhaWxhYmxlX2ZpbHRlcnMgPSBbXTtcblxuICAgIHRoaXMucmVzdWx0c19idXR0b25zLmZvckVhY2goZnVuY3Rpb24gKGJ1dHRvbikge1xuICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgX3RoaXMuc2V0VGFicyhlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pbmRleCk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHRoaXMuZmlsdGVyc192aXNpYmlsaXR5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuZmlsdGVyc19jb250YWluZXIuY2xhc3NMaXN0LnRvZ2dsZSgncmVzdWx0c19fZmlsdGVycy0tYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNvbnRhaW5lclRvRml4LmZvckVhY2goZnVuY3Rpb24gKGNvbnQpIHtcbiAgICAgIHZhciBfY29udCRxdWVyeVNlbGVjdG9yJGcgPSBjb250LnF1ZXJ5U2VsZWN0b3IoJ2xpJykuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICAgICAgd2lkdGggPSBfY29udCRxdWVyeVNlbGVjdG9yJGcud2lkdGg7XG5cbiAgICAgIGNvbnQuc3R5bGUud2lkdGggPSB3aWR0aCAqIDIgKyAncHgnO1xuICAgIH0pO1xuXG4gICAgdGhpcy5maWx0ZXJzLmZvckVhY2goZnVuY3Rpb24gKGZpbHRlcikge1xuICAgICAgZmlsdGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgX3RoaXMudG9nZ2xlRmlsdGVyKGUuY3VycmVudFRhcmdldCk7XG4gICAgICAgIF90aGlzLnNlYXJjaCgpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnJlc3VsdHNfc2VsZWN0ZWRfZGVsZXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuY2xlYXJGaWx0ZXIoKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhSZXN1bHRzLCBbe1xuICAgIGtleTogJ3NldFRhYnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRUYWJzKGluZGV4KSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3RlZF90YWIgIT09IGluZGV4KSB7XG4gICAgICAgIHRoaXMucmVzdWx0c190YWJzW3RoaXMuc2VsZWN0ZWRfdGFiXS5jbGFzc0xpc3QucmVtb3ZlKCdsaXN0X19jb250YWluZXItLWFjdGl2ZScpO1xuICAgICAgICB0aGlzLnJlc3VsdHNfYnV0dG9uc1t0aGlzLnNlbGVjdGVkX3RhYl0uY2xhc3NMaXN0LnJlbW92ZSgnaGVhZGVyX19idXR0b24tLWFjdGl2ZScpO1xuXG4gICAgICAgIHRoaXMucmVzdWx0c190YWJzW2luZGV4XS5jbGFzc0xpc3QuYWRkKCdsaXN0X19jb250YWluZXItLWFjdGl2ZScpO1xuICAgICAgICB0aGlzLnJlc3VsdHNfYnV0dG9uc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnaGVhZGVyX19idXR0b24tLWFjdGl2ZScpO1xuXG4gICAgICAgIHRoaXMuc2VsZWN0ZWRfdGFiID0gaW5kZXg7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndG9nZ2xlRmlsdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlRmlsdGVyKGVsZW1lbnQpIHtcbiAgICAgIHZhciBmaWx0ZXIgPSB7XG4gICAgICAgIHNsdWc6IGVsZW1lbnQuZGF0YXNldC5zbHVnLFxuICAgICAgICB0YXhvbm9teTogZWxlbWVudC5kYXRhc2V0LnRheG9ub215LFxuICAgICAgICBuYW1lOiBlbGVtZW50LmRhdGFzZXQubmFtZVxuICAgICAgfTtcbiAgICAgIGlmICghZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZpbHRlci0tYWN0aXZlJykpIHtcbiAgICAgICAgdGhpcy5zZWxlY3RlZF9maWx0ZXJzLnB1c2goZmlsdGVyKTtcbiAgICAgICAgdGhpcy5hZGRGaWx0ZXIoZmlsdGVyKTtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdmaWx0ZXItLWFjdGl2ZScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5yZW1vdmVGaWx0ZXIoZmlsdGVyKTtcbiAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdmaWx0ZXItLWFjdGl2ZScpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2FkZEZpbHRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZEZpbHRlcihmaWx0ZXIpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgZWxlbWVudCA9IHRoaXMucmVzdWx0c19zZWxlY3RlZF9tb2RlbC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pdGVtX19sYWJlbCcpLnRleHRDb250ZW50ID0gZmlsdGVyLm5hbWU7XG4gICAgICBlbGVtZW50LmRhdGFzZXQuc2x1ZyA9IGZpbHRlci5zbHVnO1xuICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdpdGVtLS1tb2RlbCcpO1xuXG4gICAgICB0aGlzLnJlc3VsdHNfc2VsZWN0ZWRfY29udGFpbmVyLmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkX2l0ZW1zLnB1c2goZWxlbWVudCk7XG5cbiAgICAgIGVsZW1lbnQucXVlcnlTZWxlY3RvcignLml0ZW1fX2RlbGV0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIGZpbCA9IHtcbiAgICAgICAgICBzbHVnOiBlLmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5kYXRhc2V0LnNsdWcsXG4gICAgICAgICAgdGF4b25vbXk6IGUuY3VycmVudFRhcmdldC5wYXJlbnROb2RlLmRhdGFzZXQudGF4b25vbXksXG4gICAgICAgICAgbmFtZTogZS5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUuZGF0YXNldC5uYW1lXG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMyLnJlbW92ZUZpbHRlcihmaWwpO1xuICAgICAgICBfdGhpczIuc2VhcmNoKCk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuc2V0U2VsZWN0ZWRWaXNpYmlsaXR5KCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlRmlsdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlRmlsdGVyKGZpbHRlcikge1xuICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VsZWN0ZWRfX2l0ZW1bZGF0YS1zbHVnPScgKyBmaWx0ZXIuc2x1ZyArICddJyk7XG4gICAgICBlbGVtZW50LnJlbW92ZSgpO1xuXG4gICAgICB2YXIgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRheG9ub215X19maWx0ZXJzIC5maWx0ZXJbZGF0YS1zbHVnPScgKyBmaWx0ZXIuc2x1ZyArICddJyk7XG4gICAgICBidXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnZmlsdGVyLS1hY3RpdmUnKTtcblxuICAgICAgdmFyIGluZGV4ID0gdGhpcy5zZWxlY3RlZF9maWx0ZXJzLmZpbmRJbmRleChmdW5jdGlvbiAoc2VsZWN0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHNlbGVjdGVkLnNsdWcgPT09IGZpbHRlci5zbHVnICYmIHNlbGVjdGVkLnRheG9ub215ID09PSBmaWx0ZXIudGF4b25vbXk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuc2VsZWN0ZWRfZmlsdGVycy5zcGxpY2UoaW5kZXgsIDEpO1xuXG4gICAgICB0aGlzLnNldFNlbGVjdGVkVmlzaWJpbGl0eSgpO1xuICAgICAgdGhpcy51cGRhdGVGaWx0ZXJzVmlzaWJpbGl0eSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NsZWFyRmlsdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXJGaWx0ZXIoKSB7XG4gICAgICB0aGlzLmZpbHRlcnMuZm9yRWFjaChmdW5jdGlvbiAoZmlsdGVyKSB7XG4gICAgICAgIGZpbHRlci5jbGFzc0xpc3QucmVtb3ZlKCdmaWx0ZXItLWFjdGl2ZScpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnNlbGVjdGVkX2ZpbHRlcnMgPSBbXTtcblxuICAgICAgdGhpcy5yZXN1bHRzX3NlbGVjdGVkX2l0ZW1zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgaXRlbS5yZW1vdmUoKTtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLnNldFNlbGVjdGVkVmlzaWJpbGl0eSgpO1xuXG4gICAgICB0aGlzLnNlYXJjaCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3NldFNlbGVjdGVkVmlzaWJpbGl0eScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldFNlbGVjdGVkVmlzaWJpbGl0eSgpIHtcbiAgICAgIGlmICh0aGlzLnNlbGVjdGVkX2ZpbHRlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLnJlc3VsdHNfc2VsZWN0ZWQuY2xhc3NMaXN0LmFkZCgncmVzdWx0c19fc2VsZWN0ZWQtZmlsdGVycy0tYWN0aXZlJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnJlc3VsdHNfc2VsZWN0ZWQuY2xhc3NMaXN0LnJlbW92ZSgncmVzdWx0c19fc2VsZWN0ZWQtZmlsdGVycy0tYWN0aXZlJyk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlRmlsdGVyc1Zpc2liaWxpdHknLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVGaWx0ZXJzVmlzaWJpbGl0eSgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB0aGlzLmZpbHRlcnMuZm9yRWFjaChmdW5jdGlvbiAoZmlsdGVyKSB7XG4gICAgICAgIGlmIChfdGhpczMuYXZhaWxhYmxlX2ZpbHRlcnMuaW5kZXhPZihmaWx0ZXIuZGF0YXNldC5zbHVnKSA9PT0gLTEpIHtcbiAgICAgICAgICBmaWx0ZXIuY2xhc3NMaXN0LmFkZCgnZmlsdGVyLS1pbmFjdGl2ZScpO1xuICAgICAgICAgIGZpbHRlci5jbGFzc0xpc3QucmVtb3ZlKCdmaWx0ZXItLWFjdGl2ZScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZpbHRlci5jbGFzc0xpc3QucmVtb3ZlKCdmaWx0ZXItLWluYWN0aXZlJyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3NlYXJjaCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNlYXJjaCgpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB2YXIgZGF0YSA9IHtcbiAgICAgICAgYWN0aW9uOiAnc2VhcmNoX2ZpbHRlcnMnLFxuICAgICAgICBxdWVyeTogc2VhcmNocXVlcnksXG4gICAgICAgIGZpbHRlcnM6IHRoaXMuc2VsZWN0ZWRfZmlsdGVyc1xuICAgICAgfTtcblxuICAgICAgdGhpcy5yZXN1bHRzX2NvbnRhaW5lci5mb3JFYWNoKGZ1bmN0aW9uIChjb250YWluZXIpIHtcbiAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuY2FyZHNfbG9hZGluZy5mb3JFYWNoKGZ1bmN0aW9uIChjYXJkKSB7XG4gICAgICAgIGNhcmQuY2xhc3NMaXN0LnJlbW92ZSgnY2FyZC0taGlkZScpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmNhcmRzX25vX3Jlc3VsdHMuZm9yRWFjaChmdW5jdGlvbiAoY2FyZCkge1xuICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ2NhcmQtLWhpZGUnKTtcbiAgICAgIH0pO1xuXG4gICAgICBfYXhpb3MyLmRlZmF1bHQucG9zdChhamF4dXJsLCBfcXMyLmRlZmF1bHQuc3RyaW5naWZ5KGRhdGEpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICBfdGhpczQuY2FyZHNfbG9hZGluZy5mb3JFYWNoKGZ1bmN0aW9uIChjYXJkKSB7XG4gICAgICAgICAgY2FyZC5jbGFzc0xpc3QuYWRkKCdjYXJkLS1oaWRlJyk7XG4gICAgICAgIH0pO1xuICAgICAgICBfdGhpczQucmVzdWx0c19jb250YWluZXIuZm9yRWFjaChmdW5jdGlvbiAoY29udGFpbmVyLCBpbmRleCkge1xuICAgICAgICAgIF90aGlzNC5yZXN1bHRzX2NvdW50W2luZGV4XS5pbm5lckhUTUwgPSByZXNwb25zZS5kYXRhLmRhdGEucmVzdWx0c1tpbmRleF0ubGVuZ3RoO1xuICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZGF0YS5yZXN1bHRzW2luZGV4XS5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGNvbnRhaW5lci5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHJlc3VsdCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5kYXRhLnJlc3VsdHNbaW5kZXhdLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgX3RoaXM0LmNhcmRzX25vX3Jlc3VsdHNbaW5kZXhdLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcmQtLWhpZGUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF90aGlzNC5hdmFpbGFibGVfZmlsdGVycyA9IHJlc3BvbnNlLmRhdGEuZGF0YS5hdmFpbGFibGVfZmlsdGVycztcbiAgICAgICAgX3RoaXM0LnVwZGF0ZUZpbHRlcnNWaXNpYmlsaXR5KCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVzdWx0cztcbn0oKTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZXN1bHRzO1xuXG59LHtcImF4aW9zXCI6OSxcInFzXCI6Mzd9XSw2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFJ1YnJpY3MgPSBmdW5jdGlvbiBSdWJyaWNzKGNvbnRhaW5lcikge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIHZhciBkZXNrdG9wID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0cnVlO1xuXG4gIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSdWJyaWNzKTtcblxuICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgdGhpcy5idXR0b25zID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5pdGVtX19idXR0b24nKTtcbiAgdGhpcy53cmFwcGVycyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcuaXRlbV9fd3JhcHBlcicpO1xuICB0aGlzLmxhc3RfaW5kZXggPSBudWxsO1xuICB0aGlzLmRlc2t0b3AgPSBkZXNrdG9wO1xuXG4gIHRoaXMuYnV0dG9ucy5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdmFyIGluZGV4ID0gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChfdGhpcy5idXR0b25zLCBidXR0b24pO1xuXG4gICAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCA3MDApIHtcbiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21vYmlsZS1hY3RpdmUnKTtcbiAgICAgICAgX3RoaXMud3JhcHBlcnNbaW5kZXhdLnN0eWxlLmhlaWdodCA9IF90aGlzLndyYXBwZXJzW2luZGV4XS5jaGlsZEVsZW1lbnRDb3VudCAqIDYwICsgJ3B4JztcbiAgICAgICAgX3RoaXMuY29udGFpbmVyLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ3N0YXJ0JywgaW5saW5lOiAnbmVhcmVzdCcgfSk7XG5cbiAgICAgICAgX3RoaXMud3JhcHBlcnMuZm9yRWFjaChmdW5jdGlvbiAod3JhcHBlciwgaSkge1xuICAgICAgICAgIGlmIChpICE9PSBpbmRleCB8fCBpbmRleCA9PT0gX3RoaXMubGFzdF9pbmRleCkge1xuICAgICAgICAgICAgd3JhcHBlci5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgnaGVpZ2h0Jyk7XG4gICAgICAgICAgICBfdGhpcy5idXR0b25zW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ21vYmlsZS1hY3RpdmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChkZXNrdG9wKSB7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdkZXNrdG9wLWFjdGl2ZScpO1xuICAgICAgICBfdGhpcy53cmFwcGVyc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnZGVza3RvcC1hY3RpdmUnKTtcblxuICAgICAgICBfdGhpcy53cmFwcGVycy5mb3JFYWNoKGZ1bmN0aW9uICh3cmFwcGVyLCBpKSB7XG4gICAgICAgICAgX3RoaXMud3JhcHBlcnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnbW9iaWxlLWFjdGl2ZScpO1xuICAgICAgICAgIF90aGlzLmJ1dHRvbnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnbW9iaWxlLWFjdGl2ZScpO1xuICAgICAgICAgIHdyYXBwZXIuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ2hlaWdodCcpO1xuICAgICAgICAgIGlmIChpICE9PSBpbmRleCkge1xuICAgICAgICAgICAgX3RoaXMud3JhcHBlcnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnZGVza3RvcC1hY3RpdmUnKTtcbiAgICAgICAgICAgIF90aGlzLmJ1dHRvbnNbaV0uY2xhc3NMaXN0LnJlbW92ZSgnZGVza3RvcC1hY3RpdmUnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5sYXN0X2luZGV4ID0gX3RoaXMubGFzdF9pbmRleCA9PT0gaW5kZXggPyBudWxsIDogaW5kZXg7XG4gICAgfSk7XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSdWJyaWNzO1xuXG59LHt9XSw3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFRheG9ub215VGFicyA9IGZ1bmN0aW9uIFRheG9ub215VGFicyhjb250YWluZXIpIHtcbiAgdmFyIF90aGlzID0gdGhpcztcblxuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGF4b25vbXlUYWJzKTtcblxuICB0aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgdGhpcy50YWJzID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ3NlY3Rpb24ucmVsYXRlZF9fc2VjdGlvbicpO1xuICB0aGlzLmJ1dHRvbnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uLmhlYWRlcl9fYnV0dG9uJyk7XG4gIHRoaXMud3JhcHBlciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucmVsYXRlZF9fY29udGFpbmVyJyk7XG4gIHRoaXMucmV0dXJuID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5yZWxhdGVkX19yZXR1cm4nKTtcbiAgdGhpcy50YWJzV3JhcHBlciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucmVsYXRlZF9fd3JhcHBlcicpO1xuICB0aGlzLmxhc3RfaW5kZXggPSAwO1xuXG4gIHRoaXMuYnV0dG9ucy5mb3JFYWNoKGZ1bmN0aW9uIChidXR0b24pIHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyIGluZGV4ID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaW5kZXg7XG5cblxuICAgICAgaWYgKGluZGV4ICE9PSBfdGhpcy5sYXN0X2luZGV4KSB7XG4gICAgICAgIF90aGlzLmJ1dHRvbnNbX3RoaXMubGFzdF9pbmRleF0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICAgIF90aGlzLnRhYnNbX3RoaXMubGFzdF9pbmRleF0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG5cbiAgICAgICAgX3RoaXMuYnV0dG9uc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgICAgIF90aGlzLnRhYnNbaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuXG4gICAgICAgIF90aGlzLmxhc3RfaW5kZXggPSBpbmRleDtcbiAgICAgIH1cblxuICAgICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoIDw9IDcwMCkge1xuICAgICAgICBfdGhpcy53cmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRhaW5lci0tc2xpZGUnKTtcbiAgICAgICAgX3RoaXMudGFic1dyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZSgnd3JhcHBlci0taGlkZScpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxuICB0aGlzLnJldHVybi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPD0gNzAwKSB7XG4gICAgICBfdGhpcy53cmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2NvbnRhaW5lci0tc2xpZGUnKTtcbiAgICAgIF90aGlzLnRhYnNXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3dyYXBwZXItLWhpZGUnKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBUYXhvbm9teVRhYnM7XG5cbn0se31dLDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX0hlYWRlciA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9IZWFkZXInKTtcblxudmFyIF9IZWFkZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfSGVhZGVyKTtcblxudmFyIF9SdWJyaWNzID0gcmVxdWlyZSgnLi9DbGFzc2VzL1J1YnJpY3MnKTtcblxudmFyIF9SdWJyaWNzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1J1YnJpY3MpO1xuXG52YXIgX1RheG9ub215VGFicyA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9UYXhvbm9teVRhYnMnKTtcblxudmFyIF9UYXhvbm9teVRhYnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVGF4b25vbXlUYWJzKTtcblxudmFyIF9Mb2FkTW9yZSA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9Mb2FkTW9yZScpO1xuXG52YXIgX0xvYWRNb3JlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0xvYWRNb3JlKTtcblxudmFyIF9SZXN1bHRzID0gcmVxdWlyZSgnLi9DbGFzc2VzL1Jlc3VsdHMnKTtcblxudmFyIF9SZXN1bHRzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX1Jlc3VsdHMpO1xuXG52YXIgX1B1YmxpY2F0aW9ucyA9IHJlcXVpcmUoJy4vQ2xhc3Nlcy9QdWJsaWNhdGlvbnMnKTtcblxudmFyIF9QdWJsaWNhdGlvbnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfUHVibGljYXRpb25zKTtcblxudmFyIF9NZW1iZXIgPSByZXF1aXJlKCcuL0NsYXNzZXMvTWVtYmVyJyk7XG5cbnZhciBfTWVtYmVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX01lbWJlcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBoZWFkZXIgPSBuZXcgX0hlYWRlcjIuZGVmYXVsdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2l0ZS1oZWFkZXInKSk7XG5cbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaG9tZS1zZWN0aW9uLnJ1YnJpY3MnKSkge1xuICB2YXIgaG9tZVJ1YnJpY3MgPSBuZXcgX1J1YnJpY3MyLmRlZmF1bHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhvbWUtc2VjdGlvbi5ydWJyaWNzJyksIHRydWUpO1xufVxuXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRheG9ub215X19yZWxhdGVkJykpIHtcbiAgdmFyIHRhYnMgPSBuZXcgX1RheG9ub215VGFiczIuZGVmYXVsdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGF4b25vbXlfX3JlbGF0ZWQnKSk7XG59XG5cbmlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZS1ydWJyaWNzJykpIHtcbiAgdmFyIHBhZ2VSdWJyaWNzID0gbmV3IF9SdWJyaWNzMi5kZWZhdWx0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlLXJ1YnJpY3MnKSwgZmFsc2UpO1xufVxuXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnB1YmxpY2F0aW9uX19jb250YWluZXInKSkge1xuICB2YXIgbG9hZE1vcmUgPSBuZXcgX0xvYWRNb3JlMi5kZWZhdWx0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wdWJsaWNhdGlvbl9fY29udGFpbmVyJykpO1xufVxuXG5pZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJlc3VsdHMnKSkge1xuICB2YXIgcmVzdWx0cyA9IG5ldyBfUmVzdWx0czIuZGVmYXVsdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVzdWx0cycpKTtcbn1cblxuaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wdWJsaWNhdGlvbnMnKSkge1xuICB2YXIgcHVibGljYXRpb25zID0gbmV3IF9QdWJsaWNhdGlvbnMyLmRlZmF1bHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnB1YmxpY2F0aW9ucycpKTtcbn1cblxuaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tZW1iZXInKSkge1xuICB2YXIgbWVtYmVyID0gbmV3IF9NZW1iZXIyLmRlZmF1bHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbWJlcicpKTtcbn1cblxufSx7XCIuL0NsYXNzZXMvSGVhZGVyXCI6MSxcIi4vQ2xhc3Nlcy9Mb2FkTW9yZVwiOjIsXCIuL0NsYXNzZXMvTWVtYmVyXCI6MyxcIi4vQ2xhc3Nlcy9QdWJsaWNhdGlvbnNcIjo0LFwiLi9DbGFzc2VzL1Jlc3VsdHNcIjo1LFwiLi9DbGFzc2VzL1J1YnJpY3NcIjo2LFwiLi9DbGFzc2VzL1RheG9ub215VGFic1wiOjd9XSw5OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTtcbn0se1wiLi9saWIvYXhpb3NcIjoxMX1dLDEwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbihmdW5jdGlvbiAocHJvY2Vzcyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBwYXJzZUhlYWRlcnMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvcGFyc2VIZWFkZXJzJyk7XG52YXIgaXNVUkxTYW1lT3JpZ2luID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbicpO1xudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi4vY29yZS9jcmVhdGVFcnJvcicpO1xudmFyIGJ0b2EgPSAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmJ0b2EgJiYgd2luZG93LmJ0b2EuYmluZCh3aW5kb3cpKSB8fCByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnRvYScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHhockFkYXB0ZXIoY29uZmlnKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiBkaXNwYXRjaFhoclJlcXVlc3QocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIHJlcXVlc3REYXRhID0gY29uZmlnLmRhdGE7XG4gICAgdmFyIHJlcXVlc3RIZWFkZXJzID0gY29uZmlnLmhlYWRlcnM7XG5cbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShyZXF1ZXN0RGF0YSkpIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1snQ29udGVudC1UeXBlJ107IC8vIExldCB0aGUgYnJvd3NlciBzZXQgaXRcbiAgICB9XG5cbiAgICB2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgIHZhciBsb2FkRXZlbnQgPSAnb25yZWFkeXN0YXRlY2hhbmdlJztcbiAgICB2YXIgeERvbWFpbiA9IGZhbHNlO1xuXG4gICAgLy8gRm9yIElFIDgvOSBDT1JTIHN1cHBvcnRcbiAgICAvLyBPbmx5IHN1cHBvcnRzIFBPU1QgYW5kIEdFVCBjYWxscyBhbmQgZG9lc24ndCByZXR1cm5zIHRoZSByZXNwb25zZSBoZWFkZXJzLlxuICAgIC8vIERPTidUIGRvIHRoaXMgZm9yIHRlc3RpbmcgYi9jIFhNTEh0dHBSZXF1ZXN0IGlzIG1vY2tlZCwgbm90IFhEb21haW5SZXF1ZXN0LlxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnICYmXG4gICAgICAgIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICAgIHdpbmRvdy5YRG9tYWluUmVxdWVzdCAmJiAhKCd3aXRoQ3JlZGVudGlhbHMnIGluIHJlcXVlc3QpICYmXG4gICAgICAgICFpc1VSTFNhbWVPcmlnaW4oY29uZmlnLnVybCkpIHtcbiAgICAgIHJlcXVlc3QgPSBuZXcgd2luZG93LlhEb21haW5SZXF1ZXN0KCk7XG4gICAgICBsb2FkRXZlbnQgPSAnb25sb2FkJztcbiAgICAgIHhEb21haW4gPSB0cnVlO1xuICAgICAgcmVxdWVzdC5vbnByb2dyZXNzID0gZnVuY3Rpb24gaGFuZGxlUHJvZ3Jlc3MoKSB7fTtcbiAgICAgIHJlcXVlc3Qub250aW1lb3V0ID0gZnVuY3Rpb24gaGFuZGxlVGltZW91dCgpIHt9O1xuICAgIH1cblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgfHwgJyc7XG4gICAgICByZXF1ZXN0SGVhZGVycy5BdXRob3JpemF0aW9uID0gJ0Jhc2ljICcgKyBidG9hKHVzZXJuYW1lICsgJzonICsgcGFzc3dvcmQpO1xuICAgIH1cblxuICAgIHJlcXVlc3Qub3Blbihjb25maWcubWV0aG9kLnRvVXBwZXJDYXNlKCksIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKSwgdHJ1ZSk7XG5cbiAgICAvLyBTZXQgdGhlIHJlcXVlc3QgdGltZW91dCBpbiBNU1xuICAgIHJlcXVlc3QudGltZW91dCA9IGNvbmZpZy50aW1lb3V0O1xuXG4gICAgLy8gTGlzdGVuIGZvciByZWFkeSBzdGF0ZVxuICAgIHJlcXVlc3RbbG9hZEV2ZW50XSA9IGZ1bmN0aW9uIGhhbmRsZUxvYWQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QgfHwgKHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCAmJiAheERvbWFpbikpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBUaGUgcmVxdWVzdCBlcnJvcmVkIG91dCBhbmQgd2UgZGlkbid0IGdldCBhIHJlc3BvbnNlLCB0aGlzIHdpbGwgYmVcbiAgICAgIC8vIGhhbmRsZWQgYnkgb25lcnJvciBpbnN0ZWFkXG4gICAgICAvLyBXaXRoIG9uZSBleGNlcHRpb246IHJlcXVlc3QgdGhhdCB1c2luZyBmaWxlOiBwcm90b2NvbCwgbW9zdCBicm93c2Vyc1xuICAgICAgLy8gd2lsbCByZXR1cm4gc3RhdHVzIGFzIDAgZXZlbiB0aG91Z2ggaXQncyBhIHN1Y2Nlc3NmdWwgcmVxdWVzdFxuICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzID09PSAwICYmICEocmVxdWVzdC5yZXNwb25zZVVSTCAmJiByZXF1ZXN0LnJlc3BvbnNlVVJMLmluZGV4T2YoJ2ZpbGU6JykgPT09IDApKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gUHJlcGFyZSB0aGUgcmVzcG9uc2VcbiAgICAgIHZhciByZXNwb25zZUhlYWRlcnMgPSAnZ2V0QWxsUmVzcG9uc2VIZWFkZXJzJyBpbiByZXF1ZXN0ID8gcGFyc2VIZWFkZXJzKHJlcXVlc3QuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpIDogbnVsbDtcbiAgICAgIHZhciByZXNwb25zZURhdGEgPSAhY29uZmlnLnJlc3BvbnNlVHlwZSB8fCBjb25maWcucmVzcG9uc2VUeXBlID09PSAndGV4dCcgPyByZXF1ZXN0LnJlc3BvbnNlVGV4dCA6IHJlcXVlc3QucmVzcG9uc2U7XG4gICAgICB2YXIgcmVzcG9uc2UgPSB7XG4gICAgICAgIGRhdGE6IHJlc3BvbnNlRGF0YSxcbiAgICAgICAgLy8gSUUgc2VuZHMgMTIyMyBpbnN0ZWFkIG9mIDIwNCAoaHR0cHM6Ly9naXRodWIuY29tL2F4aW9zL2F4aW9zL2lzc3Vlcy8yMDEpXG4gICAgICAgIHN0YXR1czogcmVxdWVzdC5zdGF0dXMgPT09IDEyMjMgPyAyMDQgOiByZXF1ZXN0LnN0YXR1cyxcbiAgICAgICAgc3RhdHVzVGV4dDogcmVxdWVzdC5zdGF0dXMgPT09IDEyMjMgPyAnTm8gQ29udGVudCcgOiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBsb3cgbGV2ZWwgbmV0d29yayBlcnJvcnNcbiAgICByZXF1ZXN0Lm9uZXJyb3IgPSBmdW5jdGlvbiBoYW5kbGVFcnJvcigpIHtcbiAgICAgIC8vIFJlYWwgZXJyb3JzIGFyZSBoaWRkZW4gZnJvbSB1cyBieSB0aGUgYnJvd3NlclxuICAgICAgLy8gb25lcnJvciBzaG91bGQgb25seSBmaXJlIGlmIGl0J3MgYSBuZXR3b3JrIGVycm9yXG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoJ05ldHdvcmsgRXJyb3InLCBjb25maWcsIG51bGwsIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSB0aW1lb3V0XG4gICAgcmVxdWVzdC5vbnRpbWVvdXQgPSBmdW5jdGlvbiBoYW5kbGVUaW1lb3V0KCkge1xuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCd0aW1lb3V0IG9mICcgKyBjb25maWcudGltZW91dCArICdtcyBleGNlZWRlZCcsIGNvbmZpZywgJ0VDT05OQUJPUlRFRCcsXG4gICAgICAgIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAgIC8vIFNwZWNpZmljYWxseSBub3QgaWYgd2UncmUgaW4gYSB3ZWIgd29ya2VyLCBvciByZWFjdC1uYXRpdmUuXG4gICAgaWYgKHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkpIHtcbiAgICAgIHZhciBjb29raWVzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2Nvb2tpZXMnKTtcblxuICAgICAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gICAgICB2YXIgeHNyZlZhbHVlID0gKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMgfHwgaXNVUkxTYW1lT3JpZ2luKGNvbmZpZy51cmwpKSAmJiBjb25maWcueHNyZkNvb2tpZU5hbWUgP1xuICAgICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgICB1bmRlZmluZWQ7XG5cbiAgICAgIGlmICh4c3JmVmFsdWUpIHtcbiAgICAgICAgcmVxdWVzdEhlYWRlcnNbY29uZmlnLnhzcmZIZWFkZXJOYW1lXSA9IHhzcmZWYWx1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBZGQgaGVhZGVycyB0byB0aGUgcmVxdWVzdFxuICAgIGlmICgnc2V0UmVxdWVzdEhlYWRlcicgaW4gcmVxdWVzdCkge1xuICAgICAgdXRpbHMuZm9yRWFjaChyZXF1ZXN0SGVhZGVycywgZnVuY3Rpb24gc2V0UmVxdWVzdEhlYWRlcih2YWwsIGtleSkge1xuICAgICAgICBpZiAodHlwZW9mIHJlcXVlc3REYXRhID09PSAndW5kZWZpbmVkJyAmJiBrZXkudG9Mb3dlckNhc2UoKSA9PT0gJ2NvbnRlbnQtdHlwZScpIHtcbiAgICAgICAgICAvLyBSZW1vdmUgQ29udGVudC1UeXBlIGlmIGRhdGEgaXMgdW5kZWZpbmVkXG4gICAgICAgICAgZGVsZXRlIHJlcXVlc3RIZWFkZXJzW2tleV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gT3RoZXJ3aXNlIGFkZCBoZWFkZXIgdG8gdGhlIHJlcXVlc3RcbiAgICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoa2V5LCB2YWwpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBBZGQgd2l0aENyZWRlbnRpYWxzIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMpIHtcbiAgICAgIHJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBBZGQgcmVzcG9uc2VUeXBlIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gY29uZmlnLnJlc3BvbnNlVHlwZTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gRXhwZWN0ZWQgRE9NRXhjZXB0aW9uIHRocm93biBieSBicm93c2VycyBub3QgY29tcGF0aWJsZSBYTUxIdHRwUmVxdWVzdCBMZXZlbCAyLlxuICAgICAgICAvLyBCdXQsIHRoaXMgY2FuIGJlIHN1cHByZXNzZWQgZm9yICdqc29uJyB0eXBlIGFzIGl0IGNhbiBiZSBwYXJzZWQgYnkgZGVmYXVsdCAndHJhbnNmb3JtUmVzcG9uc2UnIGZ1bmN0aW9uLlxuICAgICAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSAhPT0gJ2pzb24nKSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhhbmRsZSBwcm9ncmVzcyBpZiBuZWVkZWRcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25Eb3dubG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICAvLyBOb3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgdXBsb2FkIGV2ZW50c1xuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicgJiYgcmVxdWVzdC51cGxvYWQpIHtcbiAgICAgIHJlcXVlc3QudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICAgIC8vIEhhbmRsZSBjYW5jZWxsYXRpb25cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbi5wcm9taXNlLnRoZW4oZnVuY3Rpb24gb25DYW5jZWxlZChjYW5jZWwpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZWplY3QoY2FuY2VsKTtcbiAgICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChyZXF1ZXN0RGF0YSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXF1ZXN0RGF0YSA9IG51bGw7XG4gICAgfVxuXG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdFxuICAgIHJlcXVlc3Quc2VuZChyZXF1ZXN0RGF0YSk7XG4gIH0pO1xufTtcblxufSkuY2FsbCh0aGlzLHJlcXVpcmUoJ19wcm9jZXNzJykpXG5cbn0se1wiLi4vY29yZS9jcmVhdGVFcnJvclwiOjE3LFwiLi8uLi9jb3JlL3NldHRsZVwiOjIwLFwiLi8uLi9oZWxwZXJzL2J0b2FcIjoyNCxcIi4vLi4vaGVscGVycy9idWlsZFVSTFwiOjI1LFwiLi8uLi9oZWxwZXJzL2Nvb2tpZXNcIjoyNyxcIi4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW5cIjoyOSxcIi4vLi4vaGVscGVycy9wYXJzZUhlYWRlcnNcIjozMSxcIi4vLi4vdXRpbHNcIjozMyxcIl9wcm9jZXNzXCI6MzV9XSwxMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcbnZhciBBeGlvcyA9IHJlcXVpcmUoJy4vY29yZS9BeGlvcycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZSh1dGlscy5tZXJnZShkZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuXG59LHtcIi4vY2FuY2VsL0NhbmNlbFwiOjEyLFwiLi9jYW5jZWwvQ2FuY2VsVG9rZW5cIjoxMyxcIi4vY2FuY2VsL2lzQ2FuY2VsXCI6MTQsXCIuL2NvcmUvQXhpb3NcIjoxNSxcIi4vZGVmYXVsdHNcIjoyMixcIi4vaGVscGVycy9iaW5kXCI6MjMsXCIuL2hlbHBlcnMvc3ByZWFkXCI6MzIsXCIuL3V0aWxzXCI6MzN9XSwxMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSBgQ2FuY2VsYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbChtZXNzYWdlKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbkNhbmNlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdDYW5jZWwnICsgKHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJyk7XG59O1xuXG5DYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX18gPSB0cnVlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbDtcblxufSx7fV0sMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2FuY2VsID0gcmVxdWlyZSgnLi9DYW5jZWwnKTtcblxuLyoqXG4gKiBBIGBDYW5jZWxUb2tlbmAgaXMgYW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVxdWVzdCBjYW5jZWxsYXRpb24gb2YgYW4gb3BlcmF0aW9uLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZXhlY3V0b3IgVGhlIGV4ZWN1dG9yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBDYW5jZWxUb2tlbihleGVjdXRvcikge1xuICBpZiAodHlwZW9mIGV4ZWN1dG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIHJlc29sdmVQcm9taXNlO1xuICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBwcm9taXNlRXhlY3V0b3IocmVzb2x2ZSkge1xuICAgIHJlc29sdmVQcm9taXNlID0gcmVzb2x2ZTtcbiAgfSk7XG5cbiAgdmFyIHRva2VuID0gdGhpcztcbiAgZXhlY3V0b3IoZnVuY3Rpb24gY2FuY2VsKG1lc3NhZ2UpIHtcbiAgICBpZiAodG9rZW4ucmVhc29uKSB7XG4gICAgICAvLyBDYW5jZWxsYXRpb24gaGFzIGFscmVhZHkgYmVlbiByZXF1ZXN0ZWRcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0b2tlbi5yZWFzb24gPSBuZXcgQ2FuY2VsKG1lc3NhZ2UpO1xuICAgIHJlc29sdmVQcm9taXNlKHRva2VuLnJlYXNvbik7XG4gIH0pO1xufVxuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKi9cbkNhbmNlbFRva2VuLnByb3RvdHlwZS50aHJvd0lmUmVxdWVzdGVkID0gZnVuY3Rpb24gdGhyb3dJZlJlcXVlc3RlZCgpIHtcbiAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgdGhyb3cgdGhpcy5yZWFzb247XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG5ldyBgQ2FuY2VsVG9rZW5gIGFuZCBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLFxuICogY2FuY2VscyB0aGUgYENhbmNlbFRva2VuYC5cbiAqL1xuQ2FuY2VsVG9rZW4uc291cmNlID0gZnVuY3Rpb24gc291cmNlKCkge1xuICB2YXIgY2FuY2VsO1xuICB2YXIgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgIGNhbmNlbCA9IGM7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHRva2VuOiB0b2tlbixcbiAgICBjYW5jZWw6IGNhbmNlbFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWxUb2tlbjtcblxufSx7XCIuL0NhbmNlbFwiOjEyfV0sMTQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn07XG5cbn0se31dLDE1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi8uLi9kZWZhdWx0cycpO1xudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIEludGVyY2VwdG9yTWFuYWdlciA9IHJlcXVpcmUoJy4vSW50ZXJjZXB0b3JNYW5hZ2VyJyk7XG52YXIgZGlzcGF0Y2hSZXF1ZXN0ID0gcmVxdWlyZSgnLi9kaXNwYXRjaFJlcXVlc3QnKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaW5zdGFuY2VDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gQXhpb3MoaW5zdGFuY2VDb25maWcpIHtcbiAgdGhpcy5kZWZhdWx0cyA9IGluc3RhbmNlQ29uZmlnO1xuICB0aGlzLmludGVyY2VwdG9ycyA9IHtcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKVxuICB9O1xufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyBzcGVjaWZpYyBmb3IgdGhpcyByZXF1ZXN0IChtZXJnZWQgd2l0aCB0aGlzLmRlZmF1bHRzKVxuICovXG5BeGlvcy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAvLyBBbGxvdyBmb3IgYXhpb3MoJ2V4YW1wbGUvdXJsJ1ssIGNvbmZpZ10pIGEgbGEgZmV0Y2ggQVBJXG4gIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuICAgIGNvbmZpZyA9IHV0aWxzLm1lcmdlKHtcbiAgICAgIHVybDogYXJndW1lbnRzWzBdXG4gICAgfSwgYXJndW1lbnRzWzFdKTtcbiAgfVxuXG4gIGNvbmZpZyA9IHV0aWxzLm1lcmdlKGRlZmF1bHRzLCB7bWV0aG9kOiAnZ2V0J30sIHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG4gIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG5cbiAgLy8gSG9vayB1cCBpbnRlcmNlcHRvcnMgbWlkZGxld2FyZVxuICB2YXIgY2hhaW4gPSBbZGlzcGF0Y2hSZXF1ZXN0LCB1bmRlZmluZWRdO1xuICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShjb25maWcpO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbiB1bnNoaWZ0UmVxdWVzdEludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnVuc2hpZnQoaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24gcHVzaFJlc3BvbnNlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4ucHVzaChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgd2hpbGUgKGNoYWluLmxlbmd0aCkge1xuICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oY2hhaW4uc2hpZnQoKSwgY2hhaW4uc2hpZnQoKSk7XG4gIH1cblxuICByZXR1cm4gcHJvbWlzZTtcbn07XG5cbi8vIFByb3ZpZGUgYWxpYXNlcyBmb3Igc3VwcG9ydGVkIHJlcXVlc3QgbWV0aG9kc1xudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdvcHRpb25zJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KHV0aWxzLm1lcmdlKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybFxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCh1dGlscy5tZXJnZShjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG5cbn0se1wiLi8uLi9kZWZhdWx0c1wiOjIyLFwiLi8uLi91dGlsc1wiOjMzLFwiLi9JbnRlcmNlcHRvck1hbmFnZXJcIjoxNixcIi4vZGlzcGF0Y2hSZXF1ZXN0XCI6MTh9XSwxNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gSW50ZXJjZXB0b3JNYW5hZ2VyKCkge1xuICB0aGlzLmhhbmRsZXJzID0gW107XG59XG5cbi8qKlxuICogQWRkIGEgbmV3IGludGVyY2VwdG9yIHRvIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bGZpbGxlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGB0aGVuYCBmb3IgYSBgUHJvbWlzZWBcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHJlamVjdGAgZm9yIGEgYFByb21pc2VgXG4gKlxuICogQHJldHVybiB7TnVtYmVyfSBBbiBJRCB1c2VkIHRvIHJlbW92ZSBpbnRlcmNlcHRvciBsYXRlclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLnVzZSA9IGZ1bmN0aW9uIHVzZShmdWxmaWxsZWQsIHJlamVjdGVkKSB7XG4gIHRoaXMuaGFuZGxlcnMucHVzaCh7XG4gICAgZnVsZmlsbGVkOiBmdWxmaWxsZWQsXG4gICAgcmVqZWN0ZWQ6IHJlamVjdGVkXG4gIH0pO1xuICByZXR1cm4gdGhpcy5oYW5kbGVycy5sZW5ndGggLSAxO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYW4gaW50ZXJjZXB0b3IgZnJvbSB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gaWQgVGhlIElEIHRoYXQgd2FzIHJldHVybmVkIGJ5IGB1c2VgXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZWplY3QgPSBmdW5jdGlvbiBlamVjdChpZCkge1xuICBpZiAodGhpcy5oYW5kbGVyc1tpZF0pIHtcbiAgICB0aGlzLmhhbmRsZXJzW2lkXSA9IG51bGw7XG4gIH1cbn07XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFsbCB0aGUgcmVnaXN0ZXJlZCBpbnRlcmNlcHRvcnNcbiAqXG4gKiBUaGlzIG1ldGhvZCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBza2lwcGluZyBvdmVyIGFueVxuICogaW50ZXJjZXB0b3JzIHRoYXQgbWF5IGhhdmUgYmVjb21lIGBudWxsYCBjYWxsaW5nIGBlamVjdGAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgZm9yIGVhY2ggaW50ZXJjZXB0b3JcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChmbikge1xuICB1dGlscy5mb3JFYWNoKHRoaXMuaGFuZGxlcnMsIGZ1bmN0aW9uIGZvckVhY2hIYW5kbGVyKGgpIHtcbiAgICBpZiAoaCAhPT0gbnVsbCkge1xuICAgICAgZm4oaCk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW50ZXJjZXB0b3JNYW5hZ2VyO1xuXG59LHtcIi4vLi4vdXRpbHNcIjozM31dLDE3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vZW5oYW5jZUVycm9yJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2UsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgdmFyIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICByZXR1cm4gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKTtcbn07XG5cbn0se1wiLi9lbmhhbmNlRXJyb3JcIjoxOX1dLDE4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHRyYW5zZm9ybURhdGEgPSByZXF1aXJlKCcuL3RyYW5zZm9ybURhdGEnKTtcbnZhciBpc0NhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9pc0NhbmNlbCcpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMnKTtcbnZhciBpc0Fic29sdXRlVVJMID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwnKTtcbnZhciBjb21iaW5lVVJMcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKi9cbmZ1bmN0aW9uIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKSB7XG4gIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICBjb25maWcuY2FuY2VsVG9rZW4udGhyb3dJZlJlcXVlc3RlZCgpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRpc3BhdGNoUmVxdWVzdChjb25maWcpIHtcbiAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gIC8vIFN1cHBvcnQgYmFzZVVSTCBjb25maWdcbiAgaWYgKGNvbmZpZy5iYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKGNvbmZpZy51cmwpKSB7XG4gICAgY29uZmlnLnVybCA9IGNvbWJpbmVVUkxzKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgfVxuXG4gIC8vIEVuc3VyZSBoZWFkZXJzIGV4aXN0XG4gIGNvbmZpZy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnMgfHwge307XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgY29uZmlnLmRhdGEsXG4gICAgY29uZmlnLmhlYWRlcnMsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICAvLyBGbGF0dGVuIGhlYWRlcnNcbiAgY29uZmlnLmhlYWRlcnMgPSB1dGlscy5tZXJnZShcbiAgICBjb25maWcuaGVhZGVycy5jb21tb24gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNbY29uZmlnLm1ldGhvZF0gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnMgfHwge31cbiAgKTtcblxuICB1dGlscy5mb3JFYWNoKFxuICAgIFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJywgJ2NvbW1vbiddLFxuICAgIGZ1bmN0aW9uIGNsZWFuSGVhZGVyQ29uZmlnKG1ldGhvZCkge1xuICAgICAgZGVsZXRlIGNvbmZpZy5oZWFkZXJzW21ldGhvZF07XG4gICAgfVxuICApO1xuXG4gIHZhciBhZGFwdGVyID0gY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcjtcblxuICByZXR1cm4gYWRhcHRlcihjb25maWcpLnRoZW4oZnVuY3Rpb24gb25BZGFwdGVyUmVzb2x1dGlvbihyZXNwb25zZSkge1xuICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgcmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgICByZXNwb25zZS5kYXRhLFxuICAgICAgcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0sIGZ1bmN0aW9uIG9uQWRhcHRlclJlamVjdGlvbihyZWFzb24pIHtcbiAgICBpZiAoIWlzQ2FuY2VsKHJlYXNvbikpIHtcbiAgICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICAgIGlmIChyZWFzb24gJiYgcmVhc29uLnJlc3BvbnNlKSB7XG4gICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSxcbiAgICAgICAgICByZWFzb24ucmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVhc29uKTtcbiAgfSk7XG59O1xuXG59LHtcIi4uL2NhbmNlbC9pc0NhbmNlbFwiOjE0LFwiLi4vZGVmYXVsdHNcIjoyMixcIi4vLi4vaGVscGVycy9jb21iaW5lVVJMc1wiOjI2LFwiLi8uLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkxcIjoyOCxcIi4vLi4vdXRpbHNcIjozMyxcIi4vdHJhbnNmb3JtRGF0YVwiOjIxfV0sMTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVwZGF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgY29uZmlnLCBlcnJvciBjb2RlLCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyb3IgVGhlIGVycm9yIHRvIHVwZGF0ZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIGVycm9yLmNvbmZpZyA9IGNvbmZpZztcbiAgaWYgKGNvZGUpIHtcbiAgICBlcnJvci5jb2RlID0gY29kZTtcbiAgfVxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgcmV0dXJuIGVycm9yO1xufTtcblxufSx7fV0sMjA6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCcuL2NyZWF0ZUVycm9yJyk7XG5cbi8qKlxuICogUmVzb2x2ZSBvciByZWplY3QgYSBQcm9taXNlIGJhc2VkIG9uIHJlc3BvbnNlIHN0YXR1cy5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZXNvbHZlIEEgZnVuY3Rpb24gdGhhdCByZXNvbHZlcyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdCBBIGZ1bmN0aW9uIHRoYXQgcmVqZWN0cyB0aGUgcHJvbWlzZS5cbiAqIEBwYXJhbSB7b2JqZWN0fSByZXNwb25zZSBUaGUgcmVzcG9uc2UuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpIHtcbiAgdmFyIHZhbGlkYXRlU3RhdHVzID0gcmVzcG9uc2UuY29uZmlnLnZhbGlkYXRlU3RhdHVzO1xuICAvLyBOb3RlOiBzdGF0dXMgaXMgbm90IGV4cG9zZWQgYnkgWERvbWFpblJlcXVlc3RcbiAgaWYgKCFyZXNwb25zZS5zdGF0dXMgfHwgIXZhbGlkYXRlU3RhdHVzIHx8IHZhbGlkYXRlU3RhdHVzKHJlc3BvbnNlLnN0YXR1cykpIHtcbiAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgfSBlbHNlIHtcbiAgICByZWplY3QoY3JlYXRlRXJyb3IoXG4gICAgICAnUmVxdWVzdCBmYWlsZWQgd2l0aCBzdGF0dXMgY29kZSAnICsgcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgcmVzcG9uc2UuY29uZmlnLFxuICAgICAgbnVsbCxcbiAgICAgIHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICByZXNwb25zZVxuICAgICkpO1xuICB9XG59O1xuXG59LHtcIi4vY3JlYXRlRXJyb3JcIjoxN31dLDIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IGRhdGEgVGhlIGRhdGEgdG8gYmUgdHJhbnNmb3JtZWRcbiAqIEBwYXJhbSB7QXJyYXl9IGhlYWRlcnMgVGhlIGhlYWRlcnMgZm9yIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdHJhbnNmb3JtRGF0YShkYXRhLCBoZWFkZXJzLCBmbnMpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIHV0aWxzLmZvckVhY2goZm5zLCBmdW5jdGlvbiB0cmFuc2Zvcm0oZm4pIHtcbiAgICBkYXRhID0gZm4oZGF0YSwgaGVhZGVycyk7XG4gIH0pO1xuXG4gIHJldHVybiBkYXRhO1xufTtcblxufSx7XCIuLy4uL3V0aWxzXCI6MzN9XSwyMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4oZnVuY3Rpb24gKHByb2Nlc3Mpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgbm9ybWFsaXplSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lJyk7XG5cbnZhciBERUZBVUxUX0NPTlRFTlRfVFlQRSA9IHtcbiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG59O1xuXG5mdW5jdGlvbiBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgdmFsdWUpIHtcbiAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzKSAmJiB1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzWydDb250ZW50LVR5cGUnXSkpIHtcbiAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHZhbHVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCkge1xuICB2YXIgYWRhcHRlcjtcbiAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3IgYnJvd3NlcnMgdXNlIFhIUiBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMveGhyJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gRm9yIG5vZGUgdXNlIEhUVFAgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL2h0dHAnKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuICBhZGFwdGVyOiBnZXREZWZhdWx0QWRhcHRlcigpLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdDb250ZW50LVR5cGUnKTtcbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkgeyAvKiBJZ25vcmUgKi8gfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG5cbiAgdmFsaWRhdGVTdGF0dXM6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHN0YXR1cykge1xuICAgIHJldHVybiBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMDtcbiAgfVxufTtcblxuZGVmYXVsdHMuaGVhZGVycyA9IHtcbiAgY29tbW9uOiB7XG4gICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gIH1cbn07XG5cbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0ge307XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0gdXRpbHMubWVyZ2UoREVGQVVMVF9DT05URU5UX1RZUEUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHM7XG5cbn0pLmNhbGwodGhpcyxyZXF1aXJlKCdfcHJvY2VzcycpKVxuXG59LHtcIi4vYWRhcHRlcnMvaHR0cFwiOjEwLFwiLi9hZGFwdGVycy94aHJcIjoxMCxcIi4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lXCI6MzAsXCIuL3V0aWxzXCI6MzMsXCJfcHJvY2Vzc1wiOjM1fV0sMjM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuXG59LHt9XSwyNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8vIGJ0b2EgcG9seWZpbGwgZm9yIElFPDEwIGNvdXJ0ZXN5IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXZpZGNoYW1iZXJzL0Jhc2U2NC5qc1xuXG52YXIgY2hhcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nO1xuXG5mdW5jdGlvbiBFKCkge1xuICB0aGlzLm1lc3NhZ2UgPSAnU3RyaW5nIGNvbnRhaW5zIGFuIGludmFsaWQgY2hhcmFjdGVyJztcbn1cbkUucHJvdG90eXBlID0gbmV3IEVycm9yO1xuRS5wcm90b3R5cGUuY29kZSA9IDU7XG5FLnByb3RvdHlwZS5uYW1lID0gJ0ludmFsaWRDaGFyYWN0ZXJFcnJvcic7XG5cbmZ1bmN0aW9uIGJ0b2EoaW5wdXQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhpbnB1dCk7XG4gIHZhciBvdXRwdXQgPSAnJztcbiAgZm9yIChcbiAgICAvLyBpbml0aWFsaXplIHJlc3VsdCBhbmQgY291bnRlclxuICAgIHZhciBibG9jaywgY2hhckNvZGUsIGlkeCA9IDAsIG1hcCA9IGNoYXJzO1xuICAgIC8vIGlmIHRoZSBuZXh0IHN0ciBpbmRleCBkb2VzIG5vdCBleGlzdDpcbiAgICAvLyAgIGNoYW5nZSB0aGUgbWFwcGluZyB0YWJsZSB0byBcIj1cIlxuICAgIC8vICAgY2hlY2sgaWYgZCBoYXMgbm8gZnJhY3Rpb25hbCBkaWdpdHNcbiAgICBzdHIuY2hhckF0KGlkeCB8IDApIHx8IChtYXAgPSAnPScsIGlkeCAlIDEpO1xuICAgIC8vIFwiOCAtIGlkeCAlIDEgKiA4XCIgZ2VuZXJhdGVzIHRoZSBzZXF1ZW5jZSAyLCA0LCA2LCA4XG4gICAgb3V0cHV0ICs9IG1hcC5jaGFyQXQoNjMgJiBibG9jayA+PiA4IC0gaWR4ICUgMSAqIDgpXG4gICkge1xuICAgIGNoYXJDb2RlID0gc3RyLmNoYXJDb2RlQXQoaWR4ICs9IDMgLyA0KTtcbiAgICBpZiAoY2hhckNvZGUgPiAweEZGKSB7XG4gICAgICB0aHJvdyBuZXcgRSgpO1xuICAgIH1cbiAgICBibG9jayA9IGJsb2NrIDw8IDggfCBjaGFyQ29kZTtcbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ0b2E7XG5cbn0se31dLDI1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBlbmNvZGUodmFsKSB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodmFsKS5cbiAgICByZXBsYWNlKC8lNDAvZ2ksICdAJykuXG4gICAgcmVwbGFjZSgvJTNBL2dpLCAnOicpLlxuICAgIHJlcGxhY2UoLyUyNC9nLCAnJCcpLlxuICAgIHJlcGxhY2UoLyUyQy9naSwgJywnKS5cbiAgICByZXBsYWNlKC8lMjAvZywgJysnKS5cbiAgICByZXBsYWNlKC8lNUIvZ2ksICdbJykuXG4gICAgcmVwbGFjZSgvJTVEL2dpLCAnXScpO1xufVxuXG4vKipcbiAqIEJ1aWxkIGEgVVJMIGJ5IGFwcGVuZGluZyBwYXJhbXMgdG8gdGhlIGVuZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIGJhc2Ugb2YgdGhlIHVybCAoZS5nLiwgaHR0cDovL3d3dy5nb29nbGUuY29tKVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIFRoZSBwYXJhbXMgdG8gYmUgYXBwZW5kZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkUGFyYW1zO1xuICBpZiAocGFyYW1zU2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXNTZXJpYWxpemVyKHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSkge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFydHMgPSBbXTtcblxuICAgIHV0aWxzLmZvckVhY2gocGFyYW1zLCBmdW5jdGlvbiBzZXJpYWxpemUodmFsLCBrZXkpIHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodXRpbHMuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIGtleSA9IGtleSArICdbXSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWwgPSBbdmFsXTtcbiAgICAgIH1cblxuICAgICAgdXRpbHMuZm9yRWFjaCh2YWwsIGZ1bmN0aW9uIHBhcnNlVmFsdWUodikge1xuICAgICAgICBpZiAodXRpbHMuaXNEYXRlKHYpKSB7XG4gICAgICAgICAgdiA9IHYudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdCh2KSkge1xuICAgICAgICAgIHYgPSBKU09OLnN0cmluZ2lmeSh2KTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0cy5wdXNoKGVuY29kZShrZXkpICsgJz0nICsgZW5jb2RlKHYpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcnRzLmpvaW4oJyYnKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG5cbn0se1wiLi8uLi91dGlsc1wiOjMzfV0sMjY6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgc3BlY2lmaWVkIFVSTHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGl2ZVVSTCBUaGUgcmVsYXRpdmUgVVJMXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgVVJMXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVsYXRpdmVVUkwpIHtcbiAgcmV0dXJuIHJlbGF0aXZlVVJMXG4gICAgPyBiYXNlVVJMLnJlcGxhY2UoL1xcLyskLywgJycpICsgJy8nICsgcmVsYXRpdmVVUkwucmVwbGFjZSgvXlxcLysvLCAnJylcbiAgICA6IGJhc2VVUkw7XG59O1xuXG59LHt9XSwyNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHJldHVybiB7XG4gICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgIGlmICh1dGlscy5pc051bWJlcihleHBpcmVzKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhwYXRoKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhkb21haW4pKSB7XG4gICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzZWN1cmUgPT09IHRydWUpIHtcbiAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICAgIH0sXG5cbiAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICB2YXIgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgfSxcblxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgfVxuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9KSgpXG4pO1xuXG59LHtcIi4vLi4vdXRpbHNcIjozM31dLDI4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuXG59LHt9XSwyOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBoYXZlIGZ1bGwgc3VwcG9ydCBvZiB0aGUgQVBJcyBuZWVkZWQgdG8gdGVzdFxuICAvLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgfVxuXG4gICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICB9O1xuICAgIH1cblxuICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgLyoqXG4gICAgKiBEZXRlcm1pbmUgaWYgYSBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgY3VycmVudCBsb2NhdGlvblxuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0VVJMIFRoZSBVUkwgdG8gdGVzdFxuICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4sIG90aGVyd2lzZSBmYWxzZVxuICAgICovXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7XG4gICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgcmV0dXJuIChwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJlxuICAgICAgICAgICAgcGFyc2VkLmhvc3QgPT09IG9yaWdpblVSTC5ob3N0KTtcbiAgICB9O1xuICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICB9KSgpXG4pO1xuXG59LHtcIi4vLi4vdXRpbHNcIjozM31dLDMwOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcblxufSx7XCIuLi91dGlsc1wiOjMzfV0sMzE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcblxufSx7XCIuLy4uL3V0aWxzXCI6MzN9XSwzMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG5cbn0se31dLDMzOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xudmFyIGlzQnVmZmVyID0gcmVxdWlyZSgnaXMtYnVmZmVyJyk7XG5cbi8qZ2xvYmFsIHRvU3RyaW5nOnRydWUqL1xuXG4vLyB1dGlscyBpcyBhIGxpYnJhcnkgb2YgZ2VuZXJpYyBoZWxwZXIgZnVuY3Rpb25zIG5vbi1zcGVjaWZpYyB0byBheGlvc1xuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXksIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5KHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRm9ybURhdGFcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBGb3JtRGF0YSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRm9ybURhdGEodmFsKSB7XG4gIHJldHVybiAodHlwZW9mIEZvcm1EYXRhICE9PSAndW5kZWZpbmVkJykgJiYgKHZhbCBpbnN0YW5jZW9mIEZvcm1EYXRhKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyh2YWwpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKCh0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnKSAmJiAoQXJyYXlCdWZmZXIuaXNWaWV3KSkge1xuICAgIHJlc3VsdCA9IEFycmF5QnVmZmVyLmlzVmlldyh2YWwpO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9ICh2YWwpICYmICh2YWwuYnVmZmVyKSAmJiAodmFsLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyaW5nXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJpbmcsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgTnVtYmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBOdW1iZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc051bWJlcih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIHVuZGVmaW5lZFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSB2YWx1ZSBpcyB1bmRlZmluZWQsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRGF0ZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRGF0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRGF0ZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRmlsZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRmlsZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRmlsZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRmlsZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgQmxvYlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQmxvYiwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQmxvYih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQmxvYl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEZ1bmN0aW9uLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmVhbVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyZWFtLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJlYW0odmFsKSB7XG4gIHJldHVybiBpc09iamVjdCh2YWwpICYmIGlzRnVuY3Rpb24odmFsLnBpcGUpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVVJMU2VhcmNoUGFyYW1zKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsIGluc3RhbmNlb2YgVVJMU2VhcmNoUGFyYW1zO1xufVxuXG4vKipcbiAqIFRyaW0gZXhjZXNzIHdoaXRlc3BhY2Ugb2ZmIHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiBhIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIFN0cmluZyB0byB0cmltXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgU3RyaW5nIGZyZWVkIG9mIGV4Y2VzcyB3aGl0ZXNwYWNlXG4gKi9cbmZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXlxccyovLCAnJykucmVwbGFjZSgvXFxzKiQvLCAnJyk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICovXG5mdW5jdGlvbiBpc1N0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiByZXN1bHRba2V5XSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBFeHRlbmRzIG9iamVjdCBhIGJ5IG11dGFibHkgYWRkaW5nIHRvIGl0IHRoZSBwcm9wZXJ0aWVzIG9mIG9iamVjdCBiLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhIFRoZSBvYmplY3QgdG8gYmUgZXh0ZW5kZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBiIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb21cbiAqIEBwYXJhbSB7T2JqZWN0fSB0aGlzQXJnIFRoZSBvYmplY3QgdG8gYmluZCBmdW5jdGlvbiB0b1xuICogQHJldHVybiB7T2JqZWN0fSBUaGUgcmVzdWx0aW5nIHZhbHVlIG9mIG9iamVjdCBhXG4gKi9cbmZ1bmN0aW9uIGV4dGVuZChhLCBiLCB0aGlzQXJnKSB7XG4gIGZvckVhY2goYiwgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAodGhpc0FyZyAmJiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhW2tleV0gPSBiaW5kKHZhbCwgdGhpc0FyZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFba2V5XSA9IHZhbDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gYTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzQXJyYXk6IGlzQXJyYXksXG4gIGlzQXJyYXlCdWZmZXI6IGlzQXJyYXlCdWZmZXIsXG4gIGlzQnVmZmVyOiBpc0J1ZmZlcixcbiAgaXNGb3JtRGF0YTogaXNGb3JtRGF0YSxcbiAgaXNBcnJheUJ1ZmZlclZpZXc6IGlzQXJyYXlCdWZmZXJWaWV3LFxuICBpc1N0cmluZzogaXNTdHJpbmcsXG4gIGlzTnVtYmVyOiBpc051bWJlcixcbiAgaXNPYmplY3Q6IGlzT2JqZWN0LFxuICBpc1VuZGVmaW5lZDogaXNVbmRlZmluZWQsXG4gIGlzRGF0ZTogaXNEYXRlLFxuICBpc0ZpbGU6IGlzRmlsZSxcbiAgaXNCbG9iOiBpc0Jsb2IsXG4gIGlzRnVuY3Rpb246IGlzRnVuY3Rpb24sXG4gIGlzU3RyZWFtOiBpc1N0cmVhbSxcbiAgaXNVUkxTZWFyY2hQYXJhbXM6IGlzVVJMU2VhcmNoUGFyYW1zLFxuICBpc1N0YW5kYXJkQnJvd3NlckVudjogaXNTdGFuZGFyZEJyb3dzZXJFbnYsXG4gIGZvckVhY2g6IGZvckVhY2gsXG4gIG1lcmdlOiBtZXJnZSxcbiAgZXh0ZW5kOiBleHRlbmQsXG4gIHRyaW06IHRyaW1cbn07XG5cbn0se1wiLi9oZWxwZXJzL2JpbmRcIjoyMyxcImlzLWJ1ZmZlclwiOjM0fV0sMzQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuLyohXG4gKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIGEgQnVmZmVyXG4gKlxuICogQGF1dGhvciAgIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuXG4vLyBUaGUgX2lzQnVmZmVyIGNoZWNrIGlzIGZvciBTYWZhcmkgNS03IHN1cHBvcnQsIGJlY2F1c2UgaXQncyBtaXNzaW5nXG4vLyBPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yLiBSZW1vdmUgdGhpcyBldmVudHVhbGx5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPSBudWxsICYmIChpc0J1ZmZlcihvYmopIHx8IGlzU2xvd0J1ZmZlcihvYmopIHx8ICEhb2JqLl9pc0J1ZmZlcilcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKG9iaikge1xuICByZXR1cm4gISFvYmouY29uc3RydWN0b3IgJiYgdHlwZW9mIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKVxufVxuXG4vLyBGb3IgTm9kZSB2MC4xMCBzdXBwb3J0LiBSZW1vdmUgdGhpcyBldmVudHVhbGx5LlxuZnVuY3Rpb24gaXNTbG93QnVmZmVyIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmoucmVhZEZsb2F0TEUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG9iai5zbGljZSA9PT0gJ2Z1bmN0aW9uJyAmJiBpc0J1ZmZlcihvYmouc2xpY2UoMCwgMCkpXG59XG5cbn0se31dLDM1OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG5cbn0se31dLDM2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHJlcGxhY2UgPSBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2U7XG52YXIgcGVyY2VudFR3ZW50aWVzID0gLyUyMC9nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAnZGVmYXVsdCc6ICdSRkMzOTg2JyxcbiAgICBmb3JtYXR0ZXJzOiB7XG4gICAgICAgIFJGQzE3Mzg6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlcGxhY2UuY2FsbCh2YWx1ZSwgcGVyY2VudFR3ZW50aWVzLCAnKycpO1xuICAgICAgICB9LFxuICAgICAgICBSRkMzOTg2OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgUkZDMTczODogJ1JGQzE3MzgnLFxuICAgIFJGQzM5ODY6ICdSRkMzOTg2J1xufTtcblxufSx7fV0sMzc6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9zdHJpbmdpZnknKTtcbnZhciBwYXJzZSA9IHJlcXVpcmUoJy4vcGFyc2UnKTtcbnZhciBmb3JtYXRzID0gcmVxdWlyZSgnLi9mb3JtYXRzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGZvcm1hdHM6IGZvcm1hdHMsXG4gICAgcGFyc2U6IHBhcnNlLFxuICAgIHN0cmluZ2lmeTogc3RyaW5naWZ5XG59O1xuXG59LHtcIi4vZm9ybWF0c1wiOjM2LFwiLi9wYXJzZVwiOjM4LFwiLi9zdHJpbmdpZnlcIjozOX1dLDM4OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIGRlZmF1bHRzID0ge1xuICAgIGFsbG93RG90czogZmFsc2UsXG4gICAgYWxsb3dQcm90b3R5cGVzOiBmYWxzZSxcbiAgICBhcnJheUxpbWl0OiAyMCxcbiAgICBkZWNvZGVyOiB1dGlscy5kZWNvZGUsXG4gICAgZGVsaW1pdGVyOiAnJicsXG4gICAgZGVwdGg6IDUsXG4gICAgcGFyYW1ldGVyTGltaXQ6IDEwMDAsXG4gICAgcGxhaW5PYmplY3RzOiBmYWxzZSxcbiAgICBzdHJpY3ROdWxsSGFuZGxpbmc6IGZhbHNlXG59O1xuXG52YXIgcGFyc2VWYWx1ZXMgPSBmdW5jdGlvbiBwYXJzZVF1ZXJ5U3RyaW5nVmFsdWVzKHN0ciwgb3B0aW9ucykge1xuICAgIHZhciBvYmogPSB7fTtcbiAgICB2YXIgY2xlYW5TdHIgPSBvcHRpb25zLmlnbm9yZVF1ZXJ5UHJlZml4ID8gc3RyLnJlcGxhY2UoL15cXD8vLCAnJykgOiBzdHI7XG4gICAgdmFyIGxpbWl0ID0gb3B0aW9ucy5wYXJhbWV0ZXJMaW1pdCA9PT0gSW5maW5pdHkgPyB1bmRlZmluZWQgOiBvcHRpb25zLnBhcmFtZXRlckxpbWl0O1xuICAgIHZhciBwYXJ0cyA9IGNsZWFuU3RyLnNwbGl0KG9wdGlvbnMuZGVsaW1pdGVyLCBsaW1pdCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBwYXJ0ID0gcGFydHNbaV07XG5cbiAgICAgICAgdmFyIGJyYWNrZXRFcXVhbHNQb3MgPSBwYXJ0LmluZGV4T2YoJ109Jyk7XG4gICAgICAgIHZhciBwb3MgPSBicmFja2V0RXF1YWxzUG9zID09PSAtMSA/IHBhcnQuaW5kZXhPZignPScpIDogYnJhY2tldEVxdWFsc1BvcyArIDE7XG5cbiAgICAgICAgdmFyIGtleSwgdmFsO1xuICAgICAgICBpZiAocG9zID09PSAtMSkge1xuICAgICAgICAgICAga2V5ID0gb3B0aW9ucy5kZWNvZGVyKHBhcnQsIGRlZmF1bHRzLmRlY29kZXIpO1xuICAgICAgICAgICAgdmFsID0gb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPyBudWxsIDogJyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBrZXkgPSBvcHRpb25zLmRlY29kZXIocGFydC5zbGljZSgwLCBwb3MpLCBkZWZhdWx0cy5kZWNvZGVyKTtcbiAgICAgICAgICAgIHZhbCA9IG9wdGlvbnMuZGVjb2RlcihwYXJ0LnNsaWNlKHBvcyArIDEpLCBkZWZhdWx0cy5kZWNvZGVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaGFzLmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICBvYmpba2V5XSA9IFtdLmNvbmNhdChvYmpba2V5XSkuY29uY2F0KHZhbCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmpba2V5XSA9IHZhbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBvYmo7XG59O1xuXG52YXIgcGFyc2VPYmplY3QgPSBmdW5jdGlvbiAoY2hhaW4sIHZhbCwgb3B0aW9ucykge1xuICAgIHZhciBsZWFmID0gdmFsO1xuXG4gICAgZm9yICh2YXIgaSA9IGNoYWluLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBvYmo7XG4gICAgICAgIHZhciByb290ID0gY2hhaW5baV07XG5cbiAgICAgICAgaWYgKHJvb3QgPT09ICdbXScpIHtcbiAgICAgICAgICAgIG9iaiA9IFtdO1xuICAgICAgICAgICAgb2JqID0gb2JqLmNvbmNhdChsZWFmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iaiA9IG9wdGlvbnMucGxhaW5PYmplY3RzID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IHt9O1xuICAgICAgICAgICAgdmFyIGNsZWFuUm9vdCA9IHJvb3QuY2hhckF0KDApID09PSAnWycgJiYgcm9vdC5jaGFyQXQocm9vdC5sZW5ndGggLSAxKSA9PT0gJ10nID8gcm9vdC5zbGljZSgxLCAtMSkgOiByb290O1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gcGFyc2VJbnQoY2xlYW5Sb290LCAxMCk7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgIWlzTmFOKGluZGV4KVxuICAgICAgICAgICAgICAgICYmIHJvb3QgIT09IGNsZWFuUm9vdFxuICAgICAgICAgICAgICAgICYmIFN0cmluZyhpbmRleCkgPT09IGNsZWFuUm9vdFxuICAgICAgICAgICAgICAgICYmIGluZGV4ID49IDBcbiAgICAgICAgICAgICAgICAmJiAob3B0aW9ucy5wYXJzZUFycmF5cyAmJiBpbmRleCA8PSBvcHRpb25zLmFycmF5TGltaXQpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICBvYmogPSBbXTtcbiAgICAgICAgICAgICAgICBvYmpbaW5kZXhdID0gbGVhZjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgb2JqW2NsZWFuUm9vdF0gPSBsZWFmO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbGVhZiA9IG9iajtcbiAgICB9XG5cbiAgICByZXR1cm4gbGVhZjtcbn07XG5cbnZhciBwYXJzZUtleXMgPSBmdW5jdGlvbiBwYXJzZVF1ZXJ5U3RyaW5nS2V5cyhnaXZlbktleSwgdmFsLCBvcHRpb25zKSB7XG4gICAgaWYgKCFnaXZlbktleSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVHJhbnNmb3JtIGRvdCBub3RhdGlvbiB0byBicmFja2V0IG5vdGF0aW9uXG4gICAgdmFyIGtleSA9IG9wdGlvbnMuYWxsb3dEb3RzID8gZ2l2ZW5LZXkucmVwbGFjZSgvXFwuKFteLltdKykvZywgJ1skMV0nKSA6IGdpdmVuS2V5O1xuXG4gICAgLy8gVGhlIHJlZ2V4IGNodW5rc1xuXG4gICAgdmFyIGJyYWNrZXRzID0gLyhcXFtbXltcXF1dKl0pLztcbiAgICB2YXIgY2hpbGQgPSAvKFxcW1teW1xcXV0qXSkvZztcblxuICAgIC8vIEdldCB0aGUgcGFyZW50XG5cbiAgICB2YXIgc2VnbWVudCA9IGJyYWNrZXRzLmV4ZWMoa2V5KTtcbiAgICB2YXIgcGFyZW50ID0gc2VnbWVudCA/IGtleS5zbGljZSgwLCBzZWdtZW50LmluZGV4KSA6IGtleTtcblxuICAgIC8vIFN0YXNoIHRoZSBwYXJlbnQgaWYgaXQgZXhpc3RzXG5cbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgLy8gSWYgd2UgYXJlbid0IHVzaW5nIHBsYWluIG9iamVjdHMsIG9wdGlvbmFsbHkgcHJlZml4IGtleXNcbiAgICAgICAgLy8gdGhhdCB3b3VsZCBvdmVyd3JpdGUgb2JqZWN0IHByb3RvdHlwZSBwcm9wZXJ0aWVzXG4gICAgICAgIGlmICghb3B0aW9ucy5wbGFpbk9iamVjdHMgJiYgaGFzLmNhbGwoT2JqZWN0LnByb3RvdHlwZSwgcGFyZW50KSkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmFsbG93UHJvdG90eXBlcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGtleXMucHVzaChwYXJlbnQpO1xuICAgIH1cblxuICAgIC8vIExvb3AgdGhyb3VnaCBjaGlsZHJlbiBhcHBlbmRpbmcgdG8gdGhlIGFycmF5IHVudGlsIHdlIGhpdCBkZXB0aFxuXG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlICgoc2VnbWVudCA9IGNoaWxkLmV4ZWMoa2V5KSkgIT09IG51bGwgJiYgaSA8IG9wdGlvbnMuZGVwdGgpIHtcbiAgICAgICAgaSArPSAxO1xuICAgICAgICBpZiAoIW9wdGlvbnMucGxhaW5PYmplY3RzICYmIGhhcy5jYWxsKE9iamVjdC5wcm90b3R5cGUsIHNlZ21lbnRbMV0uc2xpY2UoMSwgLTEpKSkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmFsbG93UHJvdG90eXBlcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBrZXlzLnB1c2goc2VnbWVudFsxXSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhlcmUncyBhIHJlbWFpbmRlciwganVzdCBhZGQgd2hhdGV2ZXIgaXMgbGVmdFxuXG4gICAgaWYgKHNlZ21lbnQpIHtcbiAgICAgICAga2V5cy5wdXNoKCdbJyArIGtleS5zbGljZShzZWdtZW50LmluZGV4KSArICddJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcnNlT2JqZWN0KGtleXMsIHZhbCwgb3B0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzdHIsIG9wdHMpIHtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgPyB1dGlscy5hc3NpZ24oe30sIG9wdHMpIDoge307XG5cbiAgICBpZiAob3B0aW9ucy5kZWNvZGVyICE9PSBudWxsICYmIG9wdGlvbnMuZGVjb2RlciAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmRlY29kZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRGVjb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBvcHRpb25zLmlnbm9yZVF1ZXJ5UHJlZml4ID0gb3B0aW9ucy5pZ25vcmVRdWVyeVByZWZpeCA9PT0gdHJ1ZTtcbiAgICBvcHRpb25zLmRlbGltaXRlciA9IHR5cGVvZiBvcHRpb25zLmRlbGltaXRlciA9PT0gJ3N0cmluZycgfHwgdXRpbHMuaXNSZWdFeHAob3B0aW9ucy5kZWxpbWl0ZXIpID8gb3B0aW9ucy5kZWxpbWl0ZXIgOiBkZWZhdWx0cy5kZWxpbWl0ZXI7XG4gICAgb3B0aW9ucy5kZXB0aCA9IHR5cGVvZiBvcHRpb25zLmRlcHRoID09PSAnbnVtYmVyJyA/IG9wdGlvbnMuZGVwdGggOiBkZWZhdWx0cy5kZXB0aDtcbiAgICBvcHRpb25zLmFycmF5TGltaXQgPSB0eXBlb2Ygb3B0aW9ucy5hcnJheUxpbWl0ID09PSAnbnVtYmVyJyA/IG9wdGlvbnMuYXJyYXlMaW1pdCA6IGRlZmF1bHRzLmFycmF5TGltaXQ7XG4gICAgb3B0aW9ucy5wYXJzZUFycmF5cyA9IG9wdGlvbnMucGFyc2VBcnJheXMgIT09IGZhbHNlO1xuICAgIG9wdGlvbnMuZGVjb2RlciA9IHR5cGVvZiBvcHRpb25zLmRlY29kZXIgPT09ICdmdW5jdGlvbicgPyBvcHRpb25zLmRlY29kZXIgOiBkZWZhdWx0cy5kZWNvZGVyO1xuICAgIG9wdGlvbnMuYWxsb3dEb3RzID0gdHlwZW9mIG9wdGlvbnMuYWxsb3dEb3RzID09PSAnYm9vbGVhbicgPyBvcHRpb25zLmFsbG93RG90cyA6IGRlZmF1bHRzLmFsbG93RG90cztcbiAgICBvcHRpb25zLnBsYWluT2JqZWN0cyA9IHR5cGVvZiBvcHRpb25zLnBsYWluT2JqZWN0cyA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucy5wbGFpbk9iamVjdHMgOiBkZWZhdWx0cy5wbGFpbk9iamVjdHM7XG4gICAgb3B0aW9ucy5hbGxvd1Byb3RvdHlwZXMgPSB0eXBlb2Ygb3B0aW9ucy5hbGxvd1Byb3RvdHlwZXMgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuYWxsb3dQcm90b3R5cGVzIDogZGVmYXVsdHMuYWxsb3dQcm90b3R5cGVzO1xuICAgIG9wdGlvbnMucGFyYW1ldGVyTGltaXQgPSB0eXBlb2Ygb3B0aW9ucy5wYXJhbWV0ZXJMaW1pdCA9PT0gJ251bWJlcicgPyBvcHRpb25zLnBhcmFtZXRlckxpbWl0IDogZGVmYXVsdHMucGFyYW1ldGVyTGltaXQ7XG4gICAgb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPSB0eXBlb2Ygb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuc3RyaWN0TnVsbEhhbmRsaW5nIDogZGVmYXVsdHMuc3RyaWN0TnVsbEhhbmRsaW5nO1xuXG4gICAgaWYgKHN0ciA9PT0gJycgfHwgc3RyID09PSBudWxsIHx8IHR5cGVvZiBzdHIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBvcHRpb25zLnBsYWluT2JqZWN0cyA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiB7fTtcbiAgICB9XG5cbiAgICB2YXIgdGVtcE9iaiA9IHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnID8gcGFyc2VWYWx1ZXMoc3RyLCBvcHRpb25zKSA6IHN0cjtcbiAgICB2YXIgb2JqID0gb3B0aW9ucy5wbGFpbk9iamVjdHMgPyBPYmplY3QuY3JlYXRlKG51bGwpIDoge307XG5cbiAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIGtleXMgYW5kIHNldHVwIHRoZSBuZXcgb2JqZWN0XG5cbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHRlbXBPYmopO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgdmFyIG5ld09iaiA9IHBhcnNlS2V5cyhrZXksIHRlbXBPYmpba2V5XSwgb3B0aW9ucyk7XG4gICAgICAgIG9iaiA9IHV0aWxzLm1lcmdlKG9iaiwgbmV3T2JqLCBvcHRpb25zKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXRpbHMuY29tcGFjdChvYmopO1xufTtcblxufSx7XCIuL3V0aWxzXCI6NDB9XSwzOTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBmb3JtYXRzID0gcmVxdWlyZSgnLi9mb3JtYXRzJyk7XG5cbnZhciBhcnJheVByZWZpeEdlbmVyYXRvcnMgPSB7XG4gICAgYnJhY2tldHM6IGZ1bmN0aW9uIGJyYWNrZXRzKHByZWZpeCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGZ1bmMtbmFtZS1tYXRjaGluZ1xuICAgICAgICByZXR1cm4gcHJlZml4ICsgJ1tdJztcbiAgICB9LFxuICAgIGluZGljZXM6IGZ1bmN0aW9uIGluZGljZXMocHJlZml4LCBrZXkpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBmdW5jLW5hbWUtbWF0Y2hpbmdcbiAgICAgICAgcmV0dXJuIHByZWZpeCArICdbJyArIGtleSArICddJztcbiAgICB9LFxuICAgIHJlcGVhdDogZnVuY3Rpb24gcmVwZWF0KHByZWZpeCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGZ1bmMtbmFtZS1tYXRjaGluZ1xuICAgICAgICByZXR1cm4gcHJlZml4O1xuICAgIH1cbn07XG5cbnZhciB0b0lTTyA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nO1xuXG52YXIgZGVmYXVsdHMgPSB7XG4gICAgZGVsaW1pdGVyOiAnJicsXG4gICAgZW5jb2RlOiB0cnVlLFxuICAgIGVuY29kZXI6IHV0aWxzLmVuY29kZSxcbiAgICBlbmNvZGVWYWx1ZXNPbmx5OiBmYWxzZSxcbiAgICBzZXJpYWxpemVEYXRlOiBmdW5jdGlvbiBzZXJpYWxpemVEYXRlKGRhdGUpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBmdW5jLW5hbWUtbWF0Y2hpbmdcbiAgICAgICAgcmV0dXJuIHRvSVNPLmNhbGwoZGF0ZSk7XG4gICAgfSxcbiAgICBza2lwTnVsbHM6IGZhbHNlLFxuICAgIHN0cmljdE51bGxIYW5kbGluZzogZmFsc2Vcbn07XG5cbnZhciBzdHJpbmdpZnkgPSBmdW5jdGlvbiBzdHJpbmdpZnkoIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgZnVuYy1uYW1lLW1hdGNoaW5nXG4gICAgb2JqZWN0LFxuICAgIHByZWZpeCxcbiAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgIHN0cmljdE51bGxIYW5kbGluZyxcbiAgICBza2lwTnVsbHMsXG4gICAgZW5jb2RlcixcbiAgICBmaWx0ZXIsXG4gICAgc29ydCxcbiAgICBhbGxvd0RvdHMsXG4gICAgc2VyaWFsaXplRGF0ZSxcbiAgICBmb3JtYXR0ZXIsXG4gICAgZW5jb2RlVmFsdWVzT25seVxuKSB7XG4gICAgdmFyIG9iaiA9IG9iamVjdDtcbiAgICBpZiAodHlwZW9mIGZpbHRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBvYmogPSBmaWx0ZXIocHJlZml4LCBvYmopO1xuICAgIH0gZWxzZSBpZiAob2JqIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICBvYmogPSBzZXJpYWxpemVEYXRlKG9iaik7XG4gICAgfSBlbHNlIGlmIChvYmogPT09IG51bGwpIHtcbiAgICAgICAgaWYgKHN0cmljdE51bGxIYW5kbGluZykge1xuICAgICAgICAgICAgcmV0dXJuIGVuY29kZXIgJiYgIWVuY29kZVZhbHVlc09ubHkgPyBlbmNvZGVyKHByZWZpeCwgZGVmYXVsdHMuZW5jb2RlcikgOiBwcmVmaXg7XG4gICAgICAgIH1cblxuICAgICAgICBvYmogPSAnJztcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG9iaiA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG9iaiA9PT0gJ251bWJlcicgfHwgdHlwZW9mIG9iaiA9PT0gJ2Jvb2xlYW4nIHx8IHV0aWxzLmlzQnVmZmVyKG9iaikpIHtcbiAgICAgICAgaWYgKGVuY29kZXIpIHtcbiAgICAgICAgICAgIHZhciBrZXlWYWx1ZSA9IGVuY29kZVZhbHVlc09ubHkgPyBwcmVmaXggOiBlbmNvZGVyKHByZWZpeCwgZGVmYXVsdHMuZW5jb2Rlcik7XG4gICAgICAgICAgICByZXR1cm4gW2Zvcm1hdHRlcihrZXlWYWx1ZSkgKyAnPScgKyBmb3JtYXR0ZXIoZW5jb2RlcihvYmosIGRlZmF1bHRzLmVuY29kZXIpKV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFtmb3JtYXR0ZXIocHJlZml4KSArICc9JyArIGZvcm1hdHRlcihTdHJpbmcob2JqKSldO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZXMgPSBbXTtcblxuICAgIGlmICh0eXBlb2Ygb2JqID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH1cblxuICAgIHZhciBvYmpLZXlzO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGZpbHRlcikpIHtcbiAgICAgICAgb2JqS2V5cyA9IGZpbHRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgICAgIG9iaktleXMgPSBzb3J0ID8ga2V5cy5zb3J0KHNvcnQpIDoga2V5cztcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iaktleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGtleSA9IG9iaktleXNbaV07XG5cbiAgICAgICAgaWYgKHNraXBOdWxscyAmJiBvYmpba2V5XSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgICAgICB2YWx1ZXMgPSB2YWx1ZXMuY29uY2F0KHN0cmluZ2lmeShcbiAgICAgICAgICAgICAgICBvYmpba2V5XSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4KHByZWZpeCwga2V5KSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgICAgIHN0cmljdE51bGxIYW5kbGluZyxcbiAgICAgICAgICAgICAgICBza2lwTnVsbHMsXG4gICAgICAgICAgICAgICAgZW5jb2RlcixcbiAgICAgICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICAgICAgc29ydCxcbiAgICAgICAgICAgICAgICBhbGxvd0RvdHMsXG4gICAgICAgICAgICAgICAgc2VyaWFsaXplRGF0ZSxcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZXIsXG4gICAgICAgICAgICAgICAgZW5jb2RlVmFsdWVzT25seVxuICAgICAgICAgICAgKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YWx1ZXMgPSB2YWx1ZXMuY29uY2F0KHN0cmluZ2lmeShcbiAgICAgICAgICAgICAgICBvYmpba2V5XSxcbiAgICAgICAgICAgICAgICBwcmVmaXggKyAoYWxsb3dEb3RzID8gJy4nICsga2V5IDogJ1snICsga2V5ICsgJ10nKSxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgICAgIHN0cmljdE51bGxIYW5kbGluZyxcbiAgICAgICAgICAgICAgICBza2lwTnVsbHMsXG4gICAgICAgICAgICAgICAgZW5jb2RlcixcbiAgICAgICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICAgICAgc29ydCxcbiAgICAgICAgICAgICAgICBhbGxvd0RvdHMsXG4gICAgICAgICAgICAgICAgc2VyaWFsaXplRGF0ZSxcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZXIsXG4gICAgICAgICAgICAgICAgZW5jb2RlVmFsdWVzT25seVxuICAgICAgICAgICAgKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWVzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBvcHRzKSB7XG4gICAgdmFyIG9iaiA9IG9iamVjdDtcbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgPyB1dGlscy5hc3NpZ24oe30sIG9wdHMpIDoge307XG5cbiAgICBpZiAob3B0aW9ucy5lbmNvZGVyICE9PSBudWxsICYmIG9wdGlvbnMuZW5jb2RlciAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmVuY29kZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRW5jb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICB2YXIgZGVsaW1pdGVyID0gdHlwZW9mIG9wdGlvbnMuZGVsaW1pdGVyID09PSAndW5kZWZpbmVkJyA/IGRlZmF1bHRzLmRlbGltaXRlciA6IG9wdGlvbnMuZGVsaW1pdGVyO1xuICAgIHZhciBzdHJpY3ROdWxsSGFuZGxpbmcgPSB0eXBlb2Ygb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuc3RyaWN0TnVsbEhhbmRsaW5nIDogZGVmYXVsdHMuc3RyaWN0TnVsbEhhbmRsaW5nO1xuICAgIHZhciBza2lwTnVsbHMgPSB0eXBlb2Ygb3B0aW9ucy5za2lwTnVsbHMgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuc2tpcE51bGxzIDogZGVmYXVsdHMuc2tpcE51bGxzO1xuICAgIHZhciBlbmNvZGUgPSB0eXBlb2Ygb3B0aW9ucy5lbmNvZGUgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuZW5jb2RlIDogZGVmYXVsdHMuZW5jb2RlO1xuICAgIHZhciBlbmNvZGVyID0gdHlwZW9mIG9wdGlvbnMuZW5jb2RlciA9PT0gJ2Z1bmN0aW9uJyA/IG9wdGlvbnMuZW5jb2RlciA6IGRlZmF1bHRzLmVuY29kZXI7XG4gICAgdmFyIHNvcnQgPSB0eXBlb2Ygb3B0aW9ucy5zb3J0ID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5zb3J0IDogbnVsbDtcbiAgICB2YXIgYWxsb3dEb3RzID0gdHlwZW9mIG9wdGlvbnMuYWxsb3dEb3RzID09PSAndW5kZWZpbmVkJyA/IGZhbHNlIDogb3B0aW9ucy5hbGxvd0RvdHM7XG4gICAgdmFyIHNlcmlhbGl6ZURhdGUgPSB0eXBlb2Ygb3B0aW9ucy5zZXJpYWxpemVEYXRlID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5zZXJpYWxpemVEYXRlIDogZGVmYXVsdHMuc2VyaWFsaXplRGF0ZTtcbiAgICB2YXIgZW5jb2RlVmFsdWVzT25seSA9IHR5cGVvZiBvcHRpb25zLmVuY29kZVZhbHVlc09ubHkgPT09ICdib29sZWFuJyA/IG9wdGlvbnMuZW5jb2RlVmFsdWVzT25seSA6IGRlZmF1bHRzLmVuY29kZVZhbHVlc09ubHk7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZvcm1hdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgb3B0aW9ucy5mb3JtYXQgPSBmb3JtYXRzWydkZWZhdWx0J107XG4gICAgfSBlbHNlIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGZvcm1hdHMuZm9ybWF0dGVycywgb3B0aW9ucy5mb3JtYXQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZm9ybWF0IG9wdGlvbiBwcm92aWRlZC4nKTtcbiAgICB9XG4gICAgdmFyIGZvcm1hdHRlciA9IGZvcm1hdHMuZm9ybWF0dGVyc1tvcHRpb25zLmZvcm1hdF07XG4gICAgdmFyIG9iaktleXM7XG4gICAgdmFyIGZpbHRlcjtcblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5maWx0ZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgZmlsdGVyID0gb3B0aW9ucy5maWx0ZXI7XG4gICAgICAgIG9iaiA9IGZpbHRlcignJywgb2JqKTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob3B0aW9ucy5maWx0ZXIpKSB7XG4gICAgICAgIGZpbHRlciA9IG9wdGlvbnMuZmlsdGVyO1xuICAgICAgICBvYmpLZXlzID0gZmlsdGVyO1xuICAgIH1cblxuICAgIHZhciBrZXlzID0gW107XG5cbiAgICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgfHwgb2JqID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG5cbiAgICB2YXIgYXJyYXlGb3JtYXQ7XG4gICAgaWYgKG9wdGlvbnMuYXJyYXlGb3JtYXQgaW4gYXJyYXlQcmVmaXhHZW5lcmF0b3JzKSB7XG4gICAgICAgIGFycmF5Rm9ybWF0ID0gb3B0aW9ucy5hcnJheUZvcm1hdDtcbiAgICB9IGVsc2UgaWYgKCdpbmRpY2VzJyBpbiBvcHRpb25zKSB7XG4gICAgICAgIGFycmF5Rm9ybWF0ID0gb3B0aW9ucy5pbmRpY2VzID8gJ2luZGljZXMnIDogJ3JlcGVhdCc7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYXJyYXlGb3JtYXQgPSAnaW5kaWNlcyc7XG4gICAgfVxuXG4gICAgdmFyIGdlbmVyYXRlQXJyYXlQcmVmaXggPSBhcnJheVByZWZpeEdlbmVyYXRvcnNbYXJyYXlGb3JtYXRdO1xuXG4gICAgaWYgKCFvYmpLZXlzKSB7XG4gICAgICAgIG9iaktleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgIH1cblxuICAgIGlmIChzb3J0KSB7XG4gICAgICAgIG9iaktleXMuc29ydChzb3J0KTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iaktleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGtleSA9IG9iaktleXNbaV07XG5cbiAgICAgICAgaWYgKHNraXBOdWxscyAmJiBvYmpba2V5XSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBrZXlzID0ga2V5cy5jb25jYXQoc3RyaW5naWZ5KFxuICAgICAgICAgICAgb2JqW2tleV0sXG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgc3RyaWN0TnVsbEhhbmRsaW5nLFxuICAgICAgICAgICAgc2tpcE51bGxzLFxuICAgICAgICAgICAgZW5jb2RlID8gZW5jb2RlciA6IG51bGwsXG4gICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICBzb3J0LFxuICAgICAgICAgICAgYWxsb3dEb3RzLFxuICAgICAgICAgICAgc2VyaWFsaXplRGF0ZSxcbiAgICAgICAgICAgIGZvcm1hdHRlcixcbiAgICAgICAgICAgIGVuY29kZVZhbHVlc09ubHlcbiAgICAgICAgKSk7XG4gICAgfVxuXG4gICAgdmFyIGpvaW5lZCA9IGtleXMuam9pbihkZWxpbWl0ZXIpO1xuICAgIHZhciBwcmVmaXggPSBvcHRpb25zLmFkZFF1ZXJ5UHJlZml4ID09PSB0cnVlID8gJz8nIDogJyc7XG5cbiAgICByZXR1cm4gam9pbmVkLmxlbmd0aCA+IDAgPyBwcmVmaXggKyBqb2luZWQgOiAnJztcbn07XG5cbn0se1wiLi9mb3JtYXRzXCI6MzYsXCIuL3V0aWxzXCI6NDB9XSw0MDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXMgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG52YXIgaGV4VGFibGUgPSAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBhcnJheSA9IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgICAgICAgYXJyYXkucHVzaCgnJScgKyAoKGkgPCAxNiA/ICcwJyA6ICcnKSArIGkudG9TdHJpbmcoMTYpKS50b1VwcGVyQ2FzZSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyYXk7XG59KCkpO1xuXG52YXIgY29tcGFjdFF1ZXVlID0gZnVuY3Rpb24gY29tcGFjdFF1ZXVlKHF1ZXVlKSB7XG4gICAgdmFyIG9iajtcblxuICAgIHdoaWxlIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBxdWV1ZS5wb3AoKTtcbiAgICAgICAgb2JqID0gaXRlbS5vYmpbaXRlbS5wcm9wXTtcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgICAgICB2YXIgY29tcGFjdGVkID0gW107XG5cbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgb2JqLmxlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvYmpbal0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBhY3RlZC5wdXNoKG9ialtqXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpdGVtLm9ialtpdGVtLnByb3BdID0gY29tcGFjdGVkO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG9iajtcbn07XG5cbnZhciBhcnJheVRvT2JqZWN0ID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdChzb3VyY2UsIG9wdGlvbnMpIHtcbiAgICB2YXIgb2JqID0gb3B0aW9ucyAmJiBvcHRpb25zLnBsYWluT2JqZWN0cyA/IE9iamVjdC5jcmVhdGUobnVsbCkgOiB7fTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvdXJjZS5sZW5ndGg7ICsraSkge1xuICAgICAgICBpZiAodHlwZW9mIHNvdXJjZVtpXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIG9ialtpXSA9IHNvdXJjZVtpXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBvYmo7XG59O1xuXG52YXIgbWVyZ2UgPSBmdW5jdGlvbiBtZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucykge1xuICAgIGlmICghc291cmNlKSB7XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBzb3VyY2UgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkpIHtcbiAgICAgICAgICAgIHRhcmdldC5wdXNoKHNvdXJjZSk7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnBsYWluT2JqZWN0cyB8fCBvcHRpb25zLmFsbG93UHJvdG90eXBlcyB8fCAhaGFzLmNhbGwoT2JqZWN0LnByb3RvdHlwZSwgc291cmNlKSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtzb3VyY2VdID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbdGFyZ2V0LCBzb3VyY2VdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHRhcmdldCAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIFt0YXJnZXRdLmNvbmNhdChzb3VyY2UpO1xuICAgIH1cblxuICAgIHZhciBtZXJnZVRhcmdldCA9IHRhcmdldDtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh0YXJnZXQpICYmICFBcnJheS5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgICAgbWVyZ2VUYXJnZXQgPSBhcnJheVRvT2JqZWN0KHRhcmdldCwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSAmJiBBcnJheS5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgICAgc291cmNlLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0sIGkpIHtcbiAgICAgICAgICAgIGlmIChoYXMuY2FsbCh0YXJnZXQsIGkpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldFtpXSAmJiB0eXBlb2YgdGFyZ2V0W2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRbaV0gPSBtZXJnZSh0YXJnZXRbaV0sIGl0ZW0sIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0W2ldID0gaXRlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHNvdXJjZSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgICAgICB2YXIgdmFsdWUgPSBzb3VyY2Vba2V5XTtcblxuICAgICAgICBpZiAoaGFzLmNhbGwoYWNjLCBrZXkpKSB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IG1lcmdlKGFjY1trZXldLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhY2Nba2V5XSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgbWVyZ2VUYXJnZXQpO1xufTtcblxudmFyIGFzc2lnbiA9IGZ1bmN0aW9uIGFzc2lnblNpbmdsZVNvdXJjZSh0YXJnZXQsIHNvdXJjZSkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhzb3VyY2UpLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrZXkpIHtcbiAgICAgICAgYWNjW2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB0YXJnZXQpO1xufTtcblxudmFyIGRlY29kZSA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHN0ci5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gc3RyO1xuICAgIH1cbn07XG5cbnZhciBlbmNvZGUgPSBmdW5jdGlvbiBlbmNvZGUoc3RyKSB7XG4gICAgLy8gVGhpcyBjb2RlIHdhcyBvcmlnaW5hbGx5IHdyaXR0ZW4gYnkgQnJpYW4gV2hpdGUgKG1zY2RleCkgZm9yIHRoZSBpby5qcyBjb3JlIHF1ZXJ5c3RyaW5nIGxpYnJhcnkuXG4gICAgLy8gSXQgaGFzIGJlZW4gYWRhcHRlZCBoZXJlIGZvciBzdHJpY3RlciBhZGhlcmVuY2UgdG8gUkZDIDM5ODZcbiAgICBpZiAoc3RyLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gc3RyO1xuICAgIH1cblxuICAgIHZhciBzdHJpbmcgPSB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyA/IHN0ciA6IFN0cmluZyhzdHIpO1xuXG4gICAgdmFyIG91dCA9ICcnO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBjID0gc3RyaW5nLmNoYXJDb2RlQXQoaSk7XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgYyA9PT0gMHgyRCAvLyAtXG4gICAgICAgICAgICB8fCBjID09PSAweDJFIC8vIC5cbiAgICAgICAgICAgIHx8IGMgPT09IDB4NUYgLy8gX1xuICAgICAgICAgICAgfHwgYyA9PT0gMHg3RSAvLyB+XG4gICAgICAgICAgICB8fCAoYyA+PSAweDMwICYmIGMgPD0gMHgzOSkgLy8gMC05XG4gICAgICAgICAgICB8fCAoYyA+PSAweDQxICYmIGMgPD0gMHg1QSkgLy8gYS16XG4gICAgICAgICAgICB8fCAoYyA+PSAweDYxICYmIGMgPD0gMHg3QSkgLy8gQS1aXG4gICAgICAgICkge1xuICAgICAgICAgICAgb3V0ICs9IHN0cmluZy5jaGFyQXQoaSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjIDwgMHg4MCkge1xuICAgICAgICAgICAgb3V0ID0gb3V0ICsgaGV4VGFibGVbY107XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjIDwgMHg4MDApIHtcbiAgICAgICAgICAgIG91dCA9IG91dCArIChoZXhUYWJsZVsweEMwIHwgKGMgPj4gNildICsgaGV4VGFibGVbMHg4MCB8IChjICYgMHgzRildKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGMgPCAweEQ4MDAgfHwgYyA+PSAweEUwMDApIHtcbiAgICAgICAgICAgIG91dCA9IG91dCArIChoZXhUYWJsZVsweEUwIHwgKGMgPj4gMTIpXSArIGhleFRhYmxlWzB4ODAgfCAoKGMgPj4gNikgJiAweDNGKV0gKyBoZXhUYWJsZVsweDgwIHwgKGMgJiAweDNGKV0pO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpICs9IDE7XG4gICAgICAgIGMgPSAweDEwMDAwICsgKCgoYyAmIDB4M0ZGKSA8PCAxMCkgfCAoc3RyaW5nLmNoYXJDb2RlQXQoaSkgJiAweDNGRikpO1xuICAgICAgICBvdXQgKz0gaGV4VGFibGVbMHhGMCB8IChjID4+IDE4KV1cbiAgICAgICAgICAgICsgaGV4VGFibGVbMHg4MCB8ICgoYyA+PiAxMikgJiAweDNGKV1cbiAgICAgICAgICAgICsgaGV4VGFibGVbMHg4MCB8ICgoYyA+PiA2KSAmIDB4M0YpXVxuICAgICAgICAgICAgKyBoZXhUYWJsZVsweDgwIHwgKGMgJiAweDNGKV07XG4gICAgfVxuXG4gICAgcmV0dXJuIG91dDtcbn07XG5cbnZhciBjb21wYWN0ID0gZnVuY3Rpb24gY29tcGFjdCh2YWx1ZSkge1xuICAgIHZhciBxdWV1ZSA9IFt7IG9iajogeyBvOiB2YWx1ZSB9LCBwcm9wOiAnbycgfV07XG4gICAgdmFyIHJlZnMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcXVldWUubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBxdWV1ZVtpXTtcbiAgICAgICAgdmFyIG9iaiA9IGl0ZW0ub2JqW2l0ZW0ucHJvcF07XG5cbiAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGtleXMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBrZXlzW2pdO1xuICAgICAgICAgICAgdmFyIHZhbCA9IG9ialtrZXldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmIHZhbCAhPT0gbnVsbCAmJiByZWZzLmluZGV4T2YodmFsKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBxdWV1ZS5wdXNoKHsgb2JqOiBvYmosIHByb3A6IGtleSB9KTtcbiAgICAgICAgICAgICAgICByZWZzLnB1c2godmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBjb21wYWN0UXVldWUocXVldWUpO1xufTtcblxudmFyIGlzUmVnRXhwID0gZnVuY3Rpb24gaXNSZWdFeHAob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBSZWdFeHBdJztcbn07XG5cbnZhciBpc0J1ZmZlciA9IGZ1bmN0aW9uIGlzQnVmZmVyKG9iaikge1xuICAgIGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiAhIShvYmouY29uc3RydWN0b3IgJiYgb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyICYmIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlcihvYmopKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGFycmF5VG9PYmplY3Q6IGFycmF5VG9PYmplY3QsXG4gICAgYXNzaWduOiBhc3NpZ24sXG4gICAgY29tcGFjdDogY29tcGFjdCxcbiAgICBkZWNvZGU6IGRlY29kZSxcbiAgICBlbmNvZGU6IGVuY29kZSxcbiAgICBpc0J1ZmZlcjogaXNCdWZmZXIsXG4gICAgaXNSZWdFeHA6IGlzUmVnRXhwLFxuICAgIG1lcmdlOiBtZXJnZVxufTtcblxufSx7fV19LHt9LFs4XSlcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0poYzNObGRITXZjM0pqTDJwekwwTnNZWE56WlhNdlNHVmhaR1Z5TG1weklpd2lZWE56WlhSekwzTnlZeTlxY3k5RGJHRnpjMlZ6TDB4dllXUk5iM0psTG1weklpd2lZWE56WlhSekwzTnlZeTlxY3k5RGJHRnpjMlZ6TDAxbGJXSmxjaTVxY3lJc0ltRnpjMlYwY3k5emNtTXZhbk12UTJ4aGMzTmxjeTlRZFdKc2FXTmhkR2x2Ym5NdWFuTWlMQ0poYzNObGRITXZjM0pqTDJwekwwTnNZWE56WlhNdlVtVnpkV3gwY3k1cWN5SXNJbUZ6YzJWMGN5OXpjbU12YW5NdlEyeGhjM05sY3k5U2RXSnlhV056TG1weklpd2lZWE56WlhSekwzTnlZeTlxY3k5RGJHRnpjMlZ6TDFSaGVHOXViMjE1VkdGaWN5NXFjeUlzSW1GemMyVjBjeTl6Y21NdmFuTXZiV0ZwYmk1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlwYm1SbGVDNXFjeUlzSW01dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZZV1JoY0hSbGNuTXZlR2h5TG1weklpd2libTlrWlY5dGIyUjFiR1Z6TDJGNGFXOXpMMnhwWWk5aGVHbHZjeTVxY3lJc0ltNXZaR1ZmYlc5a2RXeGxjeTloZUdsdmN5OXNhV0l2WTJGdVkyVnNMME5oYm1ObGJDNXFjeUlzSW01dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZZMkZ1WTJWc0wwTmhibU5sYkZSdmEyVnVMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlqWVc1alpXd3ZhWE5EWVc1alpXd3Vhbk1pTENKdWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMk52Y21VdlFYaHBiM011YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJOdmNtVXZTVzUwWlhKalpYQjBiM0pOWVc1aFoyVnlMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlqYjNKbEwyTnlaV0YwWlVWeWNtOXlMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlqYjNKbEwyUnBjM0JoZEdOb1VtVnhkV1Z6ZEM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdlkyOXlaUzlsYm1oaGJtTmxSWEp5YjNJdWFuTWlMQ0p1YjJSbFgyMXZaSFZzWlhNdllYaHBiM012YkdsaUwyTnZjbVV2YzJWMGRHeGxMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlqYjNKbEwzUnlZVzV6Wm05eWJVUmhkR0V1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJSbFptRjFiSFJ6TG1weklpd2libTlrWlY5dGIyUjFiR1Z6TDJGNGFXOXpMMnhwWWk5b1pXeHdaWEp6TDJKcGJtUXVhbk1pTENKdWIyUmxYMjF2WkhWc1pYTXZZWGhwYjNNdmJHbGlMMmhsYkhCbGNuTXZZblJ2WVM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmFHVnNjR1Z5Y3k5aWRXbHNaRlZTVEM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmFHVnNjR1Z5Y3k5amIyMWlhVzVsVlZKTWN5NXFjeUlzSW01dlpHVmZiVzlrZFd4bGN5OWhlR2x2Y3k5c2FXSXZhR1ZzY0dWeWN5OWpiMjlyYVdWekxtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOW9aV3h3WlhKekwybHpRV0p6YjJ4MWRHVlZVa3d1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJobGJIQmxjbk12YVhOVlVreFRZVzFsVDNKcFoybHVMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMMkY0YVc5ekwyeHBZaTlvWld4d1pYSnpMMjV2Y20xaGJHbDZaVWhsWVdSbGNrNWhiV1V1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12WVhocGIzTXZiR2xpTDJobGJIQmxjbk12Y0dGeWMyVklaV0ZrWlhKekxtcHpJaXdpYm05a1pWOXRiMlIxYkdWekwyRjRhVzl6TDJ4cFlpOW9aV3h3WlhKekwzTndjbVZoWkM1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5aGVHbHZjeTlzYVdJdmRYUnBiSE11YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12YVhNdFluVm1abVZ5TDJsdVpHVjRMbXB6SWl3aWJtOWtaVjl0YjJSMWJHVnpMM0J5YjJObGMzTXZZbkp2ZDNObGNpNXFjeUlzSW01dlpHVmZiVzlrZFd4bGN5OXhjeTlzYVdJdlptOXliV0YwY3k1cWN5SXNJbTV2WkdWZmJXOWtkV3hsY3k5eGN5OXNhV0l2YVc1a1pYZ3Vhbk1pTENKdWIyUmxYMjF2WkhWc1pYTXZjWE12YkdsaUwzQmhjbk5sTG1weklpd2libTlrWlY5dGIyUjFiR1Z6TDNGekwyeHBZaTl6ZEhKcGJtZHBabmt1YW5NaUxDSnViMlJsWDIxdlpIVnNaWE12Y1hNdmJHbGlMM1YwYVd4ekxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCT3pzN096czdPMGxEUVUwc1RUdEJRVU5LTEd0Q1FVRlpMRk5CUVZvc1JVRkJkVUk3UVVGQlFUczdRVUZCUVRzN1FVRkRja0lzVTBGQlN5eE5RVUZNTEVkQlFXTXNVMEZCWkR0QlFVTkJMRk5CUVVzc1QwRkJUQ3hIUVVGbExGVkJRVlVzWVVGQlZpeERRVUYzUWl3eVFrRkJlRUlzUTBGQlpqdEJRVU5CTEZOQlFVc3NUMEZCVEN4SFFVRmxMRlZCUVZVc1lVRkJWaXhEUVVGM1FpeDFRa0ZCZUVJc1EwRkJaanRCUVVOQkxGTkJRVXNzVVVGQlRDeEhRVUZuUWl4VlFVRlZMR0ZCUVZZc1EwRkJkMElzWjBKQlFYaENMRU5CUVdoQ096dEJRVVZCTEZOQlFVc3NUMEZCVEN4RFFVRmhMR2RDUVVGaUxFTkJRVGhDTEU5QlFUbENMRVZCUVhWRExGVkJRVU1zUTBGQlJDeEZRVUZQTzBGQlF6VkRMRmxCUVVzc1owSkJRVXc3UVVGRFJDeExRVVpFT3p0QlFVbEJMRk5CUVVzc1VVRkJUQ3hEUVVGakxHZENRVUZrTEVOQlFTdENMRTlCUVM5Q0xFVkJRWGRETEZWQlFVTXNRMEZCUkN4RlFVRlBPMEZCUXpkRExGRkJRVVVzWTBGQlJqdEJRVU5FTEV0QlJrUTdRVUZIUkRzN096dDFRMEZGYTBJN1FVRkRha0lzVjBGQlN5eFBRVUZNTEVOQlFXRXNVMEZCWWl4RFFVRjFRaXhOUVVGMlFpeERRVUU0UWl3MFFrRkJPVUk3UVVGRFJEczdPenM3TzBGQlIwZ3NUMEZCVHl4UFFVRlFMRWRCUVdsQ0xFMUJRV3BDT3pzN096czdPenM3T3p0QlEzSkNRVHM3T3p0QlFVTkJPenM3T3pzN096dEpRVVZ4UWl4Uk8wRkJRMjVDTEc5Q1FVRlpMRk5CUVZvc1JVRkJkVUk3UVVGQlFUczdRVUZCUVRzN1FVRkRja0lzVTBGQlN5eFRRVUZNTEVkQlFXbENMRk5CUVdwQ08wRkJRMEVzVTBGQlN5eE5RVUZNTEVkQlFXTXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHOUNRVUYyUWl4RFFVRmtPMEZCUTBFc1UwRkJTeXhKUVVGTUxFZEJRVmtzUzBGQldqdEJRVU5CTEZOQlFVc3NTVUZCVEN4SFFVRlpMRU5CUVZvN1FVRkRRU3hUUVVGTExFbEJRVXdzUjBGQldTeExRVUZMTEZGQlFXcENPMEZCUTBFc1UwRkJTeXhGUVVGTUxFZEJRVlVzUzBGQlN5eE5RVUZtT3p0QlFVVkJMRk5CUVVzc1RVRkJUQ3hIUVVGakxFVkJRV1E3TzBGQlJVRXNVMEZCU3l4WFFVRk1MRWRCUVcxQ0xGTkJRVk1zWVVGQlZDeERRVUYxUWl4bFFVRjJRaXhEUVVGdVFqdEJRVU5CTEZOQlFVc3NVVUZCVEN4SFFVRm5RaXhUUVVGVExHRkJRVlFzUTBGQmRVSXNXVUZCZGtJc1EwRkJhRUk3TzBGQlJVRXNWMEZCVHl4blFrRkJVQ3hEUVVGM1FpeFJRVUY0UWl4RlFVRnJReXhaUVVGTk8wRkJRM1JETEZWQlFVMHNaVUZCWlN4VFFVRlRMRWxCUVZRc1EwRkJZeXhaUVVGa0xFZEJRVFpDTEZOQlFWTXNaVUZCVkN4RFFVRjVRaXhUUVVGMFJDeEpRVUZ0UlN4UFFVRlBMRmRCUVZBc1IwRkJjVUlzVFVGQlN5eE5RVUZNTEVOQlFWa3NXVUZCY0Vjc1EwRkJja0k3TzBGQlJVRXNWVUZCU1N4blFrRkJhVUlzVDBGQlR5eFhRVUZRTEVkQlFYRkNMRU5CUVhSRExFbEJRVFJETEVOQlFVTXNUVUZCU3l4SlFVRjBSQ3hGUVVFMFJEdEJRVU14UkN4alFVRkxMRTlCUVV3N1FVRkRRU3hqUVVGTExFbEJRVXdzUjBGQldTeEpRVUZhTzBGQlEwUTdRVUZEUml4TFFWQkVPMEZCVVVRN096czdPRUpCUlZNN1FVRkJRVHM3UVVGRFVpeFZRVUZOTEU5QlFVODdRVUZEV0N4blFrRkJVU3gxUWtGRVJ6dEJRVVZZTEcxQ1FVRlhMRXRCUVVzc1NVRkdURHRCUVVkWUxHbENRVUZUTEV0QlFVc3NSVUZJU0R0QlFVbFlMR05CUVUwc1MwRkJTenRCUVVwQkxFOUJRV0k3TzBGQlQwRXNjMEpCUVUwc1NVRkJUaXhEUVVGWExFOUJRVmdzUlVGQmIwSXNZVUZCUnl4VFFVRklMRU5CUVdFc1NVRkJZaXhEUVVGd1FpeEZRVU5ITEVsQlJFZ3NRMEZEVVN4bFFVRlBPMEZCUTFnc1dVRkJTU3hKUVVGS0xFTkJRVk1zU1VGQlZDeERRVUZqTEV0QlFXUXNRMEZCYjBJc1QwRkJjRUlzUTBGQk5FSXNaMEpCUVZFN1FVRkRiRU1zYVVKQlFVc3NVMEZCVEN4RFFVRmxMR3RDUVVGbUxFTkJRV3RETEZkQlFXeERMRVZCUVN0RExFdEJRVXNzVDBGQmNFUTdRVUZEUkN4VFFVWkVPMEZCUjBFc1pVRkJTeXhKUVVGTUxFbEJRV0VzUTBGQllqdEJRVU5CTEdWQlFVc3NTVUZCVEN4SFFVRlpMRXRCUVZvN08wRkJSVUVzV1VGQlNTeEpRVUZKTEVsQlFVb3NRMEZCVXl4SlFVRlVMRU5CUVdNc1MwRkJaQ3hEUVVGdlFpeE5RVUZ3UWl4TFFVRXJRaXhEUVVGdVF5eEZRVUZ6UXp0QlFVTndReXhwUWtGQlN5eFhRVUZNTEVOQlFXbENMRk5CUVdwQ0xFTkJRVEpDTEVkQlFUTkNMRU5CUVN0Q0xGbEJRUzlDTzBGQlEwRXNhVUpCUVVzc1VVRkJUQ3hEUVVGakxGTkJRV1FzUTBGQmQwSXNUVUZCZUVJc1EwRkJLMElzV1VGQkwwSTdRVUZEUkR0QlFVTkdMRTlCV2tnc1JVRmhSeXhMUVdKSUxFTkJZVk1zV1VGQlRUdEJRVU5ZTEdWQlFVc3NWMEZCVEN4RFFVRnBRaXhUUVVGcVFpeERRVUV5UWl4SFFVRXpRaXhEUVVFclFpeFpRVUV2UWp0QlFVTkJMR1ZCUVVzc1VVRkJUQ3hEUVVGakxGTkJRV1FzUTBGQmQwSXNUVUZCZUVJc1EwRkJLMElzV1VGQkwwSTdRVUZEUkN4UFFXaENTRHRCUVdsQ1JEczdPenM3TzJ0Q1FXcEVhMElzVVRzN096czdPenM3T3pzN096dEpRMGhCTEUwN1FVRkRia0lzYTBKQlFWa3NVMEZCV2l4RlFVRjFRanRCUVVGQk96dEJRVUZCT3p0QlFVTnlRaXhUUVVGTExGTkJRVXdzUjBGQmFVSXNVMEZCYWtJN1FVRkRRU3hUUVVGTExFOUJRVXdzUjBGQlpTeFZRVUZWTEdkQ1FVRldMRU5CUVRKQ0xHbENRVUV6UWl4RFFVRm1PenRCUVVWQkxGTkJRVXNzYTBKQlFVd3NSMEZCTUVJc1ZVRkJWU3hoUVVGV0xFTkJRWGRDTEdkQ1FVRjRRaXhEUVVFeFFqdEJRVU5CTEZOQlFVc3NVVUZCVEN4SFFVRm5RaXhWUVVGVkxHZENRVUZXTEVOQlFUSkNMR2RDUVVFelFpeERRVUZvUWpzN1FVRkZRU3hUUVVGTExFOUJRVXdzUTBGQllTeFBRVUZpTEVOQlFYRkNMR3RDUVVGVk8wRkJRemRDTEdGQlFVOHNaMEpCUVZBc1EwRkJkMElzVDBGQmVFSXNSVUZCYVVNc1ZVRkJReXhEUVVGRUxFVkJRVTg3UVVGRGRFTXNXVUZCVFN4UlFVRlJMRTFCUVUwc1UwRkJUaXhEUVVGblFpeFBRVUZvUWl4RFFVRjNRaXhKUVVGNFFpeERRVUUyUWl4TlFVRkxMRTlCUVd4RExFVkJRVEpETEVWQlFVVXNZVUZCTjBNc1EwRkJaRHRCUVVOQkxHTkJRVXNzVVVGQlRDeERRVUZqTEV0QlFXUTdRVUZEUkN4UFFVaEVPMEZCU1VRc1MwRk1SRHRCUVUxRU96czdPelpDUVVWUkxFc3NSVUZCVHp0QlFVTmtMRlZCUVUwc1VVRkJVU3hMUVVGTExGRkJRVXdzUTBGQll5eExRVUZrTEVWQlFYRkNMSEZDUVVGeVFpeEhRVUUyUXl4SFFVRXpSRHRCUVVOQkxGZEJRVXNzYTBKQlFVd3NRMEZCZDBJc1VVRkJlRUlzUTBGQmFVTTdRVUZETDBJc1lVRkJTeXhSUVVGUkxFZEJSR3RDTzBGQlJTOUNMR3RDUVVGVk8wRkJSbkZDTEU5QlFXcERPMEZCU1VRN096czdPenRyUWtGMFFtdENMRTA3T3pzN096czdPenM3TzBGRFFYSkNPenM3TzBGQlEwRTdPenM3T3pzN08wbEJSM0ZDTEZrN1FVRkRia0lzZDBKQlFWa3NVMEZCV2l4RlFVRjFRanRCUVVGQk96dEJRVUZCT3p0QlFVTnlRaXhUUVVGTExGTkJRVXdzUjBGQmFVSXNVMEZCYWtJN1FVRkRRU3hUUVVGTExGZEJRVXdzUjBGQmJVSXNWVUZCVlN4aFFVRldMRU5CUVhkQ0xHVkJRWGhDTEVOQlFXNUNPMEZCUTBFc1UwRkJTeXhaUVVGTUxFZEJRVzlDTEZWQlFWVXNaMEpCUVZZc1EwRkJNa0lzYzBKQlFUTkNMRU5CUVhCQ08wRkJRMEVzVTBGQlN5eFhRVUZNTEVkQlFXMUNMRlZCUVZVc1lVRkJWaXhEUVVGM1FpeHZRa0ZCZUVJc1EwRkJia0k3UVVGRFFTeFRRVUZMTEZkQlFVd3NSMEZCYlVJc1ZVRkJWU3hoUVVGV0xFTkJRWGRDTEc5Q1FVRjRRaXhEUVVGdVFqdEJRVU5CTEZOQlFVc3NXVUZCVEN4SFFVRnZRaXhEUVVGd1FqczdRVUZGUVN4VFFVRkxMRmxCUVV3c1IwRkJiMElzVTBGQlV5eGhRVUZVTEVOQlFYVkNMSGRDUVVGMlFpeERRVUZ3UWpzN1FVRkZRU3hSUVVGSkxFOUJRVThzVlVGQlVDeEpRVUZ4UWl4SFFVRjZRaXhGUVVFNFFqdEJRVU0xUWl4WFFVRkxMR0ZCUVV3c1IwRkJjVUlzUTBGQmNrSTdRVUZEUVN4WFFVRkxMR3RDUVVGTUxFZEJRVEJDTEV0QlFVc3NWMEZCVEN4RFFVRnBRaXhWUVVGcVFpeERRVUUwUWl4WFFVRTFRaXhIUVVFd1F5eERRVUZ3UlR0QlFVTkVMRXRCU0VRc1RVRkhUenRCUVVOTUxGZEJRVXNzWVVGQlRDeEhRVUZ4UWl4RFFVRnlRanRCUVVOQkxGZEJRVXNzYTBKQlFVd3NSMEZCTUVJc1MwRkJTeXhYUVVGTUxFTkJRV2xDTEZWQlFXcENMRU5CUVRSQ0xGZEJRWFJFTzBGQlEwUTdPMEZCUlVRc1UwRkJTeXhOUVVGTUxFZEJRV01zUlVGQlpEczdRVUZGUVN4VFFVRkxMR1ZCUVV3c1IwRkJkVUlzVlVGQlZTeGhRVUZXTEVOQlFYZENMSE5DUVVGNFFpeERRVUYyUWpzN1FVRkZRU3hUUVVGTExGbEJRVXdzUTBGQmEwSXNUMEZCYkVJc1EwRkJNRUlzVlVGQlF5eEpRVUZFTEVWQlFVOHNTMEZCVUN4RlFVRnBRanRCUVVONlF5eFZRVUZKTEV0QlFVc3NVMEZCVEN4RFFVRmxMRkZCUVdZc1EwRkJkMElzWTBGQmVFSXNRMEZCU2l4RlFVRTJRenRCUVVNelF5eGpRVUZMTEZsQlFVd3NSMEZCYjBJc1MwRkJjRUk3UVVGRFJEczdRVUZGUkN4WFFVRkxMR2RDUVVGTUxFTkJRWE5DTEU5QlFYUkNMRVZCUVN0Q0xHRkJRVXM3UVVGRGJFTXNXVUZCVFN4VlFVRlZMRTFCUVVzc1dVRkJUQ3hMUVVGelFpeEZRVUZGTEdGQlFVWXNRMEZCWjBJc1QwRkJhRUlzUTBGQmQwSXNTMEZCT1VNc1IwRkJjMFFzU1VGQmRFUXNSMEZCTmtRc1MwRkJOMFU3UVVGRFFTeGpRVUZMTEZsQlFVd3NRMEZCYTBJc1UwRkJVeXhGUVVGRkxHRkJRVVlzUTBGQlowSXNUMEZCYUVJc1EwRkJkMElzUzBGQmFrTXNSVUZCZDBNc1JVRkJlRU1zUTBGQmJFSTdPMEZCUlVFc1dVRkJTU3hQUVVGS0xFVkJRV0U3UVVGRFdDeG5Ra0ZCU3l4VFFVRk1PenRCUVVWQkxHZENRVUZMTEdsQ1FVRk1PMEZCUTBRN1FVRkRSaXhQUVZSRU8wRkJWVVFzUzBGbVJEczdRVUZwUWtFc1UwRkJTeXhYUVVGTUxFTkJRV2xDTEdkQ1FVRnFRaXhEUVVGclF5eFBRVUZzUXl4RlFVRXlReXhaUVVGTk8wRkJReTlETEZWQlFVa3NUVUZCU3l4WlFVRk1MRWRCUVc5Q0xFMUJRVXNzV1VGQlRDeERRVUZyUWl4TlFVRnNRaXhIUVVFeVFpeERRVUZ1UkN4RlFVRnpSRHRCUVVOd1JDeGpRVUZMTEZsQlFVd3NRMEZCYTBJc1RVRkJTeXhaUVVGTUxFZEJRVzlDTEVOQlFYUkRPMEZCUTBRN08wRkJSVVFzV1VGQlN5eFRRVUZNT3p0QlFVVkJMRmxCUVVzc2FVSkJRVXc3UVVGRFJDeExRVkpFT3p0QlFWVkJMRk5CUVVzc1YwRkJUQ3hEUVVGcFFpeG5Ra0ZCYWtJc1EwRkJhME1zVDBGQmJFTXNSVUZCTWtNc1dVRkJUVHRCUVVNdlF5eFZRVUZKTEUxQlFVc3NXVUZCVEN4SlFVRnhRaXhEUVVGNlFpeEZRVUUwUWp0QlFVTXhRaXhqUVVGTExGbEJRVXdzUTBGQmEwSXNUVUZCU3l4WlFVRk1MRWRCUVc5Q0xFTkJRWFJETzBGQlEwUTdPMEZCUlVRc1dVRkJTeXhUUVVGTU96dEJRVVZCTEZsQlFVc3NhVUpCUVV3N1FVRkRSQ3hMUVZKRU8wRkJVMFE3T3pzN2FVTkJSVmtzVVN4RlFVRlZPMEZCUTNKQ0xGZEJRVXNzV1VGQlRDeERRVUZyUWl4TFFVRkxMRmxCUVhaQ0xFVkJRWEZETEZOQlFYSkRMRU5CUVN0RExFMUJRUzlETEVOQlFYTkVMR05CUVhSRU96dEJRVVZCTEZkQlFVc3NXVUZCVEN4SFFVRnZRaXhSUVVGd1FqdEJRVU5CTEZkQlFVc3NXVUZCVEN4RFFVRnJRaXhMUVVGTExGbEJRWFpDTEVWQlFYRkRMRk5CUVhKRExFTkJRU3RETEVkQlFTOURMRU5CUVcxRUxHTkJRVzVFT3p0QlFVVkJMRlZCUVVrc1MwRkJTeXhaUVVGTUxFbEJRWEZDTEVOQlFYcENMRVZCUVRSQ08wRkJRekZDTEdGQlFVc3NWMEZCVEN4RFFVRnBRaXhUUVVGcVFpeERRVUV5UWl4SFFVRXpRaXhEUVVFclFpeHpRa0ZCTDBJN1FVRkRSQ3hQUVVaRUxFMUJSVThzU1VGQlNTeExRVUZMTEZsQlFVd3NTVUZCY1VJc1MwRkJTeXhaUVVGTUxFTkJRV3RDTEUxQlFXeENMRWRCUVRKQ0xFTkJRWEJFTEVWQlFYVkVPMEZCUXpWRUxHRkJRVXNzVjBGQlRDeERRVUZwUWl4VFFVRnFRaXhEUVVFeVFpeEhRVUV6UWl4RFFVRXJRaXh6UWtGQkwwSTdRVUZEUkN4UFFVWk5MRTFCUlVFN1FVRkRUQ3hoUVVGTExGZEJRVXdzUTBGQmFVSXNVMEZCYWtJc1EwRkJNa0lzVFVGQk0wSXNRMEZCYTBNc2MwSkJRV3hETzBGQlEwRXNZVUZCU3l4WFFVRk1MRU5CUVdsQ0xGTkJRV3BDTEVOQlFUSkNMRTFCUVROQ0xFTkJRV3RETEhOQ1FVRnNRenRCUVVORU96dEJRVVZFTEZWQlFVa3NTMEZCU3l4WlFVRk1MRWRCUVc5Q0xFdEJRVXNzWVVGQmVrSXNTVUZCTUVNc1EwRkJPVU1zUlVGQmFVUTdRVUZETDBNc1dVRkJUU3hUUVVGVExFTkJRVVVzUzBGQlN5eFpRVUZNTEVkQlFXOUNMRXRCUVVzc1lVRkJNVUlzUjBGQk1rTXNRMEZCTlVNc1NVRkJhVVFzUzBGQlN5eHJRa0ZCY2tVN1FVRkRRU3hoUVVGTExGZEJRVXdzUTBGQmFVSXNTMEZCYWtJc1EwRkJkVUlzVTBGQmRrSXNiMEpCUVd0RUxFMUJRV3hFTzBGQlEwUXNUMEZJUkN4TlFVZFBPMEZCUTB3c1lVRkJTeXhYUVVGTUxFTkJRV2xDTEV0QlFXcENMRU5CUVhWQ0xGTkJRWFpDTEVkQlFXMURMR2xDUVVGdVF6dEJRVU5FTzBGQlEwWTdPenRuUTBGRlZ6dEJRVU5XTEZkQlFVc3NUVUZCVEN4SFFVRmpPMEZCUTFvc1kwRkJUU3hMUVVGTExGbEJRVXdzUTBGQmEwSXNTMEZCU3l4WlFVRjJRaXhGUVVGeFF5eFBRVUZ5UXl4RFFVRTJReXhKUVVSMlF6dEJRVVZhTEd0Q1FVRlZMRXRCUVVzc1dVRkJUQ3hEUVVGclFpeExRVUZMTEZsQlFYWkNMRVZCUVhGRExFOUJRWEpETEVOQlFUWkRPMEZCUmpORExFOUJRV1E3UVVGSlJEczdPM2REUVVWdFFqdEJRVUZCT3p0QlFVTnNRaXhWUVVGTkxFOUJRVTg3UVVGRFdDeG5Ra0ZCVVN4dlFrRkVSenRCUVVWWUxHZENRVUZSTEV0QlFVczdRVUZHUml4UFFVRmlPenRCUVV0QkxGZEJRVXNzWlVGQlRDeERRVUZ4UWl4VFFVRnlRaXhIUVVGcFF5eEZRVUZxUXp0QlFVTkJMRmRCUVVzc1dVRkJUQ3hEUVVGclFpeFRRVUZzUWl4RFFVRTBRaXhOUVVFMVFpeERRVUZ0UXl4WlFVRnVRenM3UVVGRlFTeHpRa0ZCVFN4SlFVRk9MRU5CUVZjc1QwRkJXQ3hGUVVGdlFpeGhRVUZITEZOQlFVZ3NRMEZCWVN4SlFVRmlMRU5CUVhCQ0xFVkJRMGNzU1VGRVNDeERRVU5STEc5Q1FVRlpPMEZCUTJoQ0xHVkJRVXNzV1VGQlRDeERRVUZyUWl4VFFVRnNRaXhEUVVFMFFpeEhRVUUxUWl4RFFVRm5ReXhaUVVGb1F6dEJRVU5CTEdWQlFVc3NaVUZCVEN4RFFVRnhRaXhyUWtGQmNrSXNRMEZCZDBNc1YwRkJlRU1zUlVGQmNVUXNVMEZCVXl4SlFVRlVMRU5CUVdNc1NVRkJaQ3hEUVVGdFFpeExRVUY0UlR0QlFVTkVMRTlCU2tnN1FVRkxSRHM3T3pzN08ydENRWHBIYTBJc1dUczdPenM3T3p0QlEwcHlRanM3T3p0QlFVTkJPenM3T3pzN096dEpRVVZOTEU4N1FVRkRTaXh0UWtGQldTeFRRVUZhTEVWQlFYVkNPMEZCUVVFN08wRkJRVUU3TzBGQlJYSkNMRk5CUVVzc1UwRkJUQ3hIUVVGcFFpeFRRVUZxUWp0QlFVTkJMRk5CUVVzc1pVRkJUQ3hIUVVGMVFpeFZRVUZWTEdkQ1FVRldMRU5CUVRKQ0xHbENRVUV6UWl4RFFVRjJRanRCUVVOQkxGTkJRVXNzWVVGQlRDeEhRVUZ4UWl4VlFVRlZMR2RDUVVGV0xFTkJRVEpDTEhOQ1FVRXpRaXhEUVVGeVFqczdRVUZGUVN4VFFVRkxMRmxCUVV3c1IwRkJiMElzVlVGQlZTeG5Ra0ZCVml4RFFVRXlRaXhyUWtGQk0wSXNRMEZCY0VJN1FVRkRRU3hUUVVGTExHbENRVUZNTEVkQlFYbENMRlZCUVZVc1owSkJRVllzUTBGQk1rSXNUMEZCTTBJc1EwRkJla0k3TzBGQlJVRXNVMEZCU3l4blFrRkJUQ3hIUVVGM1FpeFZRVUZWTEdGQlFWWXNRMEZCZDBJc05FSkJRWGhDTEVOQlFYaENPMEZCUTBFc1UwRkJTeXd3UWtGQlRDeEhRVUZyUXl4VlFVRlZMR0ZCUVZZc1EwRkJkMElzYzBKQlFYaENMRU5CUVd4RE8wRkJRMEVzVTBGQlN5eDFRa0ZCVEN4SFFVRXJRaXhWUVVGVkxHRkJRVllzUTBGQmQwSXNiVUpCUVhoQ0xFTkJRUzlDTzBGQlEwRXNVMEZCU3l4elFrRkJUQ3hIUVVFNFFpeFZRVUZWTEdGQlFWWXNRMEZCZDBJc1kwRkJlRUlzUTBGQk9VSTdRVUZEUVN4VFFVRkxMSE5DUVVGTUxFZEJRVGhDTEVWQlFUbENPenRCUVVWQkxGTkJRVXNzYTBKQlFVd3NSMEZCTUVJc1ZVRkJWU3hoUVVGV0xFTkJRWGRDTEhsQ1FVRjRRaXhEUVVFeFFqdEJRVU5CTEZOQlFVc3NhVUpCUVV3c1IwRkJlVUlzVlVGQlZTeGhRVUZXTEVOQlFYZENMRzFDUVVGNFFpeERRVUY2UWp0QlFVTkJMRk5CUVVzc1QwRkJUQ3hIUVVGbExGVkJRVlVzWjBKQlFWWXNRMEZCTWtJc1UwRkJNMElzUTBGQlpqczdRVUZGUVN4VFFVRkxMR05CUVV3c1IwRkJjMElzVlVGQlZTeG5Ra0ZCVml4RFFVRXlRaXhsUVVFelFpeERRVUYwUWpzN1FVRkZRU3hUUVVGTExHRkJRVXdzUjBGQmNVSXNWVUZCVlN4blFrRkJWaXhEUVVFeVFpeG5Ra0ZCTTBJc1EwRkJja0k3UVVGRFFTeFRRVUZMTEdkQ1FVRk1MRWRCUVhkQ0xGVkJRVlVzWjBKQlFWWXNRMEZCTWtJc2EwSkJRVE5DTEVOQlFYaENPenRCUVVWQkxGTkJRVXNzV1VGQlRDeEhRVUZ2UWl4RFFVRndRanRCUVVOQkxGTkJRVXNzWjBKQlFVd3NSMEZCZDBJc1JVRkJlRUk3UVVGRFFTeFRRVUZMTEdsQ1FVRk1MRWRCUVhsQ0xFVkJRWHBDT3p0QlFVVkJMRk5CUVVzc1pVRkJUQ3hEUVVGeFFpeFBRVUZ5UWl4RFFVRTJRaXhyUWtGQlZUdEJRVU55UXl4aFFVRlBMR2RDUVVGUUxFTkJRWGRDTEU5QlFYaENMRVZCUVdsRExHRkJRVXM3UVVGRGNFTXNZMEZCU3l4UFFVRk1MRU5CUVdFc1JVRkJSU3hoUVVGR0xFTkJRV2RDTEU5QlFXaENMRU5CUVhkQ0xFdEJRWEpETzBGQlEwUXNUMEZHUkR0QlFVZEVMRXRCU2tRN08wRkJUVUVzVTBGQlN5eHJRa0ZCVEN4RFFVRjNRaXhuUWtGQmVFSXNRMEZCZVVNc1QwRkJla01zUlVGQmEwUXNXVUZCVFR0QlFVTjBSQ3haUVVGTExHbENRVUZNTEVOQlFYVkNMRk5CUVhaQ0xFTkJRV2xETEUxQlFXcERMRU5CUVhkRExEQkNRVUY0UXp0QlFVTkVMRXRCUmtRN08wRkJTVUVzVTBGQlN5eGpRVUZNTEVOQlFXOUNMRTlCUVhCQ0xFTkJRVFJDTEdkQ1FVRlJPMEZCUVVFc2EwTkJRMmhDTEV0QlFVc3NZVUZCVEN4RFFVRnRRaXhKUVVGdVFpeEZRVUY1UWl4eFFrRkJla0lzUlVGRVowSTdRVUZCUVN4VlFVTXhRaXhMUVVRd1FpeDVRa0ZETVVJc1MwRkVNRUk3TzBGQlJXeERMRmRCUVVzc1MwRkJUQ3hEUVVGWExFdEJRVmdzUjBGQmMwSXNVVUZCVVN4RFFVRTVRanRCUVVORUxFdEJTRVE3TzBGQlMwRXNVMEZCU3l4UFFVRk1MRU5CUVdFc1QwRkJZaXhEUVVGeFFpeHJRa0ZCVlR0QlFVTTNRaXhoUVVGUExHZENRVUZRTEVOQlFYZENMRTlCUVhoQ0xFVkJRV2xETEdGQlFVczdRVUZEY0VNc1kwRkJTeXhaUVVGTUxFTkJRV3RDTEVWQlFVVXNZVUZCY0VJN1FVRkRRU3hqUVVGTExFMUJRVXc3UVVGRFJDeFBRVWhFTzBGQlNVUXNTMEZNUkRzN1FVRlBRU3hUUVVGTExIVkNRVUZNTEVOQlFUWkNMR2RDUVVFM1FpeERRVUU0UXl4UFFVRTVReXhGUVVGMVJDeFpRVUZOTzBGQlF6TkVMRmxCUVVzc1YwRkJURHRCUVVORUxFdEJSa1E3UVVGSFJEczdPenMwUWtGRlR5eExMRVZCUVU4N1FVRkRZaXhWUVVGSkxFdEJRVXNzV1VGQlRDeExRVUZ6UWl4TFFVRXhRaXhGUVVGcFF6dEJRVU12UWl4aFFVRkxMRmxCUVV3c1EwRkJhMElzUzBGQlN5eFpRVUYyUWl4RlFVRnhReXhUUVVGeVF5eERRVUVyUXl4TlFVRXZReXhEUVVGelJDeDVRa0ZCZEVRN1FVRkRRU3hoUVVGTExHVkJRVXdzUTBGQmNVSXNTMEZCU3l4WlFVRXhRaXhGUVVGM1F5eFRRVUY0UXl4RFFVRnJSQ3hOUVVGc1JDeERRVUY1UkN4M1FrRkJla1E3TzBGQlJVRXNZVUZCU3l4WlFVRk1MRU5CUVd0Q0xFdEJRV3hDTEVWQlFYbENMRk5CUVhwQ0xFTkJRVzFETEVkQlFXNURMRU5CUVhWRExIbENRVUYyUXp0QlFVTkJMR0ZCUVVzc1pVRkJUQ3hEUVVGeFFpeExRVUZ5UWl4RlFVRTBRaXhUUVVFMVFpeERRVUZ6UXl4SFFVRjBReXhEUVVFd1F5eDNRa0ZCTVVNN08wRkJSVUVzWVVGQlN5eFpRVUZNTEVkQlFXOUNMRXRCUVhCQ08wRkJRMFE3UVVGRFJqczdPMmxEUVVWWkxFOHNSVUZCVXp0QlFVTndRaXhWUVVGTkxGTkJRVk03UVVGRFlpeGpRVUZOTEZGQlFWRXNUMEZCVWl4RFFVRm5RaXhKUVVSVU8wRkJSV0lzYTBKQlFWVXNVVUZCVVN4UFFVRlNMRU5CUVdkQ0xGRkJSbUk3UVVGSFlpeGpRVUZOTEZGQlFWRXNUMEZCVWl4RFFVRm5RanRCUVVoVUxFOUJRV1k3UVVGTFFTeFZRVUZKTEVOQlFVTXNVVUZCVVN4VFFVRlNMRU5CUVd0Q0xGRkJRV3hDTEVOQlFUSkNMR2RDUVVFelFpeERRVUZNTEVWQlFXMUVPMEZCUTJwRUxHRkJRVXNzWjBKQlFVd3NRMEZCYzBJc1NVRkJkRUlzUTBGQk1rSXNUVUZCTTBJN1FVRkRRU3hoUVVGTExGTkJRVXdzUTBGQlpTeE5RVUZtTzBGQlEwRXNaMEpCUVZFc1UwRkJVaXhEUVVGclFpeEhRVUZzUWl4RFFVRnpRaXhuUWtGQmRFSTdRVUZEUkN4UFFVcEVMRTFCU1U4N1FVRkRUQ3hoUVVGTExGbEJRVXdzUTBGQmEwSXNUVUZCYkVJN1FVRkRRU3huUWtGQlVTeFRRVUZTTEVOQlFXdENMRTFCUVd4Q0xFTkJRWGxDTEdkQ1FVRjZRanRCUVVORU8wRkJRMFk3T3pzNFFrRkZVeXhOTEVWQlFWRTdRVUZCUVRzN1FVRkRhRUlzVlVGQlRTeFZRVUZWTEV0QlFVc3NjMEpCUVV3c1EwRkJORUlzVTBGQk5VSXNRMEZCYzBNc1NVRkJkRU1zUTBGQmFFSTdRVUZEUVN4alFVRlJMR0ZCUVZJc1EwRkJjMElzWTBGQmRFSXNSVUZCYzBNc1YwRkJkRU1zUjBGQmIwUXNUMEZCVHl4SlFVRXpSRHRCUVVOQkxHTkJRVkVzVDBGQlVpeERRVUZuUWl4SlFVRm9RaXhIUVVGMVFpeFBRVUZQTEVsQlFUbENPMEZCUTBFc1kwRkJVU3hUUVVGU0xFTkJRV3RDTEUxQlFXeENMRU5CUVhsQ0xHRkJRWHBDT3p0QlFVVkJMRmRCUVVzc01FSkJRVXdzUTBGQlowTXNWMEZCYUVNc1EwRkJORU1zVDBGQk5VTTdRVUZEUVN4WFFVRkxMSE5DUVVGTUxFTkJRVFJDTEVsQlFUVkNMRU5CUVdsRExFOUJRV3BET3p0QlFVVkJMR05CUVZFc1lVRkJVaXhEUVVGelFpeGxRVUYwUWl4RlFVRjFReXhuUWtGQmRrTXNRMEZCZDBRc1QwRkJlRVFzUlVGQmFVVXNZVUZCU3p0QlFVTndSU3haUVVGTkxFMUJRVTA3UVVGRFZpeG5Ra0ZCVFN4RlFVRkZMR0ZCUVVZc1EwRkJaMElzVlVGQmFFSXNRMEZCTWtJc1QwRkJNMElzUTBGQmJVTXNTVUZFTDBJN1FVRkZWaXh2UWtGQlZTeEZRVUZGTEdGQlFVWXNRMEZCWjBJc1ZVRkJhRUlzUTBGQk1rSXNUMEZCTTBJc1EwRkJiVU1zVVVGR2JrTTdRVUZIVml4blFrRkJUU3hGUVVGRkxHRkJRVVlzUTBGQlowSXNWVUZCYUVJc1EwRkJNa0lzVDBGQk0wSXNRMEZCYlVNN1FVRklMMElzVTBGQldqczdRVUZOUVN4bFFVRkxMRmxCUVV3c1EwRkJhMElzUjBGQmJFSTdRVUZEUVN4bFFVRkxMRTFCUVV3N1FVRkRSQ3hQUVZSRU8wRkJWVUVzVjBGQlN5eHhRa0ZCVER0QlFVTkVPenM3YVVOQlJWa3NUU3hGUVVGUk8wRkJRMjVDTEZWQlFVMHNWVUZCVlN4VFFVRlRMR0ZCUVZRc1owTkJRVzlFTEU5QlFVOHNTVUZCTTBRc1QwRkJhRUk3UVVGRFFTeGpRVUZSTEUxQlFWSTdPMEZCUlVFc1ZVRkJUU3hUUVVGVExGTkJRVk1zWVVGQlZDd3lRMEZCSzBRc1QwRkJUeXhKUVVGMFJTeFBRVUZtTzBGQlEwRXNZVUZCVHl4VFFVRlFMRU5CUVdsQ0xFMUJRV3BDTEVOQlFYZENMR2RDUVVGNFFqczdRVUZGUVN4VlFVRk5MRkZCUVZFc1MwRkJTeXhuUWtGQlRDeERRVUZ6UWl4VFFVRjBRaXhEUVVGblF5eHZRa0ZCV1R0QlFVTjRSQ3hsUVVGUExGTkJRVk1zU1VGQlZDeExRVUZyUWl4UFFVRlBMRWxCUVhwQ0xFbEJRV2xETEZOQlFWTXNVVUZCVkN4TFFVRnpRaXhQUVVGUExGRkJRWEpGTzBGQlEwUXNUMEZHWVN4RFFVRmtPMEZCUjBFc1YwRkJTeXhuUWtGQlRDeERRVUZ6UWl4TlFVRjBRaXhEUVVFMlFpeExRVUUzUWl4RlFVRnZReXhEUVVGd1F6czdRVUZGUVN4WFFVRkxMSEZDUVVGTU8wRkJRMEVzVjBGQlN5eDFRa0ZCVER0QlFVTkVPenM3YTBOQlJXRTdRVUZEV2l4WFFVRkxMRTlCUVV3c1EwRkJZU3hQUVVGaUxFTkJRWEZDTEd0Q1FVRlZPMEZCUXpkQ0xHVkJRVThzVTBGQlVDeERRVUZwUWl4TlFVRnFRaXhEUVVGM1FpeG5Ra0ZCZUVJN1FVRkRSQ3hQUVVaRU8wRkJSMEVzVjBGQlN5eG5Ra0ZCVEN4SFFVRjNRaXhGUVVGNFFqczdRVUZGUVN4WFFVRkxMSE5DUVVGTUxFTkJRVFJDTEU5QlFUVkNMRU5CUVc5RExHZENRVUZSTzBGQlF6RkRMR0ZCUVVzc1RVRkJURHRCUVVORUxFOUJSa1E3TzBGQlNVRXNWMEZCU3l4eFFrRkJURHM3UVVGRlFTeFhRVUZMTEUxQlFVdzdRVUZEUkRzN096UkRRVVYxUWp0QlFVTjBRaXhWUVVGSkxFdEJRVXNzWjBKQlFVd3NRMEZCYzBJc1RVRkJkRUlzUjBGQkswSXNRMEZCYmtNc1JVRkJjME03UVVGRGNFTXNZVUZCU3l4blFrRkJUQ3hEUVVGelFpeFRRVUYwUWl4RFFVRm5ReXhIUVVGb1F5eERRVUZ2UXl4dFEwRkJjRU03UVVGRFJDeFBRVVpFTEUxQlJVODdRVUZEVEN4aFFVRkxMR2RDUVVGTUxFTkJRWE5DTEZOQlFYUkNMRU5CUVdkRExFMUJRV2hETEVOQlFYVkRMRzFEUVVGMlF6dEJRVU5FTzBGQlEwWTdPenM0UTBGRmVVSTdRVUZCUVRzN1FVRkRlRUlzVjBGQlN5eFBRVUZNTEVOQlFXRXNUMEZCWWl4RFFVRnhRaXhyUWtGQlZUdEJRVU0zUWl4WlFVRkpMRTlCUVVzc2FVSkJRVXdzUTBGQmRVSXNUMEZCZGtJc1EwRkJLMElzVDBGQlR5eFBRVUZRTEVOQlFXVXNTVUZCT1VNc1RVRkJkMFFzUTBGQlF5eERRVUUzUkN4RlFVRm5SVHRCUVVNNVJDeHBRa0ZCVHl4VFFVRlFMRU5CUVdsQ0xFZEJRV3BDTEVOQlFYRkNMR3RDUVVGeVFqdEJRVU5CTEdsQ1FVRlBMRk5CUVZBc1EwRkJhVUlzVFVGQmFrSXNRMEZCZDBJc1owSkJRWGhDTzBGQlEwUXNVMEZJUkN4TlFVZFBPMEZCUTB3c2FVSkJRVThzVTBGQlVDeERRVUZwUWl4TlFVRnFRaXhEUVVGM1FpeHJRa0ZCZUVJN1FVRkRSRHRCUVVOR0xFOUJVRVE3UVVGUlJEczdPelpDUVVWUk8wRkJRVUU3TzBGQlExQXNWVUZCVFN4UFFVRlBPMEZCUTFnc1owSkJRVkVzWjBKQlJFYzdRVUZGV0N4bFFVRlBMRmRCUmtrN1FVRkhXQ3hwUWtGQlV5eExRVUZMTzBGQlNFZ3NUMEZCWWpzN1FVRk5RU3hYUVVGTExHbENRVUZNTEVOQlFYVkNMRTlCUVhaQ0xFTkJRU3RDTEhGQ1FVRmhPMEZCUXpGRExHdENRVUZWTEZOQlFWWXNSMEZCYzBJc1JVRkJkRUk3UVVGRFJDeFBRVVpFT3p0QlFVbEJMRmRCUVVzc1lVRkJUQ3hEUVVGdFFpeFBRVUZ1UWl4RFFVRXlRaXhuUWtGQlVUdEJRVU5xUXl4aFFVRkxMRk5CUVV3c1EwRkJaU3hOUVVGbUxFTkJRWE5DTEZsQlFYUkNPMEZCUTBRc1QwRkdSRHRCUVVkQkxGZEJRVXNzWjBKQlFVd3NRMEZCYzBJc1QwRkJkRUlzUTBGQk9FSXNaMEpCUVZFN1FVRkRjRU1zWVVGQlN5eFRRVUZNTEVOQlFXVXNSMEZCWml4RFFVRnRRaXhaUVVGdVFqdEJRVU5FTEU5QlJrUTdPMEZCU1VFc2MwSkJRVTBzU1VGQlRpeERRVUZYTEU5QlFWZ3NSVUZCYjBJc1lVRkJSeXhUUVVGSUxFTkJRV0VzU1VGQllpeERRVUZ3UWl4RlFVTkhMRWxCUkVnc1EwRkRVU3h2UWtGQldUdEJRVU5vUWl4bFFVRkxMR0ZCUVV3c1EwRkJiVUlzVDBGQmJrSXNRMEZCTWtJc1owSkJRVkU3UVVGRGFrTXNaVUZCU3l4VFFVRk1MRU5CUVdVc1IwRkJaaXhEUVVGdFFpeFpRVUZ1UWp0QlFVTkVMRk5CUmtRN1FVRkhRU3hsUVVGTExHbENRVUZNTEVOQlFYVkNMRTlCUVhaQ0xFTkJRU3RDTEZWQlFVTXNVMEZCUkN4RlFVRlpMRXRCUVZvc1JVRkJjMEk3UVVGRGJrUXNhVUpCUVVzc1lVRkJUQ3hEUVVGdFFpeExRVUZ1UWl4RlFVRXdRaXhUUVVFeFFpeEhRVUZ6UXl4VFFVRlRMRWxCUVZRc1EwRkJZeXhKUVVGa0xFTkJRVzFDTEU5QlFXNUNMRU5CUVRKQ0xFdEJRVE5DTEVWQlFXdERMRTFCUVhoRk8wRkJRMEVzYlVKQlFWTXNTVUZCVkN4RFFVRmpMRWxCUVdRc1EwRkJiVUlzVDBGQmJrSXNRMEZCTWtJc1MwRkJNMElzUlVGQmEwTXNUMEZCYkVNc1EwRkJNRU1zYTBKQlFWVTdRVUZEYkVRc2MwSkJRVlVzYTBKQlFWWXNRMEZCTmtJc1YwRkJOMElzUlVGQk1FTXNUVUZCTVVNN1FVRkRSQ3hYUVVaRU96dEJRVWxCTEdOQlFVa3NVMEZCVXl4SlFVRlVMRU5CUVdNc1NVRkJaQ3hEUVVGdFFpeFBRVUZ1UWl4RFFVRXlRaXhMUVVFelFpeEZRVUZyUXl4TlFVRnNReXhMUVVFMlF5eERRVUZxUkN4RlFVRnZSRHRCUVVOc1JDeHRRa0ZCU3l4blFrRkJUQ3hEUVVGelFpeExRVUYwUWl4RlFVRTJRaXhUUVVFM1FpeERRVUYxUXl4TlFVRjJReXhEUVVFNFF5eFpRVUU1UXp0QlFVTkVPMEZCUTBZc1UwRlVSRHM3UVVGWFFTeGxRVUZMTEdsQ1FVRk1MRWRCUVhsQ0xGTkJRVk1zU1VGQlZDeERRVUZqTEVsQlFXUXNRMEZCYlVJc2FVSkJRVFZETzBGQlEwRXNaVUZCU3l4MVFrRkJURHRCUVVORUxFOUJiRUpJTzBGQmJVSkVPenM3T3pzN1FVRkhTQ3hQUVVGUExFOUJRVkFzUjBGQmFVSXNUMEZCYWtJN096czdPenM3U1VOMlRVMHNUeXhIUVVOS0xHbENRVUZaTEZOQlFWb3NSVUZCZFVNN1FVRkJRVHM3UVVGQlFTeE5RVUZvUWl4UFFVRm5RaXgxUlVGQlRpeEpRVUZOT3p0QlFVRkJPenRCUVVOeVF5eFBRVUZMTEZOQlFVd3NSMEZCYVVJc1UwRkJha0k3UVVGRFFTeFBRVUZMTEU5QlFVd3NSMEZCWlN4VlFVRlZMR2RDUVVGV0xFTkJRVEpDTEdWQlFUTkNMRU5CUVdZN1FVRkRRU3hQUVVGTExGRkJRVXdzUjBGQlowSXNWVUZCVlN4blFrRkJWaXhEUVVFeVFpeG5Ra0ZCTTBJc1EwRkJhRUk3UVVGRFFTeFBRVUZMTEZWQlFVd3NSMEZCYTBJc1NVRkJiRUk3UVVGRFFTeFBRVUZMTEU5QlFVd3NSMEZCWlN4UFFVRm1PenRCUVVWQkxFOUJRVXNzVDBGQlRDeERRVUZoTEU5QlFXSXNRMEZCY1VJc2EwSkJRVlU3UVVGRE4wSXNWMEZCVHl4blFrRkJVQ3hEUVVGM1FpeFBRVUY0UWl4RlFVRnBReXhoUVVGTE8wRkJRM0JETEZGQlFVVXNZMEZCUmp0QlFVTkJMRlZCUVUwc1VVRkJVU3hOUVVGTkxGTkJRVTRzUTBGQlowSXNUMEZCYUVJc1EwRkJkMElzU1VGQmVFSXNRMEZCTmtJc1RVRkJTeXhQUVVGc1F5eEZRVUV5UXl4TlFVRXpReXhEUVVGa096dEJRVVZCTEZWQlFVa3NUMEZCVHl4VlFVRlFMRWRCUVc5Q0xFZEJRWGhDTEVWQlFUWkNPMEZCUXpOQ0xHVkJRVThzVTBGQlVDeERRVUZwUWl4SFFVRnFRaXhEUVVGeFFpeGxRVUZ5UWp0QlFVTkJMR05CUVVzc1VVRkJUQ3hEUVVGakxFdEJRV1FzUlVGQmNVSXNTMEZCY2tJc1EwRkJNa0lzVFVGQk0wSXNSMEZCZFVNc1RVRkJTeXhSUVVGTUxFTkJRV01zUzBGQlpDeEZRVUZ4UWl4cFFrRkJja0lzUjBGQmVVTXNSVUZCYUVZN1FVRkRRU3hqUVVGTExGTkJRVXdzUTBGQlpTeGpRVUZtTEVOQlFUaENMRVZCUVVVc1ZVRkJWU3hSUVVGYUxFVkJRWE5DTEU5QlFVOHNUMEZCTjBJc1JVRkJjME1zVVVGQlVTeFRRVUU1UXl4RlFVRTVRanM3UVVGRlFTeGpRVUZMTEZGQlFVd3NRMEZCWXl4UFFVRmtMRU5CUVhOQ0xGVkJRVU1zVDBGQlJDeEZRVUZWTEVOQlFWWXNSVUZCWjBJN1FVRkRjRU1zWTBGQlNTeE5RVUZOTEV0QlFVNHNTVUZCWlN4VlFVRlZMRTFCUVVzc1ZVRkJiRU1zUlVGQk9FTTdRVUZETlVNc2IwSkJRVkVzUzBGQlVpeERRVUZqTEdOQlFXUXNRMEZCTmtJc1VVRkJOMEk3UVVGRFFTeHJRa0ZCU3l4UFFVRk1MRU5CUVdFc1EwRkJZaXhGUVVGblFpeFRRVUZvUWl4RFFVRXdRaXhOUVVFeFFpeERRVUZwUXl4bFFVRnFRenRCUVVORU8wRkJRMFlzVTBGTVJEdEJRVTlFTEU5QldrUXNUVUZaVHl4SlFVRkpMRTlCUVVvc1JVRkJZVHRCUVVOc1FpeGxRVUZQTEZOQlFWQXNRMEZCYVVJc1IwRkJha0lzUTBGQmNVSXNaMEpCUVhKQ08wRkJRMEVzWTBGQlN5eFJRVUZNTEVOQlFXTXNTMEZCWkN4RlFVRnhRaXhUUVVGeVFpeERRVUVyUWl4SFFVRXZRaXhEUVVGdFF5eG5Ra0ZCYmtNN08wRkJSVUVzWTBGQlN5eFJRVUZNTEVOQlFXTXNUMEZCWkN4RFFVRnpRaXhWUVVGRExFOUJRVVFzUlVGQlZTeERRVUZXTEVWQlFXZENPMEZCUTNCRExHZENRVUZMTEZGQlFVd3NRMEZCWXl4RFFVRmtMRVZCUVdsQ0xGTkJRV3BDTEVOQlFUSkNMRTFCUVROQ0xFTkJRV3RETEdWQlFXeERPMEZCUTBFc1owSkJRVXNzVDBGQlRDeERRVUZoTEVOQlFXSXNSVUZCWjBJc1UwRkJhRUlzUTBGQk1FSXNUVUZCTVVJc1EwRkJhVU1zWlVGQmFrTTdRVUZEUVN4clFrRkJVU3hMUVVGU0xFTkJRV01zWTBGQlpDeERRVUUyUWl4UlFVRTNRanRCUVVOQkxHTkJRVWtzVFVGQlRTeExRVUZXTEVWQlFXbENPMEZCUTJZc2EwSkJRVXNzVVVGQlRDeERRVUZqTEVOQlFXUXNSVUZCYVVJc1UwRkJha0lzUTBGQk1rSXNUVUZCTTBJc1EwRkJhME1zWjBKQlFXeERPMEZCUTBFc2EwSkJRVXNzVDBGQlRDeERRVUZoTEVOQlFXSXNSVUZCWjBJc1UwRkJhRUlzUTBGQk1FSXNUVUZCTVVJc1EwRkJhVU1zWjBKQlFXcERPMEZCUTBRN1FVRkRSaXhUUVZKRU8wRkJVMFE3TzBGQlJVUXNXVUZCU3l4VlFVRk1MRWRCUVd0Q0xFMUJRVXNzVlVGQlRDeExRVUZ2UWl4TFFVRndRaXhIUVVFMFFpeEpRVUUxUWl4SFFVRnRReXhMUVVGeVJEdEJRVU5FTEV0QmFFTkVPMEZCYVVORUxFZEJiRU5FTzBGQmJVTkVMRU03TzBGQlIwZ3NUMEZCVHl4UFFVRlFMRWRCUVdsQ0xFOUJRV3BDT3pzN096czdPMGxET1VOTkxGa3NSMEZEU2l4elFrRkJXU3hUUVVGYUxFVkJRWFZDTzBGQlFVRTdPMEZCUVVFN08wRkJRM0pDTEU5QlFVc3NVMEZCVEN4SFFVRnBRaXhUUVVGcVFqdEJRVU5CTEU5QlFVc3NTVUZCVEN4SFFVRlpMRlZCUVZVc1owSkJRVllzUTBGQk1rSXNNRUpCUVROQ0xFTkJRVm83UVVGRFFTeFBRVUZMTEU5QlFVd3NSMEZCWlN4VlFVRlZMR2RDUVVGV0xFTkJRVEpDTEhWQ1FVRXpRaXhEUVVGbU8wRkJRMEVzVDBGQlN5eFBRVUZNTEVkQlFXVXNWVUZCVlN4aFFVRldMRU5CUVhkQ0xIRkNRVUY0UWl4RFFVRm1PMEZCUTBFc1QwRkJTeXhOUVVGTUxFZEJRV01zVlVGQlZTeGhRVUZXTEVOQlFYZENMR3RDUVVGNFFpeERRVUZrTzBGQlEwRXNUMEZCU3l4WFFVRk1MRWRCUVcxQ0xGVkJRVlVzWVVGQlZpeERRVUYzUWl4dFFrRkJlRUlzUTBGQmJrSTdRVUZEUVN4UFFVRkxMRlZCUVV3c1IwRkJhMElzUTBGQmJFSTdPMEZCUlVFc1QwRkJTeXhQUVVGTUxFTkJRV0VzVDBGQllpeERRVUZ4UWl4clFrRkJWVHRCUVVNM1FpeFhRVUZQTEdkQ1FVRlFMRU5CUVhkQ0xFOUJRWGhDTEVWQlFXbERMR0ZCUVVzN1FVRkJRU3hWUVVNMVFpeExRVVEwUWl4SFFVTnNRaXhGUVVGRkxHRkJRVVlzUTBGQlowSXNUMEZFUlN4RFFVTTFRaXhMUVVRMFFqczdPMEZCUjNCRExGVkJRVWtzVlVGQlZTeE5RVUZMTEZWQlFXNUNMRVZCUVN0Q08wRkJRemRDTEdOQlFVc3NUMEZCVEN4RFFVRmhMRTFCUVVzc1ZVRkJiRUlzUlVGQk9FSXNVMEZCT1VJc1EwRkJkME1zVFVGQmVFTXNRMEZCSzBNc1VVRkJMME03UVVGRFFTeGpRVUZMTEVsQlFVd3NRMEZCVlN4TlFVRkxMRlZCUVdZc1JVRkJNa0lzVTBGQk0wSXNRMEZCY1VNc1RVRkJja01zUTBGQk5FTXNVVUZCTlVNN08wRkJSVUVzWTBGQlN5eFBRVUZNTEVOQlFXRXNTMEZCWWl4RlFVRnZRaXhUUVVGd1FpeERRVUU0UWl4SFFVRTVRaXhEUVVGclF5eFJRVUZzUXp0QlFVTkJMR05CUVVzc1NVRkJUQ3hEUVVGVkxFdEJRVllzUlVGQmFVSXNVMEZCYWtJc1EwRkJNa0lzUjBGQk0wSXNRMEZCSzBJc1VVRkJMMEk3TzBGQlJVRXNZMEZCU3l4VlFVRk1MRWRCUVd0Q0xFdEJRV3hDTzBGQlEwUTdPMEZCUlVRc1ZVRkJTU3hQUVVGUExGVkJRVkFzU1VGQmNVSXNSMEZCZWtJc1JVRkJPRUk3UVVGRE5VSXNZMEZCU3l4UFFVRk1MRU5CUVdFc1UwRkJZaXhEUVVGMVFpeEhRVUYyUWl4RFFVRXlRaXhyUWtGQk0wSTdRVUZEUVN4alFVRkxMRmRCUVV3c1EwRkJhVUlzVTBGQmFrSXNRMEZCTWtJc1RVRkJNMElzUTBGQmEwTXNaVUZCYkVNN1FVRkRSRHRCUVVOR0xFdEJha0pFTzBGQmEwSkVMRWRCYmtKRU96dEJRWEZDUVN4UFFVRkxMRTFCUVV3c1EwRkJXU3huUWtGQldpeERRVUUyUWl4UFFVRTNRaXhGUVVGelF5eFpRVUZOTzBGQlF6RkRMRkZCUVVrc1QwRkJUeXhWUVVGUUxFbEJRWEZDTEVkQlFYcENMRVZCUVRoQ08wRkJRelZDTEZsQlFVc3NUMEZCVEN4RFFVRmhMRk5CUVdJc1EwRkJkVUlzVFVGQmRrSXNRMEZCT0VJc2EwSkJRVGxDTzBGQlEwRXNXVUZCU3l4WFFVRk1MRU5CUVdsQ0xGTkJRV3BDTEVOQlFUSkNMRWRCUVROQ0xFTkJRU3RDTEdWQlFTOUNPMEZCUTBRN1FVRkRSaXhIUVV4RU8wRkJUVVFzUXpzN1FVRkhTQ3hQUVVGUExFOUJRVkFzUjBGQmFVSXNXVUZCYWtJN096czdPMEZEZUVOQk96czdPMEZCUTBFN096czdRVUZEUVRzN096dEJRVU5CT3pzN08wRkJRMEU3T3pzN1FVRkRRVHM3T3p0QlFVTkJPenM3T3pzN1FVRkhRU3hKUVVGTkxGTkJRVk1zY1VKQlFWY3NVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHTkJRWFpDTEVOQlFWZ3NRMEZCWmpzN1FVRkZRU3hKUVVGSkxGTkJRVk1zWVVGQlZDeERRVUYxUWl4MVFrRkJka0lzUTBGQlNpeEZRVUZ4UkR0QlFVTnVSQ3hOUVVGTkxHTkJRV01zYzBKQlFWa3NVMEZCVXl4aFFVRlVMRU5CUVhWQ0xIVkNRVUYyUWl4RFFVRmFMRVZCUVRaRUxFbEJRVGRFTEVOQlFYQkNPMEZCUTBRN08wRkJSVVFzU1VGQlNTeFRRVUZUTEdGQlFWUXNRMEZCZFVJc2IwSkJRWFpDTEVOQlFVb3NSVUZCYTBRN1FVRkRhRVFzVFVGQlRTeFBRVUZQTERKQ1FVRnBRaXhUUVVGVExHRkJRVlFzUTBGQmRVSXNiMEpCUVhaQ0xFTkJRV3BDTEVOQlFXSTdRVUZEUkRzN1FVRkZSQ3hKUVVGSkxGTkJRVk1zWVVGQlZDeERRVUYxUWl4bFFVRjJRaXhEUVVGS0xFVkJRVFpETzBGQlF6TkRMRTFCUVUwc1kwRkJZeXh6UWtGQldTeFRRVUZUTEdGQlFWUXNRMEZCZFVJc1pVRkJka0lzUTBGQldpeEZRVUZ4UkN4TFFVRnlSQ3hEUVVGd1FqdEJRVU5FT3p0QlFVVkVMRWxCUVVrc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEhsQ1FVRjJRaXhEUVVGS0xFVkJRWFZFTzBGQlEzSkVMRTFCUVUwc1YwRkJWeXgxUWtGQllTeFRRVUZUTEdGQlFWUXNRMEZCZFVJc2VVSkJRWFpDTEVOQlFXSXNRMEZCYWtJN1FVRkRSRHM3UVVGRlJDeEpRVUZKTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXhWUVVGMlFpeERRVUZLTEVWQlFYZERPMEZCUTNSRExFMUJRVTBzVlVGQlZTeHpRa0ZCV1N4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzVlVGQmRrSXNRMEZCV2l4RFFVRm9RanRCUVVORU96dEJRVVZFTEVsQlFVa3NVMEZCVXl4aFFVRlVMRU5CUVhWQ0xHVkJRWFpDTEVOQlFVb3NSVUZCTmtNN1FVRkRNME1zVFVGQlRTeGxRVUZsTERKQ1FVRnBRaXhUUVVGVExHRkJRVlFzUTBGQmRVSXNaVUZCZGtJc1EwRkJha0lzUTBGQmNrSTdRVUZEUkRzN1FVRkZSQ3hKUVVGSkxGTkJRVk1zWVVGQlZDeERRVUYxUWl4VFFVRjJRaXhEUVVGS0xFVkJRWFZETzBGQlEzSkRMRTFCUVUwc1UwRkJVeXh4UWtGQlZ5eFRRVUZUTEdGQlFWUXNRMEZCZFVJc1UwRkJka0lzUTBGQldDeERRVUZtTzBGQlEwUTdPenRCUTNKRFJEczdPMEZEUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN096czdRVU53VEVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTndSRUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVU51UWtFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGRGVrUkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVU5NUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlF5OUZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTNCRVFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVU5zUWtFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlEzUkdRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVU55UWtFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUXpGQ1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenRCUTNCQ1FUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3T3p0QlEyaEhRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGRFdFRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEY0VOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlEyeEZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEWkVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTNKRVFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkRaRUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUTNCRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTmFRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkRja1JCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlF6TkNRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVTXZVMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEY2tKQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZEZUV4Qk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRMnhDUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkRXRUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZET1V0Qk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlEyeE9RVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVNJc0ltWnBiR1VpT2lKblpXNWxjbUYwWldRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lLR1oxYm1OMGFXOXVJR1VvZEN4dUxISXBlMloxYm1OMGFXOXVJSE1vYnl4MUtYdHBaaWdoYmx0dlhTbDdhV1lvSVhSYmIxMHBlM1poY2lCaFBYUjVjR1Z2WmlCeVpYRjFhWEpsUFQxY0ltWjFibU4wYVc5dVhDSW1KbkpsY1hWcGNtVTdhV1lvSVhVbUptRXBjbVYwZFhKdUlHRW9ieXdoTUNrN2FXWW9hU2x5WlhSMWNtNGdhU2h2TENFd0tUdDJZWElnWmoxdVpYY2dSWEp5YjNJb1hDSkRZVzV1YjNRZ1ptbHVaQ0J0YjJSMWJHVWdKMXdpSzI4clhDSW5YQ0lwTzNSb2NtOTNJR1l1WTI5a1pUMWNJazFQUkZWTVJWOU9UMVJmUms5VlRrUmNJaXhtZlhaaGNpQnNQVzViYjEwOWUyVjRjRzl5ZEhNNmUzMTlPM1JiYjExYk1GMHVZMkZzYkNoc0xtVjRjRzl5ZEhNc1puVnVZM1JwYjI0b1pTbDdkbUZ5SUc0OWRGdHZYVnN4WFZ0bFhUdHlaWFIxY200Z2N5aHVQMjQ2WlNsOUxHd3NiQzVsZUhCdmNuUnpMR1VzZEN4dUxISXBmWEpsZEhWeWJpQnVXMjlkTG1WNGNHOXlkSE45ZG1GeUlHazlkSGx3Wlc5bUlISmxjWFZwY21VOVBWd2lablZ1WTNScGIyNWNJaVltY21WeGRXbHlaVHRtYjNJb2RtRnlJRzg5TUR0dlBISXViR1Z1WjNSb08yOHJLeWx6S0hKYmIxMHBPM0psZEhWeWJpQnpmU2tpTENKamJHRnpjeUJJWldGa1pYSWdlMXh1SUNCamIyNXpkSEoxWTNSdmNpaGpiMjUwWVdsdVpYSXBJSHRjYmlBZ0lDQjBhR2x6TG1obFlXUmxjaUE5SUdOdmJuUmhhVzVsY2x4dUlDQWdJSFJvYVhNdWRISnBaMmRsY2lBOUlHTnZiblJoYVc1bGNpNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWMybDBaUzFvWldGa1pYSmZYMjVoZGkxMGNtbG5aMlZ5SnlsY2JpQWdJQ0IwYUdsekxuZHlZWEJ3WlhJZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuTnBkR1V0YUdWaFpHVnlYMTkzY21Gd2NHVnlKeWxjYmlBZ0lDQjBhR2x6TG1SeWIzQkViM2R1SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0lvSnk1a2NtOXdYMTkwY21sbloyVnlKeWxjYmx4dUlDQWdJSFJvYVhNdWRISnBaMmRsY2k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNobEtTQTlQaUI3WEc0Z0lDQWdJQ0IwYUdsekxuUnZaMmRzWlZacGMybGlhV3hwZEhrb0tWeHVJQ0FnSUgwcFhHNWNiaUFnSUNCMGFHbHpMbVJ5YjNCRWIzZHVMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLR1VwSUQwK0lIdGNiaUFnSUNBZ0lHVXVjSEpsZG1WdWRFUmxabUYxYkhRb0tWeHVJQ0FnSUgwcFhHNGdJSDFjYmx4dUlDQjBiMmRuYkdWV2FYTnBZbWxzYVhSNUtDa2dlMXh1SUNBZ0lIUm9hWE11ZDNKaGNIQmxjaTVqYkdGemMweHBjM1F1ZEc5bloyeGxLQ2R6YVhSbExXaGxZV1JsY2w5ZmQzSmhjSEJsY2kwdGFHbGtaU2NwWEc0Z0lIMWNibjFjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCSVpXRmtaWEpjYmlJc0ltbHRjRzl5ZENCaGVHbHZjeUJtY205dElDZGhlR2x2Y3lkY2JtbHRjRzl5ZENCeGN5Qm1jbTl0SUNkeGN5ZGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdZMnhoYzNNZ1RHOWhaRTF2Y21VZ2UxeHVJQ0JqYjI1emRISjFZM1J2Y2loamIyNTBZV2x1WlhJcElIdGNiaUFnSUNCMGFHbHpMbU52Ym5SaGFXNWxjaUE5SUdOdmJuUmhhVzVsY2x4dUlDQWdJSFJvYVhNdVptOXZkR1Z5SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduWm05dmRHVnlMbk5wZEdVdFptOXZkR1Z5SnlsY2JpQWdJQ0IwYUdsekxuZGhhWFFnUFNCbVlXeHpaVnh1SUNBZ0lIUm9hWE11Y0dGblpTQTlJREZjYmlBZ0lDQjBhR2x6TG1SaGRHVWdQU0IyWVhKekxuQnZjM1JFWVhSbFhHNGdJQ0FnZEdocGN5NXBaQ0E5SUhaaGNuTXVjRzl6ZEVsRVhHNWNiaUFnSUNCMGFHbHpMbk5sYkdWamRDQTlJSHQ5WEc1Y2JpQWdJQ0IwYUdsekxtTmhjbVJmYzJOeWIyeHNJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbU5oY21SZlgzTmpjbTlzYkNjcFhHNGdJQ0FnZEdocGN5NWpZWEprWDJWdVpDQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NWpZWEprWDE5bGJtUW5LVnh1WEc0Z0lDQWdkMmx1Wkc5M0xtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ozTmpjbTlzYkNjc0lDZ3BJRDArSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJSE5qY205c2JFSnZkSFJ2YlNBOUlHUnZZM1Z0Wlc1MExtSnZaSGt1YzJOeWIyeHNTR1ZwWjJoMElDMGdaRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1MExuTmpjbTlzYkZSdmNDQXRJQ2gzYVc1a2IzY3VhVzV1WlhKSVpXbG5hSFFnS3lCMGFHbHpMbVp2YjNSbGNpNXZabVp6WlhSSVpXbG5hSFFwWEc1Y2JpQWdJQ0FnSUdsbUlDaHpZM0p2Ykd4Q2IzUjBiMjBnUEQwZ0tIZHBibVJ2ZHk1cGJtNWxja2hsYVdkb2RDQXFJRElwSUNZbUlDRjBhR2x6TG5kaGFYUXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWhaR1JRYjNOMEtDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1M1lXbDBJRDBnZEhKMVpWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwcFhHNGdJSDFjYmx4dUlDQmhaR1JRYjNOMEtDa2dlMXh1SUNBZ0lHTnZibk4wSUdSaGRHRWdQU0I3WEc0Z0lDQWdJQ0JoWTNScGIyNDZJQ2R3ZFdKc2FXTmhkR2x2Ymw5c2IyRmtYMjF2Y21VbkxGeHVJQ0FnSUNBZ2NHOXpkRjlrWVhSbE9pQjBhR2x6TG1SaGRHVXNYRzRnSUNBZ0lDQndiM04wWDJsa09pQjBhR2x6TG1sa0xGeHVJQ0FnSUNBZ2NHRm5aVG9nZEdocGN5NXdZV2RsWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZWGhwYjNNdWNHOXpkQ2hoYW1GNGRYSnNMQ0J4Y3k1emRISnBibWRwWm5rb1pHRjBZU2twWEc0Z0lDQWdJQ0F1ZEdobGJpaHlaWE1nUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnlaWE11WkdGMFlTNWtZWFJoTG5CdmMzUnpMbVp2Y2tWaFkyZ29jRzl6ZENBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiMjUwWVdsdVpYSXVhVzV6WlhKMFFXUnFZV05sYm5SSVZFMU1LQ2RpWldadmNtVmxibVFuTENCd2IzTjBMbU52Ym5SbGJuUXBYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0ZuWlNBclBTQXhYRzRnSUNBZ0lDQWdJSFJvYVhNdWQyRnBkQ0E5SUdaaGJITmxYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tISmxjeTVrWVhSaExtUmhkR0V1Y0c5emRITXViR1Z1WjNSb0lEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1allYSmtYM05qY205c2JDNWpiR0Z6YzB4cGMzUXVZV1JrS0NkallYSmtMUzFvYVdSbEp5bGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxtTmhjbVJmWlc1a0xtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0oyTmhjbVF0TFdocFpHVW5LVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnTG1OaGRHTm9LQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1allYSmtYM05qY205c2JDNWpiR0Z6YzB4cGMzUXVZV1JrS0NkallYSmtMUzFvYVdSbEp5bGNiaUFnSUNBZ0lDQWdkR2hwY3k1allYSmtYMlZ1WkM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkallYSmtMUzFvYVdSbEp5bGNiaUFnSUNBZ0lIMHBYRzRnSUgxY2JuMWNiaUlzSW1WNGNHOXlkQ0JrWldaaGRXeDBJR05zWVhOeklFMWxiV0psY2lCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0dOdmJuUmhhVzVsY2lrZ2UxeHVJQ0FnSUhSb2FYTXVZMjl1ZEdGcGJtVnlJRDBnWTI5dWRHRnBibVZ5WEc0Z0lDQWdkR2hwY3k1aWRYUjBiMjV6SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0p5NWlkWFIwYjI1ZlgyRnVZMmh2Y2ljcFhHNWNiaUFnSUNCMGFHbHpMbk5sWTNScGIyNXpYMk52Ym5SaGFXNWxjaUE5SUdOdmJuUmhhVzVsY2k1eGRXVnllVk5sYkdWamRHOXlLQ2N1YldWdFltVnlYMTloWW05MWRDY3BYRzRnSUNBZ2RHaHBjeTV6WldOMGFXOXVjeUE5SUdOdmJuUmhhVzVsY2k1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NjdWMyVmpkR2x2Ymw5ZmNHOXpkQ2NwWEc1Y2JpQWdJQ0IwYUdsekxtSjFkSFJ2Ym5NdVptOXlSV0ZqYUNoaWRYUjBiMjRnUFQ0Z2UxeHVJQ0FnSUNBZ1luVjBkRzl1TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0dVcElEMCtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdhVzVrWlhnZ1BTQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWFXNWtaWGhQWmk1allXeHNLSFJvYVhNdVluVjBkRzl1Y3l3Z1pTNWpkWEp5Wlc1MFZHRnlaMlYwS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMbk5qY205c2JGUnZLR2x1WkdWNEtWeHVJQ0FnSUNBZ2ZTbGNiaUFnSUNCOUtWeHVJQ0I5WEc1Y2JpQWdjMk55YjJ4c1ZHOG9hVzVrWlhncElIdGNiaUFnSUNCamIyNXpkQ0IwYjFSdmNDQTlJSFJvYVhNdWMyVmpkR2x2Ym5OYmFXNWtaWGhkTG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BMblJ2Y0Z4dUlDQWdJSFJvYVhNdWMyVmpkR2x2Ym5OZlkyOXVkR0ZwYm1WeUxuTmpjbTlzYkZSdktIdGNiaUFnSUNBZ0lIUnZjRG9nZEc5VWIzQWdMU0F4TkRBc1hHNGdJQ0FnSUNCaVpXaGhkbWx2Y2pvZ0ozTnRiMjkwYUNkY2JpQWdJQ0I5S1Z4dUlDQjlYRzU5WEc0aUxDSnBiWEJ2Y25RZ1lYaHBiM01nWm5KdmJTQW5ZWGhwYjNNblhHNXBiWEJ2Y25RZ2NYTWdabkp2YlNBbmNYTW5YRzVjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJ4aGMzTWdVSFZpYkdsallYUnBiMjV6SUh0Y2JpQWdZMjl1YzNSeWRXTjBiM0lvWTI5dWRHRnBibVZ5S1NCN1hHNGdJQ0FnZEdocGN5NWpiMjUwWVdsdVpYSWdQU0JqYjI1MFlXbHVaWEpjYmlBZ0lDQjBhR2x6TG1obFlXUmxjbDlzYVhOMElEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNJb0p5NW9aV0ZrWlhKZlgyeHBjM1FuS1Z4dUlDQWdJSFJvYVhNdWFHVmhaR1Z5WDJsMFpXMXpJRDBnWTI5dWRHRnBibVZ5TG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnk1b1pXRmtaWEpmWDJsMFpXMGdZblYwZEc5dUp5bGNiaUFnSUNCMGFHbHpMbWhsWVdSbGNsOXdjbVYySUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0lvSnk1b1pXRmtaWEpmWDI1aGRpMHRjSEpsZGljcFhHNGdJQ0FnZEdocGN5NW9aV0ZrWlhKZmJtVjRkQ0E5SUdOdmJuUmhhVzVsY2k1eGRXVnllVk5sYkdWamRHOXlLQ2N1YUdWaFpHVnlYMTl1WVhZdExXNWxlSFFuS1Z4dUlDQWdJSFJvYVhNdWFHVmhaR1Z5WDJsdVpHVjRJRDBnTUZ4dVhHNGdJQ0FnZEdocGN5NWpZWEprWDJ4dllXUnBibWNnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1Y0hWaWJHbGpZWFJwYjI1elgxOXNiMkZrYVc1bkp5bGNibHh1SUNBZ0lHbG1JQ2gzYVc1a2IzY3VhVzV1WlhKWGFXUjBhQ0ErUFNBNU1EQXBJSHRjYmlBZ0lDQWdJSFJvYVhNdWFHVmhaR1Z5WDI5bVpuTmxkQ0E5SURWY2JpQWdJQ0FnSUhSb2FYTXVhR1ZoWkdWeVgyOW1abk5sZEZkcFpIUm9JRDBnZEdocGN5NW9aV0ZrWlhKZmJHbHpkQzV3WVhKbGJuUk9iMlJsTG05bVpuTmxkRmRwWkhSb0lDOGdOVnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCMGFHbHpMbWhsWVdSbGNsOXZabVp6WlhRZ1BTQXhYRzRnSUNBZ0lDQjBhR2x6TG1obFlXUmxjbDl2Wm1aelpYUlhhV1IwYUNBOUlIUm9hWE11YUdWaFpHVnlYMnhwYzNRdWNHRnlaVzUwVG05a1pTNXZabVp6WlhSWGFXUjBhRnh1SUNBZ0lIMWNibHh1SUNBZ0lIUm9hWE11Wm1sc2RHVnlJRDBnZTMxY2JseHVJQ0FnSUhSb2FYTXVjRzl6ZEhOZlkyOXVkR0ZwYm1WeUlEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXdkV0pzYVdOaGRHbHZibk5mWDNCdmMzUnpKeWxjYmx4dUlDQWdJSFJvYVhNdWFHVmhaR1Z5WDJsMFpXMXpMbVp2Y2tWaFkyZ29LR2wwWlcwc0lHbHVaR1Y0S1NBOVBpQjdYRzRnSUNBZ0lDQnBaaUFvYVhSbGJTNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9KMmwwWlcwdExXRmpkR2wyWlNjcEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWFHVmhaR1Z5WDJsdVpHVjRJRDBnYVc1a1pYaGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhWFJsYlM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUdVZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjFjR1JoZEdWa0lEMGdkR2hwY3k1b1pXRmtaWEpmYVc1a1pYZ2dJVDA5SUdVdVkzVnljbVZ1ZEZSaGNtZGxkQzVrWVhSaGMyVjBMbWx1WkdWNElEOGdkSEoxWlNBNklHWmhiSE5sWEc0Z0lDQWdJQ0FnSUhSb2FYTXVkWEJrWVhSbFNHVmhaR1Z5S0hCaGNuTmxTVzUwS0dVdVkzVnljbVZ1ZEZSaGNtZGxkQzVrWVhSaGMyVjBMbWx1WkdWNExDQXhNQ2twWEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSFZ3WkdGMFpXUXBJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVacGJIUmxjaWdwWEc1Y2JpQWdJQ0FnSUNBZ0lDQjBhR2x6TG1abGRHTm9VSFZpYkdsallYUnBiMjV6S0NsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZTbGNiaUFnSUNCOUtWeHVYRzRnSUNBZ2RHaHBjeTVvWldGa1pYSmZibVY0ZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNncElEMCtJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbWhsWVdSbGNsOXBibVJsZUNBOElIUm9hWE11YUdWaFpHVnlYMmwwWlcxekxteGxibWQwYUNBdElERXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NTFjR1JoZEdWSVpXRmtaWElvZEdocGN5NW9aV0ZrWlhKZmFXNWtaWGdnS3lBeEtWeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQjBhR2x6TG5ObGRFWnBiSFJsY2lncFhHNWNiaUFnSUNBZ0lIUm9hWE11Wm1WMFkyaFFkV0pzYVdOaGRHbHZibk1vS1Z4dUlDQWdJSDBwWEc1Y2JpQWdJQ0IwYUdsekxtaGxZV1JsY2w5d2NtVjJMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMk5zYVdOckp5d2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFHVmhaR1Z5WDJsdVpHVjRJRDQ5SURFcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1ZJWldGa1pYSW9kR2hwY3k1b1pXRmtaWEpmYVc1a1pYZ2dMU0F4S1Z4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMGFHbHpMbk5sZEVacGJIUmxjaWdwWEc1Y2JpQWdJQ0FnSUhSb2FYTXVabVYwWTJoUWRXSnNhV05oZEdsdmJuTW9LVnh1SUNBZ0lIMHBYRzRnSUgxY2JseHVJQ0IxY0dSaGRHVklaV0ZrWlhJb2JtVjNTVzVrWlhncElIdGNiaUFnSUNCMGFHbHpMbWhsWVdSbGNsOXBkR1Z0YzF0MGFHbHpMbWhsWVdSbGNsOXBibVJsZUYwdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbmFYUmxiUzB0WVdOMGFYWmxKeWxjYmx4dUlDQWdJSFJvYVhNdWFHVmhaR1Z5WDJsdVpHVjRJRDBnYm1WM1NXNWtaWGhjYmlBZ0lDQjBhR2x6TG1obFlXUmxjbDlwZEdWdGMxdDBhR2x6TG1obFlXUmxjbDlwYm1SbGVGMHVZMnhoYzNOTWFYTjBMbUZrWkNnbmFYUmxiUzB0WVdOMGFYWmxKeWxjYmx4dUlDQWdJR2xtSUNoMGFHbHpMbWhsWVdSbGNsOXBibVJsZUNBOFBTQXdLU0I3WEc0Z0lDQWdJQ0IwYUdsekxtaGxZV1JsY2w5d2NtVjJMbU5zWVhOelRHbHpkQzVoWkdRb0oyaGxZV1JsY2w5ZmJtRjJMUzFrYVhOaFlteGxKeWxjYmlBZ0lDQjlJR1ZzYzJVZ2FXWWdLSFJvYVhNdWFHVmhaR1Z5WDJsdVpHVjRJRDQ5SUhSb2FYTXVhR1ZoWkdWeVgybDBaVzF6TG14bGJtZDBhQ0F0SURFcElIdGNiaUFnSUNBZ0lIUm9hWE11YUdWaFpHVnlYMjVsZUhRdVkyeGhjM05NYVhOMExtRmtaQ2duYUdWaFpHVnlYMTl1WVhZdExXUnBjMkZpYkdVbktWeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0IwYUdsekxtaGxZV1JsY2w5dVpYaDBMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMmhsWVdSbGNsOWZibUYyTFMxa2FYTmhZbXhsSnlsY2JpQWdJQ0FnSUhSb2FYTXVhR1ZoWkdWeVgzQnlaWFl1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duYUdWaFpHVnlYMTl1WVhZdExXUnBjMkZpYkdVbktWeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaDBhR2x6TG1obFlXUmxjbDlwYm1SbGVDQXRJSFJvYVhNdWFHVmhaR1Z5WDI5bVpuTmxkQ0ErUFNBd0tTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCdlptWnpaWFFnUFNBb0tIUm9hWE11YUdWaFpHVnlYMmx1WkdWNElDMGdkR2hwY3k1b1pXRmtaWEpmYjJabWMyVjBLU0FySURFcElDb2dkR2hwY3k1b1pXRmtaWEpmYjJabWMyVjBWMmxrZEdoY2JpQWdJQ0FnSUhSb2FYTXVhR1ZoWkdWeVgyeHBjM1F1YzNSNWJHVXVkSEpoYm5ObWIzSnRJRDBnWUhSeVlXNXpiR0YwWlZnb0xTUjdiMlptYzJWMGZYQjRLV0JjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVvWldGa1pYSmZiR2x6ZEM1emRIbHNaUzUwY21GdWMyWnZjbTBnUFNBbmRISmhibk5zWVhSbFdDZ3djSGdwSjF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhObGRFWnBiSFJsY2lncElIdGNiaUFnSUNCMGFHbHpMbVpwYkhSbGNpQTlJSHRjYmlBZ0lDQWdJSE5zZFdjNklIUm9hWE11YUdWaFpHVnlYMmwwWlcxelczUm9hWE11YUdWaFpHVnlYMmx1WkdWNFhTNWtZWFJoYzJWMExuTnNkV2NzWEc0Z0lDQWdJQ0IwWVhodmJtOXRlVG9nZEdocGN5NW9aV0ZrWlhKZmFYUmxiWE5iZEdocGN5NW9aV0ZrWlhKZmFXNWtaWGhkTG1SaGRHRnpaWFF1ZEdGNGIyNXZiWGxjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JtWlhSamFGQjFZbXhwWTJGMGFXOXVjeWdwSUh0Y2JpQWdJQ0JqYjI1emRDQmtZWFJoSUQwZ2UxeHVJQ0FnSUNBZ1lXTjBhVzl1T2lBblptVjBZMmhmY0hWaWJHbGpZWFJwYjI1ekp5eGNiaUFnSUNBZ0lHWnBiSFJsY2pvZ2RHaHBjeTVtYVd4MFpYSmNiaUFnSUNCOVhHNWNiaUFnSUNCMGFHbHpMbkJ2YzNSelgyTnZiblJoYVc1bGNpNXBibTVsY2toVVRVd2dQU0FuSjF4dUlDQWdJSFJvYVhNdVkyRnlaRjlzYjJGa2FXNW5MbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMk5oY21RdExXaHBaR1VuS1Z4dVhHNGdJQ0FnWVhocGIzTXVjRzl6ZENoaGFtRjRkWEpzTENCeGN5NXpkSEpwYm1kcFpua29aR0YwWVNrcFhHNGdJQ0FnSUNBdWRHaGxiaWh5WlhOd2IyNXpaU0E5UGlCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WTJGeVpGOXNiMkZrYVc1bkxtTnNZWE56VEdsemRDNWhaR1FvSjJOaGNtUXRMV2hwWkdVbktWeHVJQ0FnSUNBZ0lDQjBhR2x6TG5CdmMzUnpYMk52Ym5SaGFXNWxjaTVwYm5ObGNuUkJaR3BoWTJWdWRFaFVUVXdvSjJKbFptOXlaV1Z1WkNjc0lISmxjM0J2Ym5ObExtUmhkR0V1WkdGMFlTNXdiM04wY3lsY2JpQWdJQ0FnSUgwcFhHNGdJSDFjYm4xY2JpSXNJbWx0Y0c5eWRDQmhlR2x2Y3lCbWNtOXRJQ2RoZUdsdmN5ZGNibWx0Y0c5eWRDQnhjeUJtY205dElDZHhjeWRjYmx4dVkyeGhjM01nVW1WemRXeDBjeUI3WEc0Z0lHTnZibk4wY25WamRHOXlLR052Ym5SaGFXNWxjaWtnZTF4dVhHNGdJQ0FnZEdocGN5NWpiMjUwWVdsdVpYSWdQU0JqYjI1MFlXbHVaWEpjYmlBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mWW5WMGRHOXVjeUE5SUdOdmJuUmhhVzVsY2k1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NjdWFHVmhaR1Z5WDE5emQybDBZMmduS1Z4dUlDQWdJSFJvYVhNdWNtVnpkV3gwYzE5amIzVnVkQ0E5SUdOdmJuUmhhVzVsY2k1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NjdWFHVmhaR1Z5WDE5aWRYUjBiMjRnYzNCaGJpY3BYRzVjYmlBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mZEdGaWN5QTlJR052Ym5SaGFXNWxjaTV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLQ2N1YkdsemRGOWZZMjl1ZEdGcGJtVnlKeWxjYmlBZ0lDQjBhR2x6TG5KbGMzVnNkSE5mWTI5dWRHRnBibVZ5SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0p5NXNhWE4wSnlsY2JseHVJQ0FnSUhSb2FYTXVjbVZ6ZFd4MGMxOXpaV3hsWTNSbFpDQTlJR052Ym5SaGFXNWxjaTV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VjbVZ6ZFd4MGMxOWZjMlZzWldOMFpXUXRabWxzZEdWeWN5Y3BYRzRnSUNBZ2RHaHBjeTV5WlhOMWJIUnpYM05sYkdWamRHVmtYMk52Ym5SaGFXNWxjaUE5SUdOdmJuUmhhVzVsY2k1eGRXVnllVk5sYkdWamRHOXlLQ2N1YzJWc1pXTjBaV1JmWDJOdmJuUmhhVzVsY2ljcFhHNGdJQ0FnZEdocGN5NXlaWE4xYkhSelgzTmxiR1ZqZEdWa1gyUmxiR1YwWlNBOUlHTnZiblJoYVc1bGNpNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWMyVnNaV04wWldSZlgyUmxiR1YwWlNjcFhHNGdJQ0FnZEdocGN5NXlaWE4xYkhSelgzTmxiR1ZqZEdWa1gyMXZaR1ZzSUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0lvSnk1cGRHVnRMUzF0YjJSbGJDY3BYRzRnSUNBZ2RHaHBjeTV5WlhOMWJIUnpYM05sYkdWamRHVmtYMmwwWlcxeklEMGdXMTFjYmx4dUlDQWdJSFJvYVhNdVptbHNkR1Z5YzE5MmFYTnBZbWxzYVhSNUlEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNJb0p5NW9aV0ZrWlhKZlgySjFkSFJ2YmkwdFptbHNkR1Z5SnlsY2JpQWdJQ0IwYUdsekxtWnBiSFJsY25OZlkyOXVkR0ZwYm1WeUlEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXlaWE4xYkhSelgxOW1hV3gwWlhKekp5bGNiaUFnSUNCMGFHbHpMbVpwYkhSbGNuTWdQU0JqYjI1MFlXbHVaWEl1Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2duTG1acGJIUmxjaWNwWEc1Y2JpQWdJQ0IwYUdsekxtTnZiblJoYVc1bGNsUnZSbWw0SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0p5NTBZWGh2Ym05dGVTMW1hWGduS1Z4dVhHNGdJQ0FnZEdocGN5NWpZWEprYzE5c2IyRmthVzVuSUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0p5NWpZWEprTFMxc2IyRmthVzVuSnlsY2JpQWdJQ0IwYUdsekxtTmhjbVJ6WDI1dlgzSmxjM1ZzZEhNZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25MbU5oY21RdExXNXZMWEpsYzNWc2RDY3BYRzVjYmlBZ0lDQjBhR2x6TG5ObGJHVmpkR1ZrWDNSaFlpQTlJREJjYmlBZ0lDQjBhR2x6TG5ObGJHVmpkR1ZrWDJacGJIUmxjbk1nUFNCYlhWeHVJQ0FnSUhSb2FYTXVZWFpoYVd4aFlteGxYMlpwYkhSbGNuTWdQU0JiWFZ4dVhHNGdJQ0FnZEdocGN5NXlaWE4xYkhSelgySjFkSFJ2Ym5NdVptOXlSV0ZqYUNoaWRYUjBiMjRnUFQ0Z2UxeHVJQ0FnSUNBZ1luVjBkRzl1TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnWlNBOVBpQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVjBWR0ZpY3lobExtTjFjbkpsYm5SVVlYSm5aWFF1WkdGMFlYTmxkQzVwYm1SbGVDbGNiaUFnSUNBZ0lIMHBYRzRnSUNBZ2ZTbGNibHh1SUNBZ0lIUm9hWE11Wm1sc2RHVnljMTkyYVhOcFltbHNhWFI1TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdkR2hwY3k1bWFXeDBaWEp6WDJOdmJuUmhhVzVsY2k1amJHRnpjMHhwYzNRdWRHOW5aMnhsS0NkeVpYTjFiSFJ6WDE5bWFXeDBaWEp6TFMxaFkzUnBkbVVuS1Z4dUlDQWdJSDBwWEc1Y2JpQWdJQ0IwYUdsekxtTnZiblJoYVc1bGNsUnZSbWw0TG1admNrVmhZMmdvWTI5dWRDQTlQaUI3WEc0Z0lDQWdJQ0JqYjI1emRDQjdJSGRwWkhSb0lIMGdQU0JqYjI1MExuRjFaWEo1VTJWc1pXTjBiM0lvSjJ4cEp5a3VaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0NsY2JpQWdJQ0FnSUdOdmJuUXVjM1I1YkdVdWQybGtkR2dnUFNCZ0pIdDNhV1IwYUNBcUlESjljSGhnWEc0Z0lDQWdmU2xjYmx4dUlDQWdJSFJvYVhNdVptbHNkR1Z5Y3k1bWIzSkZZV05vS0dacGJIUmxjaUE5UGlCN1hHNGdJQ0FnSUNCbWFXeDBaWEl1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0JsSUQwK0lIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1MGIyZG5iR1ZHYVd4MFpYSW9aUzVqZFhKeVpXNTBWR0Z5WjJWMEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG5ObFlYSmphQ2dwWEc0Z0lDQWdJQ0I5S1Z4dUlDQWdJSDBwWEc1Y2JpQWdJQ0IwYUdsekxuSmxjM1ZzZEhOZmMyVnNaV04wWldSZlpHVnNaWFJsTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdkR2hwY3k1amJHVmhja1pwYkhSbGNpZ3BYRzRnSUNBZ2ZTbGNiaUFnZlZ4dVhHNGdJSE5sZEZSaFluTW9hVzVrWlhncElIdGNiaUFnSUNCcFppQW9kR2hwY3k1elpXeGxZM1JsWkY5MFlXSWdJVDA5SUdsdVpHVjRLU0I3WEc0Z0lDQWdJQ0IwYUdsekxuSmxjM1ZzZEhOZmRHRmljMXQwYUdsekxuTmxiR1ZqZEdWa1gzUmhZbDB1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duYkdsemRGOWZZMjl1ZEdGcGJtVnlMUzFoWTNScGRtVW5LVnh1SUNBZ0lDQWdkR2hwY3k1eVpYTjFiSFJ6WDJKMWRIUnZibk5iZEdocGN5NXpaV3hsWTNSbFpGOTBZV0pkTG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjJobFlXUmxjbDlmWW5WMGRHOXVMUzFoWTNScGRtVW5LVnh1WEc0Z0lDQWdJQ0IwYUdsekxuSmxjM1ZzZEhOZmRHRmljMXRwYm1SbGVGMHVZMnhoYzNOTWFYTjBMbUZrWkNnbmJHbHpkRjlmWTI5dWRHRnBibVZ5TFMxaFkzUnBkbVVuS1Z4dUlDQWdJQ0FnZEdocGN5NXlaWE4xYkhSelgySjFkSFJ2Ym5OYmFXNWtaWGhkTG1Oc1lYTnpUR2x6ZEM1aFpHUW9KMmhsWVdSbGNsOWZZblYwZEc5dUxTMWhZM1JwZG1VbktWeHVYRzRnSUNBZ0lDQjBhR2x6TG5ObGJHVmpkR1ZrWDNSaFlpQTlJR2x1WkdWNFhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2RHOW5aMnhsUm1sc2RHVnlLR1ZzWlcxbGJuUXBJSHRjYmlBZ0lDQmpiMjV6ZENCbWFXeDBaWElnUFNCN1hHNGdJQ0FnSUNCemJIVm5PaUJsYkdWdFpXNTBMbVJoZEdGelpYUXVjMngxWnl4Y2JpQWdJQ0FnSUhSaGVHOXViMjE1T2lCbGJHVnRaVzUwTG1SaGRHRnpaWFF1ZEdGNGIyNXZiWGtzWEc0Z0lDQWdJQ0J1WVcxbE9pQmxiR1Z0Wlc1MExtUmhkR0Z6WlhRdWJtRnRaVnh1SUNBZ0lIMWNiaUFnSUNCcFppQW9JV1ZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbU52Ym5SaGFXNXpLQ2RtYVd4MFpYSXRMV0ZqZEdsMlpTY3BLU0I3WEc0Z0lDQWdJQ0IwYUdsekxuTmxiR1ZqZEdWa1gyWnBiSFJsY25NdWNIVnphQ2htYVd4MFpYSXBYRzRnSUNBZ0lDQjBhR2x6TG1Ga1pFWnBiSFJsY2lobWFXeDBaWElwWEc0Z0lDQWdJQ0JsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzVoWkdRb0oyWnBiSFJsY2kwdFlXTjBhWFpsSnlsY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdkR2hwY3k1eVpXMXZkbVZHYVd4MFpYSW9abWxzZEdWeUtWeHVJQ0FnSUNBZ1pXeGxiV1Z1ZEM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NkbWFXeDBaWEl0TFdGamRHbDJaU2NwWEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnWVdSa1JtbHNkR1Z5S0dacGJIUmxjaWtnZTF4dUlDQWdJR052Ym5OMElHVnNaVzFsYm5RZ1BTQjBhR2x6TG5KbGMzVnNkSE5mYzJWc1pXTjBaV1JmYlc5a1pXd3VZMnh2Ym1WT2IyUmxLSFJ5ZFdVcFhHNGdJQ0FnWld4bGJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VhWFJsYlY5ZmJHRmlaV3duS1M1MFpYaDBRMjl1ZEdWdWRDQTlJR1pwYkhSbGNpNXVZVzFsWEc0Z0lDQWdaV3hsYldWdWRDNWtZWFJoYzJWMExuTnNkV2NnUFNCbWFXeDBaWEl1YzJ4MVoxeHVJQ0FnSUdWc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duYVhSbGJTMHRiVzlrWld3bktWeHVYRzRnSUNBZ2RHaHBjeTV5WlhOMWJIUnpYM05sYkdWamRHVmtYMk52Ym5SaGFXNWxjaTVoY0hCbGJtUkRhR2xzWkNobGJHVnRaVzUwS1Z4dUlDQWdJSFJvYVhNdWNtVnpkV3gwYzE5elpXeGxZM1JsWkY5cGRHVnRjeTV3ZFhOb0tHVnNaVzFsYm5RcFhHNWNiaUFnSUNCbGJHVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTVwZEdWdFgxOWtaV3hsZEdVbktTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZGpiR2xqYXljc0lHVWdQVDRnZTF4dUlDQWdJQ0FnWTI5dWMzUWdabWxzSUQwZ2UxeHVJQ0FnSUNBZ0lDQnpiSFZuT2lCbExtTjFjbkpsYm5SVVlYSm5aWFF1Y0dGeVpXNTBUbTlrWlM1a1lYUmhjMlYwTG5Oc2RXY3NYRzRnSUNBZ0lDQWdJSFJoZUc5dWIyMTVPaUJsTG1OMWNuSmxiblJVWVhKblpYUXVjR0Z5Wlc1MFRtOWtaUzVrWVhSaGMyVjBMblJoZUc5dWIyMTVMRnh1SUNBZ0lDQWdJQ0J1WVcxbE9pQmxMbU4xY25KbGJuUlVZWEpuWlhRdWNHRnlaVzUwVG05a1pTNWtZWFJoYzJWMExtNWhiV1ZjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnZEdocGN5NXlaVzF2ZG1WR2FXeDBaWElvWm1sc0tWeHVJQ0FnSUNBZ2RHaHBjeTV6WldGeVkyZ29LVnh1SUNBZ0lIMHBYRzRnSUNBZ2RHaHBjeTV6WlhSVFpXeGxZM1JsWkZacGMybGlhV3hwZEhrb0tWeHVJQ0I5WEc1Y2JpQWdjbVZ0YjNabFJtbHNkR1Z5S0dacGJIUmxjaWtnZTF4dUlDQWdJR052Ym5OMElHVnNaVzFsYm5RZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0dBdWMyVnNaV04wWldSZlgybDBaVzFiWkdGMFlTMXpiSFZuUFNSN1ptbHNkR1Z5TG5Oc2RXZDlYV0FwWEc0Z0lDQWdaV3hsYldWdWRDNXlaVzF2ZG1Vb0tWeHVYRzRnSUNBZ1kyOXVjM1FnWW5WMGRHOXVJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpaGdMblJoZUc5dWIyMTVYMTltYVd4MFpYSnpJQzVtYVd4MFpYSmJaR0YwWVMxemJIVm5QU1I3Wm1sc2RHVnlMbk5zZFdkOVhXQXBYRzRnSUNBZ1luVjBkRzl1TG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjJacGJIUmxjaTB0WVdOMGFYWmxKeWxjYmx4dUlDQWdJR052Ym5OMElHbHVaR1Y0SUQwZ2RHaHBjeTV6Wld4bFkzUmxaRjltYVd4MFpYSnpMbVpwYm1SSmJtUmxlQ2h6Wld4bFkzUmxaQ0E5UGlCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnYzJWc1pXTjBaV1F1YzJ4MVp5QTlQVDBnWm1sc2RHVnlMbk5zZFdjZ0ppWWdjMlZzWldOMFpXUXVkR0Y0YjI1dmJYa2dQVDA5SUdacGJIUmxjaTUwWVhodmJtOXRlVnh1SUNBZ0lIMHBYRzRnSUNBZ2RHaHBjeTV6Wld4bFkzUmxaRjltYVd4MFpYSnpMbk53YkdsalpTaHBibVJsZUN3Z01TbGNibHh1SUNBZ0lIUm9hWE11YzJWMFUyVnNaV04wWldSV2FYTnBZbWxzYVhSNUtDbGNiaUFnSUNCMGFHbHpMblZ3WkdGMFpVWnBiSFJsY25OV2FYTnBZbWxzYVhSNUtDbGNiaUFnZlZ4dVhHNGdJR05zWldGeVJtbHNkR1Z5S0NrZ2UxeHVJQ0FnSUhSb2FYTXVabWxzZEdWeWN5NW1iM0pGWVdOb0tHWnBiSFJsY2lBOVBpQjdYRzRnSUNBZ0lDQm1hV3gwWlhJdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnblptbHNkR1Z5TFMxaFkzUnBkbVVuS1Z4dUlDQWdJSDBwWEc0Z0lDQWdkR2hwY3k1elpXeGxZM1JsWkY5bWFXeDBaWEp6SUQwZ1cxMWNibHh1SUNBZ0lIUm9hWE11Y21WemRXeDBjMTl6Wld4bFkzUmxaRjlwZEdWdGN5NW1iM0pGWVdOb0tHbDBaVzBnUFQ0Z2UxeHVJQ0FnSUNBZ2FYUmxiUzV5WlcxdmRtVW9LVnh1SUNBZ0lIMHBYRzVjYmlBZ0lDQjBhR2x6TG5ObGRGTmxiR1ZqZEdWa1ZtbHphV0pwYkdsMGVTZ3BYRzVjYmlBZ0lDQjBhR2x6TG5ObFlYSmphQ2dwWEc0Z0lIMWNibHh1SUNCelpYUlRaV3hsWTNSbFpGWnBjMmxpYVd4cGRIa29LU0I3WEc0Z0lDQWdhV1lnS0hSb2FYTXVjMlZzWldOMFpXUmZabWxzZEdWeWN5NXNaVzVuZEdnZ1BpQXdLU0I3WEc0Z0lDQWdJQ0IwYUdsekxuSmxjM1ZzZEhOZmMyVnNaV04wWldRdVkyeGhjM05NYVhOMExtRmtaQ2duY21WemRXeDBjMTlmYzJWc1pXTjBaV1F0Wm1sc2RHVnljeTB0WVdOMGFYWmxKeWxjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2RHaHBjeTV5WlhOMWJIUnpYM05sYkdWamRHVmtMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KM0psYzNWc2RITmZYM05sYkdWamRHVmtMV1pwYkhSbGNuTXRMV0ZqZEdsMlpTY3BYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdkWEJrWVhSbFJtbHNkR1Z5YzFacGMybGlhV3hwZEhrb0tTQjdYRzRnSUNBZ2RHaHBjeTVtYVd4MFpYSnpMbVp2Y2tWaFkyZ29abWxzZEdWeUlEMCtJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbUYyWVdsc1lXSnNaVjltYVd4MFpYSnpMbWx1WkdWNFQyWW9abWxzZEdWeUxtUmhkR0Z6WlhRdWMyeDFaeWtnUFQwOUlDMHhLU0I3WEc0Z0lDQWdJQ0FnSUdacGJIUmxjaTVqYkdGemMweHBjM1F1WVdSa0tDZG1hV3gwWlhJdExXbHVZV04wYVhabEp5bGNiaUFnSUNBZ0lDQWdabWxzZEdWeUxtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb0oyWnBiSFJsY2kwdFlXTjBhWFpsSnlsY2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUdacGJIUmxjaTVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2RtYVd4MFpYSXRMV2x1WVdOMGFYWmxKeWxjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlLVnh1SUNCOVhHNWNiaUFnYzJWaGNtTm9LQ2tnZTF4dUlDQWdJR052Ym5OMElHUmhkR0VnUFNCN1hHNGdJQ0FnSUNCaFkzUnBiMjQ2SUNkelpXRnlZMmhmWm1sc2RHVnljeWNzWEc0Z0lDQWdJQ0J4ZFdWeWVUb2djMlZoY21Ob2NYVmxjbmtzWEc0Z0lDQWdJQ0JtYVd4MFpYSnpPaUIwYUdsekxuTmxiR1ZqZEdWa1gyWnBiSFJsY25OY2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYUdsekxuSmxjM1ZzZEhOZlkyOXVkR0ZwYm1WeUxtWnZja1ZoWTJnb1kyOXVkR0ZwYm1WeUlEMCtJSHRjYmlBZ0lDQWdJR052Ym5SaGFXNWxjaTVwYm01bGNraFVUVXdnUFNBbkoxeHVJQ0FnSUgwcFhHNWNiaUFnSUNCMGFHbHpMbU5oY21SelgyeHZZV1JwYm1jdVptOXlSV0ZqYUNoallYSmtJRDArSUh0Y2JpQWdJQ0FnSUdOaGNtUXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ25ZMkZ5WkMwdGFHbGtaU2NwWEc0Z0lDQWdmU2xjYmlBZ0lDQjBhR2x6TG1OaGNtUnpYMjV2WDNKbGMzVnNkSE11Wm05eVJXRmphQ2hqWVhKa0lEMCtJSHRjYmlBZ0lDQWdJR05oY21RdVkyeGhjM05NYVhOMExtRmtaQ2duWTJGeVpDMHRhR2xrWlNjcFhHNGdJQ0FnZlNsY2JseHVJQ0FnSUdGNGFXOXpMbkJ2YzNRb1lXcGhlSFZ5YkN3Z2NYTXVjM1J5YVc1bmFXWjVLR1JoZEdFcEtWeHVJQ0FnSUNBZ0xuUm9aVzRvY21WemNHOXVjMlVnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1OaGNtUnpYMnh2WVdScGJtY3VabTl5UldGamFDaGpZWEprSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0JqWVhKa0xtTnNZWE56VEdsemRDNWhaR1FvSjJOaGNtUXRMV2hwWkdVbktWeHVJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0IwYUdsekxuSmxjM1ZzZEhOZlkyOXVkR0ZwYm1WeUxtWnZja1ZoWTJnb0tHTnZiblJoYVc1bGNpd2dhVzVrWlhncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzNWc2RITmZZMjkxYm5SYmFXNWtaWGhkTG1sdWJtVnlTRlJOVENBOUlISmxjM0J2Ym5ObExtUmhkR0V1WkdGMFlTNXlaWE4xYkhSelcybHVaR1Y0WFM1c1pXNW5kR2hjYmlBZ0lDQWdJQ0FnSUNCeVpYTndiMjV6WlM1a1lYUmhMbVJoZEdFdWNtVnpkV3gwYzF0cGJtUmxlRjB1Wm05eVJXRmphQ2h5WlhOMWJIUWdQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdGcGJtVnlMbWx1YzJWeWRFRmthbUZqWlc1MFNGUk5UQ2duWW1WbWIzSmxaVzVrSnl3Z2NtVnpkV3gwS1Z4dUlDQWdJQ0FnSUNBZ0lIMHBYRzVjYmlBZ0lDQWdJQ0FnSUNCcFppQW9jbVZ6Y0c5dWMyVXVaR0YwWVM1a1lYUmhMbkpsYzNWc2RITmJhVzVrWlhoZExteGxibWQwYUNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1allYSmtjMTl1YjE5eVpYTjFiSFJ6VzJsdVpHVjRYUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2RqWVhKa0xTMW9hV1JsSnlsY2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBwWEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVoZG1GcGJHRmliR1ZmWm1sc2RHVnljeUE5SUhKbGMzQnZibk5sTG1SaGRHRXVaR0YwWVM1aGRtRnBiR0ZpYkdWZlptbHNkR1Z5YzF4dUlDQWdJQ0FnSUNCMGFHbHpMblZ3WkdGMFpVWnBiSFJsY25OV2FYTnBZbWxzYVhSNUtDbGNiaUFnSUNBZ0lIMHBYRzRnSUgxY2JuMWNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JTWlhOMWJIUnpYRzRpTENKamJHRnpjeUJTZFdKeWFXTnpJSHRjYmlBZ1kyOXVjM1J5ZFdOMGIzSW9ZMjl1ZEdGcGJtVnlMQ0JrWlhOcmRHOXdJRDBnZEhKMVpTa2dlMXh1SUNBZ0lIUm9hWE11WTI5dWRHRnBibVZ5SUQwZ1kyOXVkR0ZwYm1WeVhHNGdJQ0FnZEdocGN5NWlkWFIwYjI1eklEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29KeTVwZEdWdFgxOWlkWFIwYjI0bktWeHVJQ0FnSUhSb2FYTXVkM0poY0hCbGNuTWdQU0JqYjI1MFlXbHVaWEl1Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2duTG1sMFpXMWZYM2R5WVhCd1pYSW5LVnh1SUNBZ0lIUm9hWE11YkdGemRGOXBibVJsZUNBOUlHNTFiR3hjYmlBZ0lDQjBhR2x6TG1SbGMydDBiM0FnUFNCa1pYTnJkRzl3WEc1Y2JpQWdJQ0IwYUdsekxtSjFkSFJ2Ym5NdVptOXlSV0ZqYUNoaWRYUjBiMjRnUFQ0Z2UxeHVJQ0FnSUNBZ1luVjBkRzl1TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnWlNBOVBpQjdYRzRnSUNBZ0lDQWdJR1V1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBibVJsZUNBOUlFRnljbUY1TG5CeWIzUnZkSGx3WlM1cGJtUmxlRTltTG1OaGJHd29kR2hwY3k1aWRYUjBiMjV6TENCaWRYUjBiMjRwWEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSGRwYm1SdmR5NXBibTVsY2xkcFpIUm9JRHdnTnpBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnWW5WMGRHOXVMbU5zWVhOelRHbHpkQzVoWkdRb0oyMXZZbWxzWlMxaFkzUnBkbVVuS1Z4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11ZDNKaGNIQmxjbk5iYVc1a1pYaGRMbk4wZVd4bExtaGxhV2RvZENBOUlHQWtlM1JvYVhNdWQzSmhjSEJsY25OYmFXNWtaWGhkTG1Ob2FXeGtSV3hsYldWdWRFTnZkVzUwSUNvZ05qQjljSGhnWEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTVqYjI1MFlXbHVaWEl1YzJOeWIyeHNTVzUwYjFacFpYY29leUJpWldoaGRtbHZjam9nSjNOdGIyOTBhQ2NzSUdKc2IyTnJPaUFuYzNSaGNuUW5MQ0JwYm14cGJtVTZJQ2R1WldGeVpYTjBKeUI5S1Z4dVhHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1M2NtRndjR1Z5Y3k1bWIzSkZZV05vS0NoM2NtRndjR1Z5TENCcEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBaFBUMGdhVzVrWlhnZ2ZId2dhVzVrWlhnZ1BUMDlJSFJvYVhNdWJHRnpkRjlwYm1SbGVDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjNjbUZ3Y0dWeUxuTjBlV3hsTG5KbGJXOTJaVkJ5YjNCbGNuUjVLQ2RvWldsbmFIUW5LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1KMWRIUnZibk5iYVYwdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbmJXOWlhV3hsTFdGamRHbDJaU2NwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnZlNsY2JseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR1JsYzJ0MGIzQXBJSHRjYmlBZ0lDQWdJQ0FnSUNCaWRYUjBiMjR1WTJ4aGMzTk1hWE4wTG1Ga1pDZ25aR1Z6YTNSdmNDMWhZM1JwZG1VbktWeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdWQzSmhjSEJsY25OYmFXNWtaWGhkTG1Oc1lYTnpUR2x6ZEM1aFpHUW9KMlJsYzJ0MGIzQXRZV04wYVhabEp5bGNibHh1SUNBZ0lDQWdJQ0FnSUhSb2FYTXVkM0poY0hCbGNuTXVabTl5UldGamFDZ29kM0poY0hCbGNpd2dhU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTNjbUZ3Y0dWeWMxdHBYUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2R0YjJKcGJHVXRZV04wYVhabEp5bGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZblYwZEc5dWMxdHBYUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2R0YjJKcGJHVXRZV04wYVhabEp5bGNiaUFnSUNBZ0lDQWdJQ0FnSUhkeVlYQndaWEl1YzNSNWJHVXVjbVZ0YjNabFVISnZjR1Z5ZEhrb0oyaGxhV2RvZENjcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQWhQVDBnYVc1a1pYZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1M2NtRndjR1Z5YzF0cFhTNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDZGtaWE5yZEc5d0xXRmpkR2wyWlNjcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZblYwZEc5dWMxdHBYUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2RrWlhOcmRHOXdMV0ZqZEdsMlpTY3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11YkdGemRGOXBibVJsZUNBOUlIUm9hWE11YkdGemRGOXBibVJsZUNBOVBUMGdhVzVrWlhnZ1B5QnVkV3hzSURvZ2FXNWtaWGhjYmlBZ0lDQWdJSDBwWEc0Z0lDQWdmU2xjYmlBZ2ZWeHVmVnh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUZKMVluSnBZM05jYmlJc0ltTnNZWE56SUZSaGVHOXViMjE1VkdGaWN5QjdYRzRnSUdOdmJuTjBjblZqZEc5eUtHTnZiblJoYVc1bGNpa2dlMXh1SUNBZ0lIUm9hWE11WTI5dWRHRnBibVZ5SUQwZ1kyOXVkR0ZwYm1WeVhHNGdJQ0FnZEdocGN5NTBZV0p6SUQwZ1kyOXVkR0ZwYm1WeUxuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0ozTmxZM1JwYjI0dWNtVnNZWFJsWkY5ZmMyVmpkR2x2YmljcFhHNGdJQ0FnZEdocGN5NWlkWFIwYjI1eklEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29KMkoxZEhSdmJpNW9aV0ZrWlhKZlgySjFkSFJ2YmljcFhHNGdJQ0FnZEdocGN5NTNjbUZ3Y0dWeUlEMGdZMjl1ZEdGcGJtVnlMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXlaV3hoZEdWa1gxOWpiMjUwWVdsdVpYSW5LVnh1SUNBZ0lIUm9hWE11Y21WMGRYSnVJRDBnWTI5dWRHRnBibVZ5TG5GMVpYSjVVMlZzWldOMGIzSW9KeTV5Wld4aGRHVmtYMTl5WlhSMWNtNG5LVnh1SUNBZ0lIUm9hWE11ZEdGaWMxZHlZWEJ3WlhJZ1BTQmpiMjUwWVdsdVpYSXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuSmxiR0YwWldSZlgzZHlZWEJ3WlhJbktWeHVJQ0FnSUhSb2FYTXViR0Z6ZEY5cGJtUmxlQ0E5SURCY2JseHVJQ0FnSUhSb2FYTXVZblYwZEc5dWN5NW1iM0pGWVdOb0tHSjFkSFJ2YmlBOVBpQjdYRzRnSUNBZ0lDQmlkWFIwYjI0dVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnblkyeHBZMnNuTENCbElEMCtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdleUJwYm1SbGVDQjlJRDBnWlM1amRYSnlaVzUwVkdGeVoyVjBMbVJoZEdGelpYUmNibHh1SUNBZ0lDQWdJQ0JwWmlBb2FXNWtaWGdnSVQwOUlIUm9hWE11YkdGemRGOXBibVJsZUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdVluVjBkRzl1YzF0MGFHbHpMbXhoYzNSZmFXNWtaWGhkTG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjJGamRHbDJaU2NwWEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTUwWVdKelczUm9hWE11YkdGemRGOXBibVJsZUYwdVkyeGhjM05NYVhOMExuSmxiVzkyWlNnbllXTjBhWFpsSnlsY2JseHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdVluVjBkRzl1YzF0cGJtUmxlRjB1WTJ4aGMzTk1hWE4wTG1Ga1pDZ25ZV04wYVhabEp5bGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxuUmhZbk5iYVc1a1pYaGRMbU5zWVhOelRHbHpkQzVoWkdRb0oyRmpkR2wyWlNjcFhHNWNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxteGhjM1JmYVc1a1pYZ2dQU0JwYm1SbGVGeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIZHBibVJ2ZHk1cGJtNWxjbGRwWkhSb0lEdzlJRGN3TUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdWQzSmhjSEJsY2k1amJHRnpjMHhwYzNRdVlXUmtLQ2RqYjI1MFlXbHVaWEl0TFhOc2FXUmxKeWxjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMblJoWW5OWGNtRndjR1Z5TG1Oc1lYTnpUR2x6ZEM1eVpXMXZkbVVvSjNkeVlYQndaWEl0TFdocFpHVW5LVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5S1Z4dUlDQWdJSDBwWEc1Y2JpQWdJQ0IwYUdsekxuSmxkSFZ5Ymk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUNncElEMCtJSHRjYmlBZ0lDQWdJR2xtSUNoM2FXNWtiM2N1YVc1dVpYSlhhV1IwYUNBOFBTQTNNREFwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTUzY21Gd2NHVnlMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9KMk52Ym5SaGFXNWxjaTB0YzJ4cFpHVW5LVnh1SUNBZ0lDQWdJQ0IwYUdsekxuUmhZbk5YY21Gd2NHVnlMbU5zWVhOelRHbHpkQzVoWkdRb0ozZHlZWEJ3WlhJdExXaHBaR1VuS1Z4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBwWEc0Z0lIMWNibjFjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCVVlYaHZibTl0ZVZSaFluTmNiaUlzSW1sdGNHOXlkQ0JJWldGa1pYSWdabkp2YlNBbkxpOURiR0Z6YzJWekwwaGxZV1JsY2lkY2JtbHRjRzl5ZENCU2RXSnlhV056SUdaeWIyMGdKeTR2UTJ4aGMzTmxjeTlTZFdKeWFXTnpKMXh1YVcxd2IzSjBJRlJoZUc5dWIyMTVWR0ZpY3lCbWNtOXRJQ2N1TDBOc1lYTnpaWE12VkdGNGIyNXZiWGxVWVdKekoxeHVhVzF3YjNKMElFeHZZV1JOYjNKbElHWnliMjBnSnk0dlEyeGhjM05sY3k5TWIyRmtUVzl5WlNkY2JtbHRjRzl5ZENCU1pYTjFiSFJ6SUdaeWIyMGdKeTR2UTJ4aGMzTmxjeTlTWlhOMWJIUnpKMXh1YVcxd2IzSjBJRkIxWW14cFkyRjBhVzl1Y3lCbWNtOXRJQ2N1TDBOc1lYTnpaWE12VUhWaWJHbGpZWFJwYjI1ekoxeHVhVzF3YjNKMElFMWxiV0psY2lCbWNtOXRJQ2N1TDBOc1lYTnpaWE12VFdWdFltVnlKMXh1WEc1Y2JtTnZibk4wSUdobFlXUmxjaUE5SUc1bGR5QklaV0ZrWlhJb1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG5OcGRHVXRhR1ZoWkdWeUp5a3BYRzVjYm1sbUlDaGtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWFHOXRaUzF6WldOMGFXOXVMbkoxWW5KcFkzTW5LU2tnZTF4dUlDQmpiMjV6ZENCb2IyMWxVblZpY21samN5QTlJRzVsZHlCU2RXSnlhV056S0dSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTVvYjIxbExYTmxZM1JwYjI0dWNuVmljbWxqY3ljcExDQjBjblZsS1Z4dWZWeHVYRzVwWmlBb1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG5SaGVHOXViMjE1WDE5eVpXeGhkR1ZrSnlrcElIdGNiaUFnWTI5dWMzUWdkR0ZpY3lBOUlHNWxkeUJVWVhodmJtOXRlVlJoWW5Nb1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG5SaGVHOXViMjE1WDE5eVpXeGhkR1ZrSnlrcFhHNTlYRzVjYm1sbUlDaGtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWNHRm5aUzF5ZFdKeWFXTnpKeWtwSUh0Y2JpQWdZMjl1YzNRZ2NHRm5aVkoxWW5KcFkzTWdQU0J1WlhjZ1VuVmljbWxqY3loa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1Y0dGblpTMXlkV0p5YVdOekp5a3NJR1poYkhObEtWeHVmVnh1WEc1cFppQW9aRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuQjFZbXhwWTJGMGFXOXVYMTlqYjI1MFlXbHVaWEluS1NrZ2UxeHVJQ0JqYjI1emRDQnNiMkZrVFc5eVpTQTlJRzVsZHlCTWIyRmtUVzl5WlNoa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1Y0hWaWJHbGpZWFJwYjI1ZlgyTnZiblJoYVc1bGNpY3BLVnh1ZlZ4dVhHNXBaaUFvWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbkpsYzNWc2RITW5LU2tnZTF4dUlDQmpiMjV6ZENCeVpYTjFiSFJ6SUQwZ2JtVjNJRkpsYzNWc2RITW9aRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2lnbkxuSmxjM1ZzZEhNbktTbGNibjFjYmx4dWFXWWdLR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXdkV0pzYVdOaGRHbHZibk1uS1NrZ2UxeHVJQ0JqYjI1emRDQndkV0pzYVdOaGRHbHZibk1nUFNCdVpYY2dVSFZpYkdsallYUnBiMjV6S0dSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTV3ZFdKc2FXTmhkR2x2Ym5NbktTbGNibjFjYmx4dWFXWWdLR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXRaVzFpWlhJbktTa2dlMXh1SUNCamIyNXpkQ0J0WlcxaVpYSWdQU0J1WlhjZ1RXVnRZbVZ5S0dSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTV0WlcxaVpYSW5LU2xjYm4xY2JpSXNJbTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdjbVZ4ZFdseVpTZ25MaTlzYVdJdllYaHBiM01uS1RzaUxDSW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JuWmhjaUIxZEdsc2N5QTlJSEpsY1hWcGNtVW9KeTR2TGk0dmRYUnBiSE1uS1R0Y2JuWmhjaUJ6WlhSMGJHVWdQU0J5WlhGMWFYSmxLQ2N1THk0dUwyTnZjbVV2YzJWMGRHeGxKeWs3WEc1MllYSWdZblZwYkdSVlVrd2dQU0J5WlhGMWFYSmxLQ2N1THk0dUwyaGxiSEJsY25NdlluVnBiR1JWVWt3bktUdGNiblpoY2lCd1lYSnpaVWhsWVdSbGNuTWdQU0J5WlhGMWFYSmxLQ2N1THk0dUwyaGxiSEJsY25NdmNHRnljMlZJWldGa1pYSnpKeWs3WEc1MllYSWdhWE5WVWt4VFlXMWxUM0pwWjJsdUlEMGdjbVZ4ZFdseVpTZ25MaTh1TGk5b1pXeHdaWEp6TDJselZWSk1VMkZ0WlU5eWFXZHBiaWNwTzF4dWRtRnlJR055WldGMFpVVnljbTl5SUQwZ2NtVnhkV2x5WlNnbkxpNHZZMjl5WlM5amNtVmhkR1ZGY25KdmNpY3BPMXh1ZG1GeUlHSjBiMkVnUFNBb2RIbHdaVzltSUhkcGJtUnZkeUFoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dKaVlnZDJsdVpHOTNMbUowYjJFZ0ppWWdkMmx1Wkc5M0xtSjBiMkV1WW1sdVpDaDNhVzVrYjNjcEtTQjhmQ0J5WlhGMWFYSmxLQ2N1THk0dUwyaGxiSEJsY25NdlluUnZZU2NwTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlIaG9ja0ZrWVhCMFpYSW9ZMjl1Wm1sbktTQjdYRzRnSUhKbGRIVnliaUJ1WlhjZ1VISnZiV2x6WlNobWRXNWpkR2x2YmlCa2FYTndZWFJqYUZob2NsSmxjWFZsYzNRb2NtVnpiMngyWlN3Z2NtVnFaV04wS1NCN1hHNGdJQ0FnZG1GeUlISmxjWFZsYzNSRVlYUmhJRDBnWTI5dVptbG5MbVJoZEdFN1hHNGdJQ0FnZG1GeUlISmxjWFZsYzNSSVpXRmtaWEp6SUQwZ1kyOXVabWxuTG1obFlXUmxjbk03WEc1Y2JpQWdJQ0JwWmlBb2RYUnBiSE11YVhOR2IzSnRSR0YwWVNoeVpYRjFaWE4wUkdGMFlTa3BJSHRjYmlBZ0lDQWdJR1JsYkdWMFpTQnlaWEYxWlhOMFNHVmhaR1Z5YzFzblEyOXVkR1Z1ZEMxVWVYQmxKMTA3SUM4dklFeGxkQ0IwYUdVZ1luSnZkM05sY2lCelpYUWdhWFJjYmlBZ0lDQjlYRzVjYmlBZ0lDQjJZWElnY21WeGRXVnpkQ0E5SUc1bGR5QllUVXhJZEhSd1VtVnhkV1Z6ZENncE8xeHVJQ0FnSUhaaGNpQnNiMkZrUlhabGJuUWdQU0FuYjI1eVpXRmtlWE4wWVhSbFkyaGhibWRsSnp0Y2JpQWdJQ0IyWVhJZ2VFUnZiV0ZwYmlBOUlHWmhiSE5sTzF4dVhHNGdJQ0FnTHk4Z1JtOXlJRWxGSURndk9TQkRUMUpUSUhOMWNIQnZjblJjYmlBZ0lDQXZMeUJQYm14NUlITjFjSEJ2Y25SeklGQlBVMVFnWVc1a0lFZEZWQ0JqWVd4c2N5QmhibVFnWkc5bGMyNG5kQ0J5WlhSMWNtNXpJSFJvWlNCeVpYTndiMjV6WlNCb1pXRmtaWEp6TGx4dUlDQWdJQzh2SUVSUFRpZFVJR1J2SUhSb2FYTWdabTl5SUhSbGMzUnBibWNnWWk5aklGaE5URWgwZEhCU1pYRjFaWE4wSUdseklHMXZZMnRsWkN3Z2JtOTBJRmhFYjIxaGFXNVNaWEYxWlhOMExseHVJQ0FnSUdsbUlDaHdjbTlqWlhOekxtVnVkaTVPVDBSRlgwVk9WaUFoUFQwZ0ozUmxjM1FuSUNZbVhHNGdJQ0FnSUNBZ0lIUjVjR1Z2WmlCM2FXNWtiM2NnSVQwOUlDZDFibVJsWm1sdVpXUW5JQ1ltWEc0Z0lDQWdJQ0FnSUhkcGJtUnZkeTVZUkc5dFlXbHVVbVZ4ZFdWemRDQW1KaUFoS0NkM2FYUm9RM0psWkdWdWRHbGhiSE1uSUdsdUlISmxjWFZsYzNRcElDWW1YRzRnSUNBZ0lDQWdJQ0ZwYzFWU1RGTmhiV1ZQY21sbmFXNG9ZMjl1Wm1sbkxuVnliQ2twSUh0Y2JpQWdJQ0FnSUhKbGNYVmxjM1FnUFNCdVpYY2dkMmx1Wkc5M0xsaEViMjFoYVc1U1pYRjFaWE4wS0NrN1hHNGdJQ0FnSUNCc2IyRmtSWFpsYm5RZ1BTQW5iMjVzYjJGa0p6dGNiaUFnSUNBZ0lIaEViMjFoYVc0Z1BTQjBjblZsTzF4dUlDQWdJQ0FnY21WeGRXVnpkQzV2Ym5CeWIyZHlaWE56SUQwZ1puVnVZM1JwYjI0Z2FHRnVaR3hsVUhKdlozSmxjM01vS1NCN2ZUdGNiaUFnSUNBZ0lISmxjWFZsYzNRdWIyNTBhVzFsYjNWMElEMGdablZ1WTNScGIyNGdhR0Z1Wkd4bFZHbHRaVzkxZENncElIdDlPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJRWhVVkZBZ1ltRnphV01nWVhWMGFHVnVkR2xqWVhScGIyNWNiaUFnSUNCcFppQW9ZMjl1Wm1sbkxtRjFkR2dwSUh0Y2JpQWdJQ0FnSUhaaGNpQjFjMlZ5Ym1GdFpTQTlJR052Ym1acFp5NWhkWFJvTG5WelpYSnVZVzFsSUh4OElDY25PMXh1SUNBZ0lDQWdkbUZ5SUhCaGMzTjNiM0prSUQwZ1kyOXVabWxuTG1GMWRHZ3VjR0Z6YzNkdmNtUWdmSHdnSnljN1hHNGdJQ0FnSUNCeVpYRjFaWE4wU0dWaFpHVnljeTVCZFhSb2IzSnBlbUYwYVc5dUlEMGdKMEpoYzJsaklDY2dLeUJpZEc5aEtIVnpaWEp1WVcxbElDc2dKem9uSUNzZ2NHRnpjM2R2Y21RcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGNYVmxjM1F1YjNCbGJpaGpiMjVtYVdjdWJXVjBhRzlrTG5SdlZYQndaWEpEWVhObEtDa3NJR0oxYVd4a1ZWSk1LR052Ym1acFp5NTFjbXdzSUdOdmJtWnBaeTV3WVhKaGJYTXNJR052Ym1acFp5NXdZWEpoYlhOVFpYSnBZV3hwZW1WeUtTd2dkSEoxWlNrN1hHNWNiaUFnSUNBdkx5QlRaWFFnZEdobElISmxjWFZsYzNRZ2RHbHRaVzkxZENCcGJpQk5VMXh1SUNBZ0lISmxjWFZsYzNRdWRHbHRaVzkxZENBOUlHTnZibVpwWnk1MGFXMWxiM1YwTzF4dVhHNGdJQ0FnTHk4Z1RHbHpkR1Z1SUdadmNpQnlaV0ZrZVNCemRHRjBaVnh1SUNBZ0lISmxjWFZsYzNSYmJHOWhaRVYyWlc1MFhTQTlJR1oxYm1OMGFXOXVJR2hoYm1Sc1pVeHZZV1FvS1NCN1hHNGdJQ0FnSUNCcFppQW9JWEpsY1hWbGMzUWdmSHdnS0hKbGNYVmxjM1F1Y21WaFpIbFRkR0YwWlNBaFBUMGdOQ0FtSmlBaGVFUnZiV0ZwYmlrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQXZMeUJVYUdVZ2NtVnhkV1Z6ZENCbGNuSnZjbVZrSUc5MWRDQmhibVFnZDJVZ1pHbGtiaWQwSUdkbGRDQmhJSEpsYzNCdmJuTmxMQ0IwYUdseklIZHBiR3dnWW1WY2JpQWdJQ0FnSUM4dklHaGhibVJzWldRZ1lua2diMjVsY25KdmNpQnBibk4wWldGa1hHNGdJQ0FnSUNBdkx5QlhhWFJvSUc5dVpTQmxlR05sY0hScGIyNDZJSEpsY1hWbGMzUWdkR2hoZENCMWMybHVaeUJtYVd4bE9pQndjbTkwYjJOdmJDd2diVzl6ZENCaWNtOTNjMlZ5YzF4dUlDQWdJQ0FnTHk4Z2QybHNiQ0J5WlhSMWNtNGdjM1JoZEhWeklHRnpJREFnWlhabGJpQjBhRzkxWjJnZ2FYUW5jeUJoSUhOMVkyTmxjM05tZFd3Z2NtVnhkV1Z6ZEZ4dUlDQWdJQ0FnYVdZZ0tISmxjWFZsYzNRdWMzUmhkSFZ6SUQwOVBTQXdJQ1ltSUNFb2NtVnhkV1Z6ZEM1eVpYTndiMjV6WlZWU1RDQW1KaUJ5WlhGMVpYTjBMbkpsYzNCdmJuTmxWVkpNTG1sdVpHVjRUMllvSjJacGJHVTZKeWtnUFQwOUlEQXBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTHk4Z1VISmxjR0Z5WlNCMGFHVWdjbVZ6Y0c5dWMyVmNiaUFnSUNBZ0lIWmhjaUJ5WlhOd2IyNXpaVWhsWVdSbGNuTWdQU0FuWjJWMFFXeHNVbVZ6Y0c5dWMyVklaV0ZrWlhKekp5QnBiaUJ5WlhGMVpYTjBJRDhnY0dGeWMyVklaV0ZrWlhKektISmxjWFZsYzNRdVoyVjBRV3hzVW1WemNHOXVjMlZJWldGa1pYSnpLQ2twSURvZ2JuVnNiRHRjYmlBZ0lDQWdJSFpoY2lCeVpYTndiMjV6WlVSaGRHRWdQU0FoWTI5dVptbG5MbkpsYzNCdmJuTmxWSGx3WlNCOGZDQmpiMjVtYVdjdWNtVnpjRzl1YzJWVWVYQmxJRDA5UFNBbmRHVjRkQ2NnUHlCeVpYRjFaWE4wTG5KbGMzQnZibk5sVkdWNGRDQTZJSEpsY1hWbGMzUXVjbVZ6Y0c5dWMyVTdYRzRnSUNBZ0lDQjJZWElnY21WemNHOXVjMlVnUFNCN1hHNGdJQ0FnSUNBZ0lHUmhkR0U2SUhKbGMzQnZibk5sUkdGMFlTeGNiaUFnSUNBZ0lDQWdMeThnU1VVZ2MyVnVaSE1nTVRJeU15QnBibk4wWldGa0lHOW1JREl3TkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwyRjRhVzl6TDJGNGFXOXpMMmx6YzNWbGN5OHlNREVwWEc0Z0lDQWdJQ0FnSUhOMFlYUjFjem9nY21WeGRXVnpkQzV6ZEdGMGRYTWdQVDA5SURFeU1qTWdQeUF5TURRZ09pQnlaWEYxWlhOMExuTjBZWFIxY3l4Y2JpQWdJQ0FnSUNBZ2MzUmhkSFZ6VkdWNGREb2djbVZ4ZFdWemRDNXpkR0YwZFhNZ1BUMDlJREV5TWpNZ1B5QW5UbThnUTI5dWRHVnVkQ2NnT2lCeVpYRjFaWE4wTG5OMFlYUjFjMVJsZUhRc1hHNGdJQ0FnSUNBZ0lHaGxZV1JsY25NNklISmxjM0J2Ym5ObFNHVmhaR1Z5Y3l4Y2JpQWdJQ0FnSUNBZ1kyOXVabWxuT2lCamIyNW1hV2NzWEc0Z0lDQWdJQ0FnSUhKbGNYVmxjM1E2SUhKbGNYVmxjM1JjYmlBZ0lDQWdJSDA3WEc1Y2JpQWdJQ0FnSUhObGRIUnNaU2h5WlhOdmJIWmxMQ0J5WldwbFkzUXNJSEpsYzNCdmJuTmxLVHRjYmx4dUlDQWdJQ0FnTHk4Z1EyeGxZVzRnZFhBZ2NtVnhkV1Z6ZEZ4dUlDQWdJQ0FnY21WeGRXVnpkQ0E5SUc1MWJHdzdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lDOHZJRWhoYm1Sc1pTQnNiM2NnYkdWMlpXd2dibVYwZDI5eWF5Qmxjbkp2Y25OY2JpQWdJQ0J5WlhGMVpYTjBMbTl1WlhKeWIzSWdQU0JtZFc1amRHbHZiaUJvWVc1a2JHVkZjbkp2Y2lncElIdGNiaUFnSUNBZ0lDOHZJRkpsWVd3Z1pYSnliM0p6SUdGeVpTQm9hV1JrWlc0Z1puSnZiU0IxY3lCaWVTQjBhR1VnWW5KdmQzTmxjbHh1SUNBZ0lDQWdMeThnYjI1bGNuSnZjaUJ6YUc5MWJHUWdiMjVzZVNCbWFYSmxJR2xtSUdsMEozTWdZU0J1WlhSM2IzSnJJR1Z5Y205eVhHNGdJQ0FnSUNCeVpXcGxZM1FvWTNKbFlYUmxSWEp5YjNJb0owNWxkSGR2Y21zZ1JYSnliM0luTENCamIyNW1hV2NzSUc1MWJHd3NJSEpsY1hWbGMzUXBLVHRjYmx4dUlDQWdJQ0FnTHk4Z1EyeGxZVzRnZFhBZ2NtVnhkV1Z6ZEZ4dUlDQWdJQ0FnY21WeGRXVnpkQ0E5SUc1MWJHdzdYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lDOHZJRWhoYm1Sc1pTQjBhVzFsYjNWMFhHNGdJQ0FnY21WeGRXVnpkQzV2Ym5ScGJXVnZkWFFnUFNCbWRXNWpkR2x2YmlCb1lXNWtiR1ZVYVcxbGIzVjBLQ2tnZTF4dUlDQWdJQ0FnY21WcVpXTjBLR055WldGMFpVVnljbTl5S0NkMGFXMWxiM1YwSUc5bUlDY2dLeUJqYjI1bWFXY3VkR2x0Wlc5MWRDQXJJQ2R0Y3lCbGVHTmxaV1JsWkNjc0lHTnZibVpwWnl3Z0owVkRUMDVPUVVKUFVsUkZSQ2NzWEc0Z0lDQWdJQ0FnSUhKbGNYVmxjM1FwS1R0Y2JseHVJQ0FnSUNBZ0x5OGdRMnhsWVc0Z2RYQWdjbVZ4ZFdWemRGeHVJQ0FnSUNBZ2NtVnhkV1Z6ZENBOUlHNTFiR3c3WEc0Z0lDQWdmVHRjYmx4dUlDQWdJQzh2SUVGa1pDQjRjM0ptSUdobFlXUmxjbHh1SUNBZ0lDOHZJRlJvYVhNZ2FYTWdiMjVzZVNCa2IyNWxJR2xtSUhKMWJtNXBibWNnYVc0Z1lTQnpkR0Z1WkdGeVpDQmljbTkzYzJWeUlHVnVkbWx5YjI1dFpXNTBMbHh1SUNBZ0lDOHZJRk53WldOcFptbGpZV3hzZVNCdWIzUWdhV1lnZDJVbmNtVWdhVzRnWVNCM1pXSWdkMjl5YTJWeUxDQnZjaUJ5WldGamRDMXVZWFJwZG1VdVhHNGdJQ0FnYVdZZ0tIVjBhV3h6TG1selUzUmhibVJoY21SQ2NtOTNjMlZ5Ulc1MktDa3BJSHRjYmlBZ0lDQWdJSFpoY2lCamIyOXJhV1Z6SUQwZ2NtVnhkV2x5WlNnbkxpOHVMaTlvWld4d1pYSnpMMk52YjJ0cFpYTW5LVHRjYmx4dUlDQWdJQ0FnTHk4Z1FXUmtJSGh6Y21ZZ2FHVmhaR1Z5WEc0Z0lDQWdJQ0IyWVhJZ2VITnlabFpoYkhWbElEMGdLR052Ym1acFp5NTNhWFJvUTNKbFpHVnVkR2xoYkhNZ2ZId2dhWE5WVWt4VFlXMWxUM0pwWjJsdUtHTnZibVpwWnk1MWNtd3BLU0FtSmlCamIyNW1hV2N1ZUhOeVprTnZiMnRwWlU1aGJXVWdQMXh1SUNBZ0lDQWdJQ0FnSUdOdmIydHBaWE11Y21WaFpDaGpiMjVtYVdjdWVITnlaa052YjJ0cFpVNWhiV1VwSURwY2JpQWdJQ0FnSUNBZ0lDQjFibVJsWm1sdVpXUTdYRzVjYmlBZ0lDQWdJR2xtSUNoNGMzSm1WbUZzZFdVcElIdGNiaUFnSUNBZ0lDQWdjbVZ4ZFdWemRFaGxZV1JsY25OYlkyOXVabWxuTG5oemNtWklaV0ZrWlhKT1lXMWxYU0E5SUhoemNtWldZV3gxWlR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCQlpHUWdhR1ZoWkdWeWN5QjBieUIwYUdVZ2NtVnhkV1Z6ZEZ4dUlDQWdJR2xtSUNnbmMyVjBVbVZ4ZFdWemRFaGxZV1JsY2ljZ2FXNGdjbVZ4ZFdWemRDa2dlMXh1SUNBZ0lDQWdkWFJwYkhNdVptOXlSV0ZqYUNoeVpYRjFaWE4wU0dWaFpHVnljeXdnWm5WdVkzUnBiMjRnYzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWgyWVd3c0lHdGxlU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlISmxjWFZsYzNSRVlYUmhJRDA5UFNBbmRXNWtaV1pwYm1Wa0p5QW1KaUJyWlhrdWRHOU1iM2RsY2tOaGMyVW9LU0E5UFQwZ0oyTnZiblJsYm5RdGRIbHdaU2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQXZMeUJTWlcxdmRtVWdRMjl1ZEdWdWRDMVVlWEJsSUdsbUlHUmhkR0VnYVhNZ2RXNWtaV1pwYm1Wa1hHNGdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElISmxjWFZsYzNSSVpXRmtaWEp6VzJ0bGVWMDdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnTHk4Z1QzUm9aWEozYVhObElHRmtaQ0JvWldGa1pYSWdkRzhnZEdobElISmxjWFZsYzNSY2JpQWdJQ0FnSUNBZ0lDQnlaWEYxWlhOMExuTmxkRkpsY1hWbGMzUklaV0ZrWlhJb2EyVjVMQ0IyWVd3cE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJCWkdRZ2QybDBhRU55WldSbGJuUnBZV3h6SUhSdklISmxjWFZsYzNRZ2FXWWdibVZsWkdWa1hHNGdJQ0FnYVdZZ0tHTnZibVpwWnk1M2FYUm9RM0psWkdWdWRHbGhiSE1wSUh0Y2JpQWdJQ0FnSUhKbGNYVmxjM1F1ZDJsMGFFTnlaV1JsYm5ScFlXeHpJRDBnZEhKMVpUdGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QkJaR1FnY21WemNHOXVjMlZVZVhCbElIUnZJSEpsY1hWbGMzUWdhV1lnYm1WbFpHVmtYRzRnSUNBZ2FXWWdLR052Ym1acFp5NXlaWE53YjI1elpWUjVjR1VwSUh0Y2JpQWdJQ0FnSUhSeWVTQjdYRzRnSUNBZ0lDQWdJSEpsY1hWbGMzUXVjbVZ6Y0c5dWMyVlVlWEJsSUQwZ1kyOXVabWxuTG5KbGMzQnZibk5sVkhsd1pUdGNiaUFnSUNBZ0lIMGdZMkYwWTJnZ0tHVXBJSHRjYmlBZ0lDQWdJQ0FnTHk4Z1JYaHdaV04wWldRZ1JFOU5SWGhqWlhCMGFXOXVJSFJvY205M2JpQmllU0JpY205M2MyVnljeUJ1YjNRZ1kyOXRjR0YwYVdKc1pTQllUVXhJZEhSd1VtVnhkV1Z6ZENCTVpYWmxiQ0F5TGx4dUlDQWdJQ0FnSUNBdkx5QkNkWFFzSUhSb2FYTWdZMkZ1SUdKbElITjFjSEJ5WlhOelpXUWdabTl5SUNkcWMyOXVKeUIwZVhCbElHRnpJR2wwSUdOaGJpQmlaU0J3WVhKelpXUWdZbmtnWkdWbVlYVnNkQ0FuZEhKaGJuTm1iM0p0VW1WemNHOXVjMlVuSUdaMWJtTjBhVzl1TGx4dUlDQWdJQ0FnSUNCcFppQW9ZMjl1Wm1sbkxuSmxjM0J2Ym5ObFZIbHdaU0FoUFQwZ0oycHpiMjRuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ1pUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJRWhoYm1Sc1pTQndjbTluY21WemN5QnBaaUJ1WldWa1pXUmNiaUFnSUNCcFppQW9kSGx3Wlc5bUlHTnZibVpwWnk1dmJrUnZkMjVzYjJGa1VISnZaM0psYzNNZ1BUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0FnSUhKbGNYVmxjM1F1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduY0hKdlozSmxjM01uTENCamIyNW1hV2N1YjI1RWIzZHViRzloWkZCeWIyZHlaWE56S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCT2IzUWdZV3hzSUdKeWIzZHpaWEp6SUhOMWNIQnZjblFnZFhCc2IyRmtJR1YyWlc1MGMxeHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ1kyOXVabWxuTG05dVZYQnNiMkZrVUhKdlozSmxjM01nUFQwOUlDZG1kVzVqZEdsdmJpY2dKaVlnY21WeGRXVnpkQzUxY0d4dllXUXBJSHRjYmlBZ0lDQWdJSEpsY1hWbGMzUXVkWEJzYjJGa0xtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ozQnliMmR5WlhOekp5d2dZMjl1Wm1sbkxtOXVWWEJzYjJGa1VISnZaM0psYzNNcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaGpiMjVtYVdjdVkyRnVZMlZzVkc5clpXNHBJSHRjYmlBZ0lDQWdJQzh2SUVoaGJtUnNaU0JqWVc1alpXeHNZWFJwYjI1Y2JpQWdJQ0FnSUdOdmJtWnBaeTVqWVc1alpXeFViMnRsYmk1d2NtOXRhWE5sTG5Sb1pXNG9ablZ1WTNScGIyNGdiMjVEWVc1alpXeGxaQ2hqWVc1alpXd3BJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tDRnlaWEYxWlhOMEtTQjdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NtVnhkV1Z6ZEM1aFltOXlkQ2dwTzF4dUlDQWdJQ0FnSUNCeVpXcGxZM1FvWTJGdVkyVnNLVHRjYmlBZ0lDQWdJQ0FnTHk4Z1EyeGxZVzRnZFhBZ2NtVnhkV1Z6ZEZ4dUlDQWdJQ0FnSUNCeVpYRjFaWE4wSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoeVpYRjFaWE4wUkdGMFlTQTlQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNCeVpYRjFaWE4wUkdGMFlTQTlJRzUxYkd3N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1UyVnVaQ0IwYUdVZ2NtVnhkV1Z6ZEZ4dUlDQWdJSEpsY1hWbGMzUXVjMlZ1WkNoeVpYRjFaWE4wUkdGMFlTazdYRzRnSUgwcE8xeHVmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFYwYVd4eklEMGdjbVZ4ZFdseVpTZ25MaTkxZEdsc2N5Y3BPMXh1ZG1GeUlHSnBibVFnUFNCeVpYRjFhWEpsS0NjdUwyaGxiSEJsY25NdlltbHVaQ2NwTzF4dWRtRnlJRUY0YVc5eklEMGdjbVZ4ZFdseVpTZ25MaTlqYjNKbEwwRjRhVzl6SnlrN1hHNTJZWElnWkdWbVlYVnNkSE1nUFNCeVpYRjFhWEpsS0NjdUwyUmxabUYxYkhSekp5azdYRzVjYmk4cUtseHVJQ29nUTNKbFlYUmxJR0Z1SUdsdWMzUmhibU5sSUc5bUlFRjRhVzl6WEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJR1JsWm1GMWJIUkRiMjVtYVdjZ1ZHaGxJR1JsWm1GMWJIUWdZMjl1Wm1sbklHWnZjaUIwYUdVZ2FXNXpkR0Z1WTJWY2JpQXFJRUJ5WlhSMWNtNGdlMEY0YVc5emZTQkJJRzVsZHlCcGJuTjBZVzVqWlNCdlppQkJlR2x2YzF4dUlDb3ZYRzVtZFc1amRHbHZiaUJqY21WaGRHVkpibk4wWVc1alpTaGtaV1poZFd4MFEyOXVabWxuS1NCN1hHNGdJSFpoY2lCamIyNTBaWGgwSUQwZ2JtVjNJRUY0YVc5ektHUmxabUYxYkhSRGIyNW1hV2NwTzF4dUlDQjJZWElnYVc1emRHRnVZMlVnUFNCaWFXNWtLRUY0YVc5ekxuQnliM1J2ZEhsd1pTNXlaWEYxWlhOMExDQmpiMjUwWlhoMEtUdGNibHh1SUNBdkx5QkRiM0I1SUdGNGFXOXpMbkJ5YjNSdmRIbHdaU0IwYnlCcGJuTjBZVzVqWlZ4dUlDQjFkR2xzY3k1bGVIUmxibVFvYVc1emRHRnVZMlVzSUVGNGFXOXpMbkJ5YjNSdmRIbHdaU3dnWTI5dWRHVjRkQ2s3WEc1Y2JpQWdMeThnUTI5d2VTQmpiMjUwWlhoMElIUnZJR2x1YzNSaGJtTmxYRzRnSUhWMGFXeHpMbVY0ZEdWdVpDaHBibk4wWVc1alpTd2dZMjl1ZEdWNGRDazdYRzVjYmlBZ2NtVjBkWEp1SUdsdWMzUmhibU5sTzF4dWZWeHVYRzR2THlCRGNtVmhkR1VnZEdobElHUmxabUYxYkhRZ2FXNXpkR0Z1WTJVZ2RHOGdZbVVnWlhod2IzSjBaV1JjYm5aaGNpQmhlR2x2Y3lBOUlHTnlaV0YwWlVsdWMzUmhibU5sS0dSbFptRjFiSFJ6S1R0Y2JseHVMeThnUlhod2IzTmxJRUY0YVc5eklHTnNZWE56SUhSdklHRnNiRzkzSUdOc1lYTnpJR2x1YUdWeWFYUmhibU5sWEc1aGVHbHZjeTVCZUdsdmN5QTlJRUY0YVc5ek8xeHVYRzR2THlCR1lXTjBiM0o1SUdadmNpQmpjbVZoZEdsdVp5QnVaWGNnYVc1emRHRnVZMlZ6WEc1aGVHbHZjeTVqY21WaGRHVWdQU0JtZFc1amRHbHZiaUJqY21WaGRHVW9hVzV6ZEdGdVkyVkRiMjVtYVdjcElIdGNiaUFnY21WMGRYSnVJR055WldGMFpVbHVjM1JoYm1ObEtIVjBhV3h6TG0xbGNtZGxLR1JsWm1GMWJIUnpMQ0JwYm5OMFlXNWpaVU52Ym1acFp5a3BPMXh1ZlR0Y2JseHVMeThnUlhod2IzTmxJRU5oYm1ObGJDQW1JRU5oYm1ObGJGUnZhMlZ1WEc1aGVHbHZjeTVEWVc1alpXd2dQU0J5WlhGMWFYSmxLQ2N1TDJOaGJtTmxiQzlEWVc1alpXd25LVHRjYm1GNGFXOXpMa05oYm1ObGJGUnZhMlZ1SUQwZ2NtVnhkV2x5WlNnbkxpOWpZVzVqWld3dlEyRnVZMlZzVkc5clpXNG5LVHRjYm1GNGFXOXpMbWx6UTJGdVkyVnNJRDBnY21WeGRXbHlaU2duTGk5allXNWpaV3d2YVhORFlXNWpaV3duS1R0Y2JseHVMeThnUlhod2IzTmxJR0ZzYkM5emNISmxZV1JjYm1GNGFXOXpMbUZzYkNBOUlHWjFibU4wYVc5dUlHRnNiQ2h3Y205dGFYTmxjeWtnZTF4dUlDQnlaWFIxY200Z1VISnZiV2x6WlM1aGJHd29jSEp2YldselpYTXBPMXh1ZlR0Y2JtRjRhVzl6TG5Od2NtVmhaQ0E5SUhKbGNYVnBjbVVvSnk0dmFHVnNjR1Z5Y3k5emNISmxZV1FuS1R0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQmhlR2x2Y3p0Y2JseHVMeThnUVd4c2IzY2dkWE5sSUc5bUlHUmxabUYxYkhRZ2FXMXdiM0owSUhONWJuUmhlQ0JwYmlCVWVYQmxVMk55YVhCMFhHNXRiMlIxYkdVdVpYaHdiM0owY3k1a1pXWmhkV3gwSUQwZ1lYaHBiM003WEc0aUxDSW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JpOHFLbHh1SUNvZ1FTQmdRMkZ1WTJWc1lDQnBjeUJoYmlCdlltcGxZM1FnZEdoaGRDQnBjeUIwYUhKdmQyNGdkMmhsYmlCaGJpQnZjR1Z5WVhScGIyNGdhWE1nWTJGdVkyVnNaV1F1WEc0Z0tseHVJQ29nUUdOc1lYTnpYRzRnS2lCQWNHRnlZVzBnZTNOMGNtbHVaejE5SUcxbGMzTmhaMlVnVkdobElHMWxjM05oWjJVdVhHNGdLaTljYm1aMWJtTjBhVzl1SUVOaGJtTmxiQ2h0WlhOellXZGxLU0I3WEc0Z0lIUm9hWE11YldWemMyRm5aU0E5SUcxbGMzTmhaMlU3WEc1OVhHNWNia05oYm1ObGJDNXdjbTkwYjNSNWNHVXVkRzlUZEhKcGJtY2dQU0JtZFc1amRHbHZiaUIwYjFOMGNtbHVaeWdwSUh0Y2JpQWdjbVYwZFhKdUlDZERZVzVqWld3bklDc2dLSFJvYVhNdWJXVnpjMkZuWlNBL0lDYzZJQ2NnS3lCMGFHbHpMbTFsYzNOaFoyVWdPaUFuSnlrN1hHNTlPMXh1WEc1RFlXNWpaV3d1Y0hKdmRHOTBlWEJsTGw5ZlEwRk9RMFZNWDE4Z1BTQjBjblZsTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlFTmhibU5sYkR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVkbUZ5SUVOaGJtTmxiQ0E5SUhKbGNYVnBjbVVvSnk0dlEyRnVZMlZzSnlrN1hHNWNiaThxS2x4dUlDb2dRU0JnUTJGdVkyVnNWRzlyWlc1Z0lHbHpJR0Z1SUc5aWFtVmpkQ0IwYUdGMElHTmhiaUJpWlNCMWMyVmtJSFJ2SUhKbGNYVmxjM1FnWTJGdVkyVnNiR0YwYVc5dUlHOW1JR0Z1SUc5d1pYSmhkR2x2Ymk1Y2JpQXFYRzRnS2lCQVkyeGhjM05jYmlBcUlFQndZWEpoYlNCN1JuVnVZM1JwYjI1OUlHVjRaV04xZEc5eUlGUm9aU0JsZUdWamRYUnZjaUJtZFc1amRHbHZiaTVjYmlBcUwxeHVablZ1WTNScGIyNGdRMkZ1WTJWc1ZHOXJaVzRvWlhobFkzVjBiM0lwSUh0Y2JpQWdhV1lnS0hSNWNHVnZaaUJsZUdWamRYUnZjaUFoUFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QlVlWEJsUlhKeWIzSW9KMlY0WldOMWRHOXlJRzExYzNRZ1ltVWdZU0JtZFc1amRHbHZiaTRuS1R0Y2JpQWdmVnh1WEc0Z0lIWmhjaUJ5WlhOdmJIWmxVSEp2YldselpUdGNiaUFnZEdocGN5NXdjbTl0YVhObElEMGdibVYzSUZCeWIyMXBjMlVvWm5WdVkzUnBiMjRnY0hKdmJXbHpaVVY0WldOMWRHOXlLSEpsYzI5c2RtVXBJSHRjYmlBZ0lDQnlaWE52YkhabFVISnZiV2x6WlNBOUlISmxjMjlzZG1VN1hHNGdJSDBwTzF4dVhHNGdJSFpoY2lCMGIydGxiaUE5SUhSb2FYTTdYRzRnSUdWNFpXTjFkRzl5S0daMWJtTjBhVzl1SUdOaGJtTmxiQ2h0WlhOellXZGxLU0I3WEc0Z0lDQWdhV1lnS0hSdmEyVnVMbkpsWVhOdmJpa2dlMXh1SUNBZ0lDQWdMeThnUTJGdVkyVnNiR0YwYVc5dUlHaGhjeUJoYkhKbFlXUjVJR0psWlc0Z2NtVnhkV1Z6ZEdWa1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkRzlyWlc0dWNtVmhjMjl1SUQwZ2JtVjNJRU5oYm1ObGJDaHRaWE56WVdkbEtUdGNiaUFnSUNCeVpYTnZiSFpsVUhKdmJXbHpaU2gwYjJ0bGJpNXlaV0Z6YjI0cE8xeHVJQ0I5S1R0Y2JuMWNibHh1THlvcVhHNGdLaUJVYUhKdmQzTWdZU0JnUTJGdVkyVnNZQ0JwWmlCallXNWpaV3hzWVhScGIyNGdhR0Z6SUdKbFpXNGdjbVZ4ZFdWemRHVmtMbHh1SUNvdlhHNURZVzVqWld4VWIydGxiaTV3Y205MGIzUjVjR1V1ZEdoeWIzZEpabEpsY1hWbGMzUmxaQ0E5SUdaMWJtTjBhVzl1SUhSb2NtOTNTV1pTWlhGMVpYTjBaV1FvS1NCN1hHNGdJR2xtSUNoMGFHbHpMbkpsWVhOdmJpa2dlMXh1SUNBZ0lIUm9jbTkzSUhSb2FYTXVjbVZoYzI5dU8xeHVJQ0I5WEc1OU8xeHVYRzR2S2lwY2JpQXFJRkpsZEhWeWJuTWdZVzRnYjJKcVpXTjBJSFJvWVhRZ1kyOXVkR0ZwYm5NZ1lTQnVaWGNnWUVOaGJtTmxiRlJ2YTJWdVlDQmhibVFnWVNCbWRXNWpkR2x2YmlCMGFHRjBMQ0IzYUdWdUlHTmhiR3hsWkN4Y2JpQXFJR05oYm1ObGJITWdkR2hsSUdCRFlXNWpaV3hVYjJ0bGJtQXVYRzRnS2k5Y2JrTmhibU5sYkZSdmEyVnVMbk52ZFhKalpTQTlJR1oxYm1OMGFXOXVJSE52ZFhKalpTZ3BJSHRjYmlBZ2RtRnlJR05oYm1ObGJEdGNiaUFnZG1GeUlIUnZhMlZ1SUQwZ2JtVjNJRU5oYm1ObGJGUnZhMlZ1S0daMWJtTjBhVzl1SUdWNFpXTjFkRzl5S0dNcElIdGNiaUFnSUNCallXNWpaV3dnUFNCak8xeHVJQ0I5S1R0Y2JpQWdjbVYwZFhKdUlIdGNiaUFnSUNCMGIydGxiam9nZEc5clpXNHNYRzRnSUNBZ1kyRnVZMlZzT2lCallXNWpaV3hjYmlBZ2ZUdGNibjA3WEc1Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1EyRnVZMlZzVkc5clpXNDdYRzRpTENJbmRYTmxJSE4wY21samRDYzdYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnYVhORFlXNWpaV3dvZG1Gc2RXVXBJSHRjYmlBZ2NtVjBkWEp1SUNFaEtIWmhiSFZsSUNZbUlIWmhiSFZsTGw5ZlEwRk9RMFZNWDE4cE8xeHVmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJR1JsWm1GMWJIUnpJRDBnY21WeGRXbHlaU2duTGk4dUxpOWtaV1poZFd4MGN5Y3BPMXh1ZG1GeUlIVjBhV3h6SUQwZ2NtVnhkV2x5WlNnbkxpOHVMaTkxZEdsc2N5Y3BPMXh1ZG1GeUlFbHVkR1Z5WTJWd2RHOXlUV0Z1WVdkbGNpQTlJSEpsY1hWcGNtVW9KeTR2U1c1MFpYSmpaWEIwYjNKTllXNWhaMlZ5SnlrN1hHNTJZWElnWkdsemNHRjBZMmhTWlhGMVpYTjBJRDBnY21WeGRXbHlaU2duTGk5a2FYTndZWFJqYUZKbGNYVmxjM1FuS1R0Y2JseHVMeW9xWEc0Z0tpQkRjbVZoZEdVZ1lTQnVaWGNnYVc1emRHRnVZMlVnYjJZZ1FYaHBiM05jYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdhVzV6ZEdGdVkyVkRiMjVtYVdjZ1ZHaGxJR1JsWm1GMWJIUWdZMjl1Wm1sbklHWnZjaUIwYUdVZ2FXNXpkR0Z1WTJWY2JpQXFMMXh1Wm5WdVkzUnBiMjRnUVhocGIzTW9hVzV6ZEdGdVkyVkRiMjVtYVdjcElIdGNiaUFnZEdocGN5NWtaV1poZFd4MGN5QTlJR2x1YzNSaGJtTmxRMjl1Wm1sbk8xeHVJQ0IwYUdsekxtbHVkR1Z5WTJWd2RHOXljeUE5SUh0Y2JpQWdJQ0J5WlhGMVpYTjBPaUJ1WlhjZ1NXNTBaWEpqWlhCMGIzSk5ZVzVoWjJWeUtDa3NYRzRnSUNBZ2NtVnpjRzl1YzJVNklHNWxkeUJKYm5SbGNtTmxjSFJ2Y2sxaGJtRm5aWElvS1Z4dUlDQjlPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFUnBjM0JoZEdOb0lHRWdjbVZ4ZFdWemRGeHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCamIyNW1hV2NnVkdobElHTnZibVpwWnlCemNHVmphV1pwWXlCbWIzSWdkR2hwY3lCeVpYRjFaWE4wSUNodFpYSm5aV1FnZDJsMGFDQjBhR2x6TG1SbFptRjFiSFJ6S1Z4dUlDb3ZYRzVCZUdsdmN5NXdjbTkwYjNSNWNHVXVjbVZ4ZFdWemRDQTlJR1oxYm1OMGFXOXVJSEpsY1hWbGMzUW9ZMjl1Wm1sbktTQjdYRzRnSUM4cVpYTnNhVzUwSUc1dkxYQmhjbUZ0TFhKbFlYTnphV2R1T2pBcUwxeHVJQ0F2THlCQmJHeHZkeUJtYjNJZ1lYaHBiM01vSjJWNFlXMXdiR1V2ZFhKc0oxc3NJR052Ym1acFoxMHBJR0VnYkdFZ1ptVjBZMmdnUVZCSlhHNGdJR2xtSUNoMGVYQmxiMllnWTI5dVptbG5JRDA5UFNBbmMzUnlhVzVuSnlrZ2UxeHVJQ0FnSUdOdmJtWnBaeUE5SUhWMGFXeHpMbTFsY21kbEtIdGNiaUFnSUNBZ0lIVnliRG9nWVhKbmRXMWxiblJ6V3pCZFhHNGdJQ0FnZlN3Z1lYSm5kVzFsYm5Seld6RmRLVHRjYmlBZ2ZWeHVYRzRnSUdOdmJtWnBaeUE5SUhWMGFXeHpMbTFsY21kbEtHUmxabUYxYkhSekxDQjdiV1YwYUc5a09pQW5aMlYwSjMwc0lIUm9hWE11WkdWbVlYVnNkSE1zSUdOdmJtWnBaeWs3WEc0Z0lHTnZibVpwWnk1dFpYUm9iMlFnUFNCamIyNW1hV2N1YldWMGFHOWtMblJ2VEc5M1pYSkRZWE5sS0NrN1hHNWNiaUFnTHk4Z1NHOXZheUIxY0NCcGJuUmxjbU5sY0hSdmNuTWdiV2xrWkd4bGQyRnlaVnh1SUNCMllYSWdZMmhoYVc0Z1BTQmJaR2x6Y0dGMFkyaFNaWEYxWlhOMExDQjFibVJsWm1sdVpXUmRPMXh1SUNCMllYSWdjSEp2YldselpTQTlJRkJ5YjIxcGMyVXVjbVZ6YjJ4MlpTaGpiMjVtYVdjcE8xeHVYRzRnSUhSb2FYTXVhVzUwWlhKalpYQjBiM0p6TG5KbGNYVmxjM1F1Wm05eVJXRmphQ2htZFc1amRHbHZiaUIxYm5Ob2FXWjBVbVZ4ZFdWemRFbHVkR1Z5WTJWd2RHOXljeWhwYm5SbGNtTmxjSFJ2Y2lrZ2UxeHVJQ0FnSUdOb1lXbHVMblZ1YzJocFpuUW9hVzUwWlhKalpYQjBiM0l1Wm5Wc1ptbHNiR1ZrTENCcGJuUmxjbU5sY0hSdmNpNXlaV3BsWTNSbFpDazdYRzRnSUgwcE8xeHVYRzRnSUhSb2FYTXVhVzUwWlhKalpYQjBiM0p6TG5KbGMzQnZibk5sTG1admNrVmhZMmdvWm5WdVkzUnBiMjRnY0hWemFGSmxjM0J2Ym5ObFNXNTBaWEpqWlhCMGIzSnpLR2x1ZEdWeVkyVndkRzl5S1NCN1hHNGdJQ0FnWTJoaGFXNHVjSFZ6YUNocGJuUmxjbU5sY0hSdmNpNW1kV3htYVd4c1pXUXNJR2x1ZEdWeVkyVndkRzl5TG5KbGFtVmpkR1ZrS1R0Y2JpQWdmU2s3WEc1Y2JpQWdkMmhwYkdVZ0tHTm9ZV2x1TG14bGJtZDBhQ2tnZTF4dUlDQWdJSEJ5YjIxcGMyVWdQU0J3Y205dGFYTmxMblJvWlc0b1kyaGhhVzR1YzJocFpuUW9LU3dnWTJoaGFXNHVjMmhwWm5Rb0tTazdYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdjSEp2YldselpUdGNibjA3WEc1Y2JpOHZJRkJ5YjNacFpHVWdZV3hwWVhObGN5Qm1iM0lnYzNWd2NHOXlkR1ZrSUhKbGNYVmxjM1FnYldWMGFHOWtjMXh1ZFhScGJITXVabTl5UldGamFDaGJKMlJsYkdWMFpTY3NJQ2RuWlhRbkxDQW5hR1ZoWkNjc0lDZHZjSFJwYjI1ekoxMHNJR1oxYm1OMGFXOXVJR1p2Y2tWaFkyaE5aWFJvYjJST2IwUmhkR0VvYldWMGFHOWtLU0I3WEc0Z0lDOHFaWE5zYVc1MElHWjFibU10Ym1GdFpYTTZNQ292WEc0Z0lFRjRhVzl6TG5CeWIzUnZkSGx3WlZ0dFpYUm9iMlJkSUQwZ1puVnVZM1JwYjI0b2RYSnNMQ0JqYjI1bWFXY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WlhGMVpYTjBLSFYwYVd4ekxtMWxjbWRsS0dOdmJtWnBaeUI4ZkNCN2ZTd2dlMXh1SUNBZ0lDQWdiV1YwYUc5a09pQnRaWFJvYjJRc1hHNGdJQ0FnSUNCMWNtdzZJSFZ5YkZ4dUlDQWdJSDBwS1R0Y2JpQWdmVHRjYm4wcE8xeHVYRzUxZEdsc2N5NW1iM0pGWVdOb0tGc25jRzl6ZENjc0lDZHdkWFFuTENBbmNHRjBZMmduWFN3Z1puVnVZM1JwYjI0Z1ptOXlSV0ZqYUUxbGRHaHZaRmRwZEdoRVlYUmhLRzFsZEdodlpDa2dlMXh1SUNBdkttVnpiR2x1ZENCbWRXNWpMVzVoYldWek9qQXFMMXh1SUNCQmVHbHZjeTV3Y205MGIzUjVjR1ZiYldWMGFHOWtYU0E5SUdaMWJtTjBhVzl1S0hWeWJDd2daR0YwWVN3Z1kyOXVabWxuS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtVnhkV1Z6ZENoMWRHbHNjeTV0WlhKblpTaGpiMjVtYVdjZ2ZId2dlMzBzSUh0Y2JpQWdJQ0FnSUcxbGRHaHZaRG9nYldWMGFHOWtMRnh1SUNBZ0lDQWdkWEpzT2lCMWNtd3NYRzRnSUNBZ0lDQmtZWFJoT2lCa1lYUmhYRzRnSUNBZ2ZTa3BPMXh1SUNCOU8xeHVmU2s3WEc1Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1FYaHBiM003WEc0aUxDSW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JuWmhjaUIxZEdsc2N5QTlJSEpsY1hWcGNtVW9KeTR2TGk0dmRYUnBiSE1uS1R0Y2JseHVablZ1WTNScGIyNGdTVzUwWlhKalpYQjBiM0pOWVc1aFoyVnlLQ2tnZTF4dUlDQjBhR2x6TG1oaGJtUnNaWEp6SUQwZ1cxMDdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FXUmtJR0VnYm1WM0lHbHVkR1Z5WTJWd2RHOXlJSFJ2SUhSb1pTQnpkR0ZqYTF4dUlDcGNiaUFxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdaMWJHWnBiR3hsWkNCVWFHVWdablZ1WTNScGIyNGdkRzhnYUdGdVpHeGxJR0IwYUdWdVlDQm1iM0lnWVNCZ1VISnZiV2x6WldCY2JpQXFJRUJ3WVhKaGJTQjdSblZ1WTNScGIyNTlJSEpsYW1WamRHVmtJRlJvWlNCbWRXNWpkR2x2YmlCMGJ5Qm9ZVzVrYkdVZ1lISmxhbVZqZEdBZ1ptOXlJR0VnWUZCeWIyMXBjMlZnWEc0Z0tseHVJQ29nUUhKbGRIVnliaUI3VG5WdFltVnlmU0JCYmlCSlJDQjFjMlZrSUhSdklISmxiVzkyWlNCcGJuUmxjbU5sY0hSdmNpQnNZWFJsY2x4dUlDb3ZYRzVKYm5SbGNtTmxjSFJ2Y2sxaGJtRm5aWEl1Y0hKdmRHOTBlWEJsTG5WelpTQTlJR1oxYm1OMGFXOXVJSFZ6WlNobWRXeG1hV3hzWldRc0lISmxhbVZqZEdWa0tTQjdYRzRnSUhSb2FYTXVhR0Z1Wkd4bGNuTXVjSFZ6YUNoN1hHNGdJQ0FnWm5Wc1ptbHNiR1ZrT2lCbWRXeG1hV3hzWldRc1hHNGdJQ0FnY21WcVpXTjBaV1E2SUhKbGFtVmpkR1ZrWEc0Z0lIMHBPMXh1SUNCeVpYUjFjbTRnZEdocGN5NW9ZVzVrYkdWeWN5NXNaVzVuZEdnZ0xTQXhPMXh1ZlR0Y2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ1lXNGdhVzUwWlhKalpYQjBiM0lnWm5KdmJTQjBhR1VnYzNSaFkydGNiaUFxWEc0Z0tpQkFjR0Z5WVcwZ2UwNTFiV0psY24wZ2FXUWdWR2hsSUVsRUlIUm9ZWFFnZDJGeklISmxkSFZ5Ym1Wa0lHSjVJR0IxYzJWZ1hHNGdLaTljYmtsdWRHVnlZMlZ3ZEc5eVRXRnVZV2RsY2k1d2NtOTBiM1I1Y0dVdVpXcGxZM1FnUFNCbWRXNWpkR2x2YmlCbGFtVmpkQ2hwWkNrZ2UxeHVJQ0JwWmlBb2RHaHBjeTVvWVc1a2JHVnljMXRwWkYwcElIdGNiaUFnSUNCMGFHbHpMbWhoYm1Sc1pYSnpXMmxrWFNBOUlHNTFiR3c3WEc0Z0lIMWNibjA3WEc1Y2JpOHFLbHh1SUNvZ1NYUmxjbUYwWlNCdmRtVnlJR0ZzYkNCMGFHVWdjbVZuYVhOMFpYSmxaQ0JwYm5SbGNtTmxjSFJ2Y25OY2JpQXFYRzRnS2lCVWFHbHpJRzFsZEdodlpDQnBjeUJ3WVhKMGFXTjFiR0Z5YkhrZ2RYTmxablZzSUdadmNpQnphMmx3Y0dsdVp5QnZkbVZ5SUdGdWVWeHVJQ29nYVc1MFpYSmpaWEIwYjNKeklIUm9ZWFFnYldGNUlHaGhkbVVnWW1WamIyMWxJR0J1ZFd4c1lDQmpZV3hzYVc1bklHQmxhbVZqZEdBdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0R2RXNWpkR2x2Ym4wZ1ptNGdWR2hsSUdaMWJtTjBhVzl1SUhSdklHTmhiR3dnWm05eUlHVmhZMmdnYVc1MFpYSmpaWEIwYjNKY2JpQXFMMXh1U1c1MFpYSmpaWEIwYjNKTllXNWhaMlZ5TG5CeWIzUnZkSGx3WlM1bWIzSkZZV05vSUQwZ1puVnVZM1JwYjI0Z1ptOXlSV0ZqYUNobWJpa2dlMXh1SUNCMWRHbHNjeTVtYjNKRllXTm9LSFJvYVhNdWFHRnVaR3hsY25Nc0lHWjFibU4wYVc5dUlHWnZja1ZoWTJoSVlXNWtiR1Z5S0dncElIdGNiaUFnSUNCcFppQW9hQ0FoUFQwZ2JuVnNiQ2tnZTF4dUlDQWdJQ0FnWm00b2FDazdYRzRnSUNBZ2ZWeHVJQ0I5S1R0Y2JuMDdYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnU1c1MFpYSmpaWEIwYjNKTllXNWhaMlZ5TzF4dUlpd2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNTJZWElnWlc1b1lXNWpaVVZ5Y205eUlEMGdjbVZ4ZFdseVpTZ25MaTlsYm1oaGJtTmxSWEp5YjNJbktUdGNibHh1THlvcVhHNGdLaUJEY21WaGRHVWdZVzRnUlhKeWIzSWdkMmwwYUNCMGFHVWdjM0JsWTJsbWFXVmtJRzFsYzNOaFoyVXNJR052Ym1acFp5d2daWEp5YjNJZ1kyOWtaU3dnY21WeGRXVnpkQ0JoYm1RZ2NtVnpjRzl1YzJVdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0emRISnBibWQ5SUcxbGMzTmhaMlVnVkdobElHVnljbTl5SUcxbGMzTmhaMlV1WEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ1kyOXVabWxuSUZSb1pTQmpiMjVtYVdjdVhHNGdLaUJBY0dGeVlXMGdlM04wY21sdVozMGdXMk52WkdWZElGUm9aU0JsY25KdmNpQmpiMlJsSUNobWIzSWdaWGhoYlhCc1pTd2dKMFZEVDA1T1FVSlBVbFJGUkNjcExseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJRnR5WlhGMVpYTjBYU0JVYUdVZ2NtVnhkV1Z6ZEM1Y2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQmJjbVZ6Y0c5dWMyVmRJRlJvWlNCeVpYTndiMjV6WlM1Y2JpQXFJRUJ5WlhSMWNtNXpJSHRGY25KdmNuMGdWR2hsSUdOeVpXRjBaV1FnWlhKeWIzSXVYRzRnS2k5Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUlhKeWIzSW9iV1Z6YzJGblpTd2dZMjl1Wm1sbkxDQmpiMlJsTENCeVpYRjFaWE4wTENCeVpYTndiMjV6WlNrZ2UxeHVJQ0IyWVhJZ1pYSnliM0lnUFNCdVpYY2dSWEp5YjNJb2JXVnpjMkZuWlNrN1hHNGdJSEpsZEhWeWJpQmxibWhoYm1ObFJYSnliM0lvWlhKeWIzSXNJR052Ym1acFp5d2dZMjlrWlN3Z2NtVnhkV1Z6ZEN3Z2NtVnpjRzl1YzJVcE8xeHVmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFYwYVd4eklEMGdjbVZ4ZFdseVpTZ25MaTh1TGk5MWRHbHNjeWNwTzF4dWRtRnlJSFJ5WVc1elptOXliVVJoZEdFZ1BTQnlaWEYxYVhKbEtDY3VMM1J5WVc1elptOXliVVJoZEdFbktUdGNiblpoY2lCcGMwTmhibU5sYkNBOUlISmxjWFZwY21Vb0p5NHVMMk5oYm1ObGJDOXBjME5oYm1ObGJDY3BPMXh1ZG1GeUlHUmxabUYxYkhSeklEMGdjbVZ4ZFdseVpTZ25MaTR2WkdWbVlYVnNkSE1uS1R0Y2JuWmhjaUJwYzBGaWMyOXNkWFJsVlZKTUlEMGdjbVZ4ZFdseVpTZ25MaTh1TGk5b1pXeHdaWEp6TDJselFXSnpiMngxZEdWVlVrd25LVHRjYm5aaGNpQmpiMjFpYVc1bFZWSk1jeUE5SUhKbGNYVnBjbVVvSnk0dkxpNHZhR1ZzY0dWeWN5OWpiMjFpYVc1bFZWSk1jeWNwTzF4dVhHNHZLaXBjYmlBcUlGUm9jbTkzY3lCaElHQkRZVzVqWld4Z0lHbG1JR05oYm1ObGJHeGhkR2x2YmlCb1lYTWdZbVZsYmlCeVpYRjFaWE4wWldRdVhHNGdLaTljYm1aMWJtTjBhVzl1SUhSb2NtOTNTV1pEWVc1alpXeHNZWFJwYjI1U1pYRjFaWE4wWldRb1kyOXVabWxuS1NCN1hHNGdJR2xtSUNoamIyNW1hV2N1WTJGdVkyVnNWRzlyWlc0cElIdGNiaUFnSUNCamIyNW1hV2N1WTJGdVkyVnNWRzlyWlc0dWRHaHliM2RKWmxKbGNYVmxjM1JsWkNncE8xeHVJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2dSR2x6Y0dGMFkyZ2dZU0J5WlhGMVpYTjBJSFJ2SUhSb1pTQnpaWEoyWlhJZ2RYTnBibWNnZEdobElHTnZibVpwWjNWeVpXUWdZV1JoY0hSbGNpNWNiaUFxWEc0Z0tpQkFjR0Z5WVcwZ2UyOWlhbVZqZEgwZ1kyOXVabWxuSUZSb1pTQmpiMjVtYVdjZ2RHaGhkQ0JwY3lCMGJ5QmlaU0IxYzJWa0lHWnZjaUIwYUdVZ2NtVnhkV1Z6ZEZ4dUlDb2dRSEpsZEhWeWJuTWdlMUJ5YjIxcGMyVjlJRlJvWlNCUWNtOXRhWE5sSUhSdklHSmxJR1oxYkdacGJHeGxaRnh1SUNvdlhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlHUnBjM0JoZEdOb1VtVnhkV1Z6ZENoamIyNW1hV2NwSUh0Y2JpQWdkR2h5YjNkSlprTmhibU5sYkd4aGRHbHZibEpsY1hWbGMzUmxaQ2hqYjI1bWFXY3BPMXh1WEc0Z0lDOHZJRk4xY0hCdmNuUWdZbUZ6WlZWU1RDQmpiMjVtYVdkY2JpQWdhV1lnS0dOdmJtWnBaeTVpWVhObFZWSk1JQ1ltSUNGcGMwRmljMjlzZFhSbFZWSk1LR052Ym1acFp5NTFjbXdwS1NCN1hHNGdJQ0FnWTI5dVptbG5MblZ5YkNBOUlHTnZiV0pwYm1WVlVreHpLR052Ym1acFp5NWlZWE5sVlZKTUxDQmpiMjVtYVdjdWRYSnNLVHRjYmlBZ2ZWeHVYRzRnSUM4dklFVnVjM1Z5WlNCb1pXRmtaWEp6SUdWNGFYTjBYRzRnSUdOdmJtWnBaeTVvWldGa1pYSnpJRDBnWTI5dVptbG5MbWhsWVdSbGNuTWdmSHdnZTMwN1hHNWNiaUFnTHk4Z1ZISmhibk5tYjNKdElISmxjWFZsYzNRZ1pHRjBZVnh1SUNCamIyNW1hV2N1WkdGMFlTQTlJSFJ5WVc1elptOXliVVJoZEdFb1hHNGdJQ0FnWTI5dVptbG5MbVJoZEdFc1hHNGdJQ0FnWTI5dVptbG5MbWhsWVdSbGNuTXNYRzRnSUNBZ1kyOXVabWxuTG5SeVlXNXpabTl5YlZKbGNYVmxjM1JjYmlBZ0tUdGNibHh1SUNBdkx5QkdiR0YwZEdWdUlHaGxZV1JsY25OY2JpQWdZMjl1Wm1sbkxtaGxZV1JsY25NZ1BTQjFkR2xzY3k1dFpYSm5aU2hjYmlBZ0lDQmpiMjVtYVdjdWFHVmhaR1Z5Y3k1amIyMXRiMjRnZkh3Z2UzMHNYRzRnSUNBZ1kyOXVabWxuTG1obFlXUmxjbk5iWTI5dVptbG5MbTFsZEdodlpGMGdmSHdnZTMwc1hHNGdJQ0FnWTI5dVptbG5MbWhsWVdSbGNuTWdmSHdnZTMxY2JpQWdLVHRjYmx4dUlDQjFkR2xzY3k1bWIzSkZZV05vS0Z4dUlDQWdJRnNuWkdWc1pYUmxKeXdnSjJkbGRDY3NJQ2RvWldGa0p5d2dKM0J2YzNRbkxDQW5jSFYwSnl3Z0ozQmhkR05vSnl3Z0oyTnZiVzF2YmlkZExGeHVJQ0FnSUdaMWJtTjBhVzl1SUdOc1pXRnVTR1ZoWkdWeVEyOXVabWxuS0cxbGRHaHZaQ2tnZTF4dUlDQWdJQ0FnWkdWc1pYUmxJR052Ym1acFp5NW9aV0ZrWlhKelcyMWxkR2h2WkYwN1hHNGdJQ0FnZlZ4dUlDQXBPMXh1WEc0Z0lIWmhjaUJoWkdGd2RHVnlJRDBnWTI5dVptbG5MbUZrWVhCMFpYSWdmSHdnWkdWbVlYVnNkSE11WVdSaGNIUmxjanRjYmx4dUlDQnlaWFIxY200Z1lXUmhjSFJsY2loamIyNW1hV2NwTG5Sb1pXNG9ablZ1WTNScGIyNGdiMjVCWkdGd2RHVnlVbVZ6YjJ4MWRHbHZiaWh5WlhOd2IyNXpaU2tnZTF4dUlDQWdJSFJvY205M1NXWkRZVzVqWld4c1lYUnBiMjVTWlhGMVpYTjBaV1FvWTI5dVptbG5LVHRjYmx4dUlDQWdJQzh2SUZSeVlXNXpabTl5YlNCeVpYTndiMjV6WlNCa1lYUmhYRzRnSUNBZ2NtVnpjRzl1YzJVdVpHRjBZU0E5SUhSeVlXNXpabTl5YlVSaGRHRW9YRzRnSUNBZ0lDQnlaWE53YjI1elpTNWtZWFJoTEZ4dUlDQWdJQ0FnY21WemNHOXVjMlV1YUdWaFpHVnljeXhjYmlBZ0lDQWdJR052Ym1acFp5NTBjbUZ1YzJadmNtMVNaWE53YjI1elpWeHVJQ0FnSUNrN1hHNWNiaUFnSUNCeVpYUjFjbTRnY21WemNHOXVjMlU3WEc0Z0lIMHNJR1oxYm1OMGFXOXVJRzl1UVdSaGNIUmxjbEpsYW1WamRHbHZiaWh5WldGemIyNHBJSHRjYmlBZ0lDQnBaaUFvSVdselEyRnVZMlZzS0hKbFlYTnZiaWtwSUh0Y2JpQWdJQ0FnSUhSb2NtOTNTV1pEWVc1alpXeHNZWFJwYjI1U1pYRjFaWE4wWldRb1kyOXVabWxuS1R0Y2JseHVJQ0FnSUNBZ0x5OGdWSEpoYm5ObWIzSnRJSEpsYzNCdmJuTmxJR1JoZEdGY2JpQWdJQ0FnSUdsbUlDaHlaV0Z6YjI0Z0ppWWdjbVZoYzI5dUxuSmxjM0J2Ym5ObEtTQjdYRzRnSUNBZ0lDQWdJSEpsWVhOdmJpNXlaWE53YjI1elpTNWtZWFJoSUQwZ2RISmhibk5tYjNKdFJHRjBZU2hjYmlBZ0lDQWdJQ0FnSUNCeVpXRnpiMjR1Y21WemNHOXVjMlV1WkdGMFlTeGNiaUFnSUNBZ0lDQWdJQ0J5WldGemIyNHVjbVZ6Y0c5dWMyVXVhR1ZoWkdWeWN5eGNiaUFnSUNBZ0lDQWdJQ0JqYjI1bWFXY3VkSEpoYm5ObWIzSnRVbVZ6Y0c5dWMyVmNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1VISnZiV2x6WlM1eVpXcGxZM1FvY21WaGMyOXVLVHRjYmlBZ2ZTazdYRzU5TzF4dUlpd2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNHZLaXBjYmlBcUlGVndaR0YwWlNCaGJpQkZjbkp2Y2lCM2FYUm9JSFJvWlNCemNHVmphV1pwWldRZ1kyOXVabWxuTENCbGNuSnZjaUJqYjJSbExDQmhibVFnY21WemNHOXVjMlV1WEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRGY25KdmNuMGdaWEp5YjNJZ1ZHaGxJR1Z5Y205eUlIUnZJSFZ3WkdGMFpTNWNiaUFxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0JqYjI1bWFXY2dWR2hsSUdOdmJtWnBaeTVjYmlBcUlFQndZWEpoYlNCN2MzUnlhVzVuZlNCYlkyOWtaVjBnVkdobElHVnljbTl5SUdOdlpHVWdLR1p2Y2lCbGVHRnRjR3hsTENBblJVTlBUazVCUWs5U1ZFVkVKeWt1WEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ1czSmxjWFZsYzNSZElGUm9aU0J5WlhGMVpYTjBMbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUZ0eVpYTndiMjV6WlYwZ1ZHaGxJSEpsYzNCdmJuTmxMbHh1SUNvZ1FISmxkSFZ5Ym5NZ2UwVnljbTl5ZlNCVWFHVWdaWEp5YjNJdVhHNGdLaTljYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnWlc1b1lXNWpaVVZ5Y205eUtHVnljbTl5TENCamIyNW1hV2NzSUdOdlpHVXNJSEpsY1hWbGMzUXNJSEpsYzNCdmJuTmxLU0I3WEc0Z0lHVnljbTl5TG1OdmJtWnBaeUE5SUdOdmJtWnBaenRjYmlBZ2FXWWdLR052WkdVcElIdGNiaUFnSUNCbGNuSnZjaTVqYjJSbElEMGdZMjlrWlR0Y2JpQWdmVnh1SUNCbGNuSnZjaTV5WlhGMVpYTjBJRDBnY21WeGRXVnpkRHRjYmlBZ1pYSnliM0l1Y21WemNHOXVjMlVnUFNCeVpYTndiMjV6WlR0Y2JpQWdjbVYwZFhKdUlHVnljbTl5TzF4dWZUdGNiaUlzSWlkMWMyVWdjM1J5YVdOMEp6dGNibHh1ZG1GeUlHTnlaV0YwWlVWeWNtOXlJRDBnY21WeGRXbHlaU2duTGk5amNtVmhkR1ZGY25KdmNpY3BPMXh1WEc0dktpcGNiaUFxSUZKbGMyOXNkbVVnYjNJZ2NtVnFaV04wSUdFZ1VISnZiV2x6WlNCaVlYTmxaQ0J2YmlCeVpYTndiMjV6WlNCemRHRjBkWE11WEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRHZFc1amRHbHZibjBnY21WemIyeDJaU0JCSUdaMWJtTjBhVzl1SUhSb1lYUWdjbVZ6YjJ4MlpYTWdkR2hsSUhCeWIyMXBjMlV1WEc0Z0tpQkFjR0Z5WVcwZ2UwWjFibU4wYVc5dWZTQnlaV3BsWTNRZ1FTQm1kVzVqZEdsdmJpQjBhR0YwSUhKbGFtVmpkSE1nZEdobElIQnliMjFwYzJVdVhHNGdLaUJBY0dGeVlXMGdlMjlpYW1WamRIMGdjbVZ6Y0c5dWMyVWdWR2hsSUhKbGMzQnZibk5sTGx4dUlDb3ZYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVJSE5sZEhSc1pTaHlaWE52YkhabExDQnlaV3BsWTNRc0lISmxjM0J2Ym5ObEtTQjdYRzRnSUhaaGNpQjJZV3hwWkdGMFpWTjBZWFIxY3lBOUlISmxjM0J2Ym5ObExtTnZibVpwWnk1MllXeHBaR0YwWlZOMFlYUjFjenRjYmlBZ0x5OGdUbTkwWlRvZ2MzUmhkSFZ6SUdseklHNXZkQ0JsZUhCdmMyVmtJR0o1SUZoRWIyMWhhVzVTWlhGMVpYTjBYRzRnSUdsbUlDZ2hjbVZ6Y0c5dWMyVXVjM1JoZEhWeklIeDhJQ0YyWVd4cFpHRjBaVk4wWVhSMWN5QjhmQ0IyWVd4cFpHRjBaVk4wWVhSMWN5aHlaWE53YjI1elpTNXpkR0YwZFhNcEtTQjdYRzRnSUNBZ2NtVnpiMngyWlNoeVpYTndiMjV6WlNrN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2NtVnFaV04wS0dOeVpXRjBaVVZ5Y205eUtGeHVJQ0FnSUNBZ0oxSmxjWFZsYzNRZ1ptRnBiR1ZrSUhkcGRHZ2djM1JoZEhWeklHTnZaR1VnSnlBcklISmxjM0J2Ym5ObExuTjBZWFIxY3l4Y2JpQWdJQ0FnSUhKbGMzQnZibk5sTG1OdmJtWnBaeXhjYmlBZ0lDQWdJRzUxYkd3c1hHNGdJQ0FnSUNCeVpYTndiMjV6WlM1eVpYRjFaWE4wTEZ4dUlDQWdJQ0FnY21WemNHOXVjMlZjYmlBZ0lDQXBLVHRjYmlBZ2ZWeHVmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFYwYVd4eklEMGdjbVZ4ZFdseVpTZ25MaTh1TGk5MWRHbHNjeWNwTzF4dVhHNHZLaXBjYmlBcUlGUnlZVzV6Wm05eWJTQjBhR1VnWkdGMFlTQm1iM0lnWVNCeVpYRjFaWE4wSUc5eUlHRWdjbVZ6Y0c5dWMyVmNiaUFxWEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEh4VGRISnBibWQ5SUdSaGRHRWdWR2hsSUdSaGRHRWdkRzhnWW1VZ2RISmhibk5tYjNKdFpXUmNiaUFxSUVCd1lYSmhiU0I3UVhKeVlYbDlJR2hsWVdSbGNuTWdWR2hsSUdobFlXUmxjbk1nWm05eUlIUm9aU0J5WlhGMVpYTjBJRzl5SUhKbGMzQnZibk5sWEc0Z0tpQkFjR0Z5WVcwZ2UwRnljbUY1ZkVaMWJtTjBhVzl1ZlNCbWJuTWdRU0J6YVc1bmJHVWdablZ1WTNScGIyNGdiM0lnUVhKeVlYa2diMllnWm5WdVkzUnBiMjV6WEc0Z0tpQkFjbVYwZFhKdWN5QjdLbjBnVkdobElISmxjM1ZzZEdsdVp5QjBjbUZ1YzJadmNtMWxaQ0JrWVhSaFhHNGdLaTljYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnZEhKaGJuTm1iM0p0UkdGMFlTaGtZWFJoTENCb1pXRmtaWEp6TENCbWJuTXBJSHRjYmlBZ0x5cGxjMnhwYm5RZ2JtOHRjR0Z5WVcwdGNtVmhjM05wWjI0Nk1Db3ZYRzRnSUhWMGFXeHpMbVp2Y2tWaFkyZ29abTV6TENCbWRXNWpkR2x2YmlCMGNtRnVjMlp2Y20wb1ptNHBJSHRjYmlBZ0lDQmtZWFJoSUQwZ1ptNG9aR0YwWVN3Z2FHVmhaR1Z5Y3lrN1hHNGdJSDBwTzF4dVhHNGdJSEpsZEhWeWJpQmtZWFJoTzF4dWZUdGNiaUlzSWlkMWMyVWdjM1J5YVdOMEp6dGNibHh1ZG1GeUlIVjBhV3h6SUQwZ2NtVnhkV2x5WlNnbkxpOTFkR2xzY3ljcE8xeHVkbUZ5SUc1dmNtMWhiR2w2WlVobFlXUmxjazVoYldVZ1BTQnlaWEYxYVhKbEtDY3VMMmhsYkhCbGNuTXZibTl5YldGc2FYcGxTR1ZoWkdWeVRtRnRaU2NwTzF4dVhHNTJZWElnUkVWR1FWVk1WRjlEVDA1VVJVNVVYMVJaVUVVZ1BTQjdYRzRnSUNkRGIyNTBaVzUwTFZSNWNHVW5PaUFuWVhCd2JHbGpZWFJwYjI0dmVDMTNkM2N0Wm05eWJTMTFjbXhsYm1OdlpHVmtKMXh1ZlR0Y2JseHVablZ1WTNScGIyNGdjMlYwUTI5dWRHVnVkRlI1Y0dWSlpsVnVjMlYwS0dobFlXUmxjbk1zSUhaaGJIVmxLU0I3WEc0Z0lHbG1JQ2doZFhScGJITXVhWE5WYm1SbFptbHVaV1FvYUdWaFpHVnljeWtnSmlZZ2RYUnBiSE11YVhOVmJtUmxabWx1WldRb2FHVmhaR1Z5YzFzblEyOXVkR1Z1ZEMxVWVYQmxKMTBwS1NCN1hHNGdJQ0FnYUdWaFpHVnljMXNuUTI5dWRHVnVkQzFVZVhCbEoxMGdQU0IyWVd4MVpUdGNiaUFnZlZ4dWZWeHVYRzVtZFc1amRHbHZiaUJuWlhSRVpXWmhkV3gwUVdSaGNIUmxjaWdwSUh0Y2JpQWdkbUZ5SUdGa1lYQjBaWEk3WEc0Z0lHbG1JQ2gwZVhCbGIyWWdXRTFNU0hSMGNGSmxjWFZsYzNRZ0lUMDlJQ2QxYm1SbFptbHVaV1FuS1NCN1hHNGdJQ0FnTHk4Z1JtOXlJR0p5YjNkelpYSnpJSFZ6WlNCWVNGSWdZV1JoY0hSbGNseHVJQ0FnSUdGa1lYQjBaWElnUFNCeVpYRjFhWEpsS0NjdUwyRmtZWEIwWlhKekwzaG9jaWNwTzF4dUlDQjlJR1ZzYzJVZ2FXWWdLSFI1Y0dWdlppQndjbTlqWlhOeklDRTlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVJQ0FnSUM4dklFWnZjaUJ1YjJSbElIVnpaU0JJVkZSUUlHRmtZWEIwWlhKY2JpQWdJQ0JoWkdGd2RHVnlJRDBnY21WeGRXbHlaU2duTGk5aFpHRndkR1Z5Y3k5b2RIUndKeWs3WEc0Z0lIMWNiaUFnY21WMGRYSnVJR0ZrWVhCMFpYSTdYRzU5WEc1Y2JuWmhjaUJrWldaaGRXeDBjeUE5SUh0Y2JpQWdZV1JoY0hSbGNqb2daMlYwUkdWbVlYVnNkRUZrWVhCMFpYSW9LU3hjYmx4dUlDQjBjbUZ1YzJadmNtMVNaWEYxWlhOME9pQmJablZ1WTNScGIyNGdkSEpoYm5ObWIzSnRVbVZ4ZFdWemRDaGtZWFJoTENCb1pXRmtaWEp6S1NCN1hHNGdJQ0FnYm05eWJXRnNhWHBsU0dWaFpHVnlUbUZ0WlNob1pXRmtaWEp6TENBblEyOXVkR1Z1ZEMxVWVYQmxKeWs3WEc0Z0lDQWdhV1lnS0hWMGFXeHpMbWx6Um05eWJVUmhkR0VvWkdGMFlTa2dmSHhjYmlBZ0lDQWdJSFYwYVd4ekxtbHpRWEp5WVhsQ2RXWm1aWElvWkdGMFlTa2dmSHhjYmlBZ0lDQWdJSFYwYVd4ekxtbHpRblZtWm1WeUtHUmhkR0VwSUh4OFhHNGdJQ0FnSUNCMWRHbHNjeTVwYzFOMGNtVmhiU2hrWVhSaEtTQjhmRnh1SUNBZ0lDQWdkWFJwYkhNdWFYTkdhV3hsS0dSaGRHRXBJSHg4WEc0Z0lDQWdJQ0IxZEdsc2N5NXBjMEpzYjJJb1pHRjBZU2xjYmlBZ0lDQXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQmtZWFJoTzF4dUlDQWdJSDFjYmlBZ0lDQnBaaUFvZFhScGJITXVhWE5CY25KaGVVSjFabVpsY2xacFpYY29aR0YwWVNrcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCa1lYUmhMbUoxWm1abGNqdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tIVjBhV3h6TG1selZWSk1VMlZoY21Ob1VHRnlZVzF6S0dSaGRHRXBLU0I3WEc0Z0lDQWdJQ0J6WlhSRGIyNTBaVzUwVkhsd1pVbG1WVzV6WlhRb2FHVmhaR1Z5Y3l3Z0oyRndjR3hwWTJGMGFXOXVMM2d0ZDNkM0xXWnZjbTB0ZFhKc1pXNWpiMlJsWkR0amFHRnljMlYwUFhWMFppMDRKeWs3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdaR0YwWVM1MGIxTjBjbWx1WnlncE8xeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb2RYUnBiSE11YVhOUFltcGxZM1FvWkdGMFlTa3BJSHRjYmlBZ0lDQWdJSE5sZEVOdmJuUmxiblJVZVhCbFNXWlZibk5sZENob1pXRmtaWEp6TENBbllYQndiR2xqWVhScGIyNHZhbk52Ymp0amFHRnljMlYwUFhWMFppMDRKeWs3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdTbE5QVGk1emRISnBibWRwWm5rb1pHRjBZU2s3WEc0Z0lDQWdmVnh1SUNBZ0lISmxkSFZ5YmlCa1lYUmhPMXh1SUNCOVhTeGNibHh1SUNCMGNtRnVjMlp2Y20xU1pYTndiMjV6WlRvZ1cyWjFibU4wYVc5dUlIUnlZVzV6Wm05eWJWSmxjM0J2Ym5ObEtHUmhkR0VwSUh0Y2JpQWdJQ0F2S21WemJHbHVkQ0J1Ynkxd1lYSmhiUzF5WldGemMybG5iam93S2k5Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUdSaGRHRWdQVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0JrWVhSaElEMGdTbE5QVGk1d1lYSnpaU2hrWVhSaEtUdGNiaUFnSUNBZ0lIMGdZMkYwWTJnZ0tHVXBJSHNnTHlvZ1NXZHViM0psSUNvdklIMWNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVJR1JoZEdFN1hHNGdJSDFkTEZ4dVhHNGdJQzhxS2x4dUlDQWdLaUJCSUhScGJXVnZkWFFnYVc0Z2JXbHNiR2x6WldOdmJtUnpJSFJ2SUdGaWIzSjBJR0VnY21WeGRXVnpkQzRnU1dZZ2MyVjBJSFJ2SURBZ0tHUmxabUYxYkhRcElHRmNiaUFnSUNvZ2RHbHRaVzkxZENCcGN5QnViM1FnWTNKbFlYUmxaQzVjYmlBZ0lDb3ZYRzRnSUhScGJXVnZkWFE2SURBc1hHNWNiaUFnZUhOeVprTnZiMnRwWlU1aGJXVTZJQ2RZVTFKR0xWUlBTMFZPSnl4Y2JpQWdlSE55WmtobFlXUmxjazVoYldVNklDZFlMVmhUVWtZdFZFOUxSVTRuTEZ4dVhHNGdJRzFoZUVOdmJuUmxiblJNWlc1bmRHZzZJQzB4TEZ4dVhHNGdJSFpoYkdsa1lYUmxVM1JoZEhWek9pQm1kVzVqZEdsdmJpQjJZV3hwWkdGMFpWTjBZWFIxY3loemRHRjBkWE1wSUh0Y2JpQWdJQ0J5WlhSMWNtNGdjM1JoZEhWeklENDlJREl3TUNBbUppQnpkR0YwZFhNZ1BDQXpNREE3WEc0Z0lIMWNibjA3WEc1Y2JtUmxabUYxYkhSekxtaGxZV1JsY25NZ1BTQjdYRzRnSUdOdmJXMXZiam9nZTF4dUlDQWdJQ2RCWTJObGNIUW5PaUFuWVhCd2JHbGpZWFJwYjI0dmFuTnZiaXdnZEdWNGRDOXdiR0ZwYml3Z0tpOHFKMXh1SUNCOVhHNTlPMXh1WEc1MWRHbHNjeTVtYjNKRllXTm9LRnNuWkdWc1pYUmxKeXdnSjJkbGRDY3NJQ2RvWldGa0oxMHNJR1oxYm1OMGFXOXVJR1p2Y2tWaFkyaE5aWFJvYjJST2IwUmhkR0VvYldWMGFHOWtLU0I3WEc0Z0lHUmxabUYxYkhSekxtaGxZV1JsY25OYmJXVjBhRzlrWFNBOUlIdDlPMXh1ZlNrN1hHNWNiblYwYVd4ekxtWnZja1ZoWTJnb1d5ZHdiM04wSnl3Z0ozQjFkQ2NzSUNkd1lYUmphQ2RkTENCbWRXNWpkR2x2YmlCbWIzSkZZV05vVFdWMGFHOWtWMmwwYUVSaGRHRW9iV1YwYUc5a0tTQjdYRzRnSUdSbFptRjFiSFJ6TG1obFlXUmxjbk5iYldWMGFHOWtYU0E5SUhWMGFXeHpMbTFsY21kbEtFUkZSa0ZWVEZSZlEwOU9WRVZPVkY5VVdWQkZLVHRjYm4wcE8xeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1JsWm1GMWJIUnpPMXh1SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdKcGJtUW9abTRzSUhSb2FYTkJjbWNwSUh0Y2JpQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlIZHlZWEFvS1NCN1hHNGdJQ0FnZG1GeUlHRnlaM01nUFNCdVpYY2dRWEp5WVhrb1lYSm5kVzFsYm5SekxteGxibWQwYUNrN1hHNGdJQ0FnWm05eUlDaDJZWElnYVNBOUlEQTdJR2tnUENCaGNtZHpMbXhsYm1kMGFEc2dhU3NyS1NCN1hHNGdJQ0FnSUNCaGNtZHpXMmxkSUQwZ1lYSm5kVzFsYm5SelcybGRPMXh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnWm00dVlYQndiSGtvZEdocGMwRnlaeXdnWVhKbmN5azdYRzRnSUgwN1hHNTlPMXh1SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc0dkx5QmlkRzloSUhCdmJIbG1hV3hzSUdadmNpQkpSVHd4TUNCamIzVnlkR1Z6ZVNCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdlpHRjJhV1JqYUdGdFltVnljeTlDWVhObE5qUXVhbk5jYmx4dWRtRnlJR05vWVhKeklEMGdKMEZDUTBSRlJrZElTVXBMVEUxT1QxQlJVbE5VVlZaWFdGbGFZV0pqWkdWbVoyaHBhbXRzYlc1dmNIRnljM1IxZG5kNGVYb3dNVEl6TkRVMk56ZzVLeTg5Snp0Y2JseHVablZ1WTNScGIyNGdSU2dwSUh0Y2JpQWdkR2hwY3k1dFpYTnpZV2RsSUQwZ0oxTjBjbWx1WnlCamIyNTBZV2x1Y3lCaGJpQnBiblpoYkdsa0lHTm9ZWEpoWTNSbGNpYzdYRzU5WEc1RkxuQnliM1J2ZEhsd1pTQTlJRzVsZHlCRmNuSnZjanRjYmtVdWNISnZkRzkwZVhCbExtTnZaR1VnUFNBMU8xeHVSUzV3Y205MGIzUjVjR1V1Ym1GdFpTQTlJQ2RKYm5aaGJHbGtRMmhoY21GamRHVnlSWEp5YjNJbk8xeHVYRzVtZFc1amRHbHZiaUJpZEc5aEtHbHVjSFYwS1NCN1hHNGdJSFpoY2lCemRISWdQU0JUZEhKcGJtY29hVzV3ZFhRcE8xeHVJQ0IyWVhJZ2IzVjBjSFYwSUQwZ0p5YzdYRzRnSUdadmNpQW9YRzRnSUNBZ0x5OGdhVzVwZEdsaGJHbDZaU0J5WlhOMWJIUWdZVzVrSUdOdmRXNTBaWEpjYmlBZ0lDQjJZWElnWW14dlkyc3NJR05vWVhKRGIyUmxMQ0JwWkhnZ1BTQXdMQ0J0WVhBZ1BTQmphR0Z5Y3p0Y2JpQWdJQ0F2THlCcFppQjBhR1VnYm1WNGRDQnpkSElnYVc1a1pYZ2daRzlsY3lCdWIzUWdaWGhwYzNRNlhHNGdJQ0FnTHk4Z0lDQmphR0Z1WjJVZ2RHaGxJRzFoY0hCcGJtY2dkR0ZpYkdVZ2RHOGdYQ0k5WENKY2JpQWdJQ0F2THlBZ0lHTm9aV05ySUdsbUlHUWdhR0Z6SUc1dklHWnlZV04wYVc5dVlXd2daR2xuYVhSelhHNGdJQ0FnYzNSeUxtTm9ZWEpCZENocFpIZ2dmQ0F3S1NCOGZDQW9iV0Z3SUQwZ0p6MG5MQ0JwWkhnZ0pTQXhLVHRjYmlBZ0lDQXZMeUJjSWpnZ0xTQnBaSGdnSlNBeElDb2dPRndpSUdkbGJtVnlZWFJsY3lCMGFHVWdjMlZ4ZFdWdVkyVWdNaXdnTkN3Z05pd2dPRnh1SUNBZ0lHOTFkSEIxZENBclBTQnRZWEF1WTJoaGNrRjBLRFl6SUNZZ1lteHZZMnNnUGo0Z09DQXRJR2xrZUNBbElERWdLaUE0S1Z4dUlDQXBJSHRjYmlBZ0lDQmphR0Z5UTI5a1pTQTlJSE4wY2k1amFHRnlRMjlrWlVGMEtHbGtlQ0FyUFNBeklDOGdOQ2s3WEc0Z0lDQWdhV1lnS0dOb1lYSkRiMlJsSUQ0Z01IaEdSaWtnZTF4dUlDQWdJQ0FnZEdoeWIzY2dibVYzSUVVb0tUdGNiaUFnSUNCOVhHNGdJQ0FnWW14dlkyc2dQU0JpYkc5amF5QThQQ0E0SUh3Z1kyaGhja052WkdVN1hHNGdJSDFjYmlBZ2NtVjBkWEp1SUc5MWRIQjFkRHRjYm4xY2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQmlkRzloTzF4dUlpd2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNTJZWElnZFhScGJITWdQU0J5WlhGMWFYSmxLQ2N1THk0dUwzVjBhV3h6SnlrN1hHNWNibVoxYm1OMGFXOXVJR1Z1WTI5a1pTaDJZV3dwSUh0Y2JpQWdjbVYwZFhKdUlHVnVZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDaDJZV3dwTGx4dUlDQWdJSEpsY0d4aFkyVW9MeVUwTUM5bmFTd2dKMEFuS1M1Y2JpQWdJQ0J5WlhCc1lXTmxLQzhsTTBFdloya3NJQ2M2SnlrdVhHNGdJQ0FnY21Wd2JHRmpaU2d2SlRJMEwyY3NJQ2NrSnlrdVhHNGdJQ0FnY21Wd2JHRmpaU2d2SlRKREwyZHBMQ0FuTENjcExseHVJQ0FnSUhKbGNHeGhZMlVvTHlVeU1DOW5MQ0FuS3ljcExseHVJQ0FnSUhKbGNHeGhZMlVvTHlVMVFpOW5hU3dnSjFzbktTNWNiaUFnSUNCeVpYQnNZV05sS0M4bE5VUXZaMmtzSUNkZEp5azdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FuVnBiR1FnWVNCVlVrd2dZbmtnWVhCd1pXNWthVzVuSUhCaGNtRnRjeUIwYnlCMGFHVWdaVzVrWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHR6ZEhKcGJtZDlJSFZ5YkNCVWFHVWdZbUZ6WlNCdlppQjBhR1VnZFhKc0lDaGxMbWN1TENCb2RIUndPaTh2ZDNkM0xtZHZiMmRzWlM1amIyMHBYRzRnS2lCQWNHRnlZVzBnZTI5aWFtVmpkSDBnVzNCaGNtRnRjMTBnVkdobElIQmhjbUZ0Y3lCMGJ5QmlaU0JoY0hCbGJtUmxaRnh1SUNvZ1FISmxkSFZ5Ym5NZ2UzTjBjbWx1WjMwZ1ZHaGxJR1p2Y20xaGRIUmxaQ0IxY214Y2JpQXFMMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUJpZFdsc1pGVlNUQ2gxY213c0lIQmhjbUZ0Y3l3Z2NHRnlZVzF6VTJWeWFXRnNhWHBsY2lrZ2UxeHVJQ0F2S21WemJHbHVkQ0J1Ynkxd1lYSmhiUzF5WldGemMybG5iam93S2k5Y2JpQWdhV1lnS0NGd1lYSmhiWE1wSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkWEpzTzF4dUlDQjlYRzVjYmlBZ2RtRnlJSE5sY21saGJHbDZaV1JRWVhKaGJYTTdYRzRnSUdsbUlDaHdZWEpoYlhOVFpYSnBZV3hwZW1WeUtTQjdYRzRnSUNBZ2MyVnlhV0ZzYVhwbFpGQmhjbUZ0Y3lBOUlIQmhjbUZ0YzFObGNtbGhiR2w2WlhJb2NHRnlZVzF6S1R0Y2JpQWdmU0JsYkhObElHbG1JQ2gxZEdsc2N5NXBjMVZTVEZObFlYSmphRkJoY21GdGN5aHdZWEpoYlhNcEtTQjdYRzRnSUNBZ2MyVnlhV0ZzYVhwbFpGQmhjbUZ0Y3lBOUlIQmhjbUZ0Y3k1MGIxTjBjbWx1WnlncE8xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lIWmhjaUJ3WVhKMGN5QTlJRnRkTzF4dVhHNGdJQ0FnZFhScGJITXVabTl5UldGamFDaHdZWEpoYlhNc0lHWjFibU4wYVc5dUlITmxjbWxoYkdsNlpTaDJZV3dzSUd0bGVTa2dlMXh1SUNBZ0lDQWdhV1lnS0haaGJDQTlQVDBnYm5Wc2JDQjhmQ0IwZVhCbGIyWWdkbUZzSUQwOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdsbUlDaDFkR2xzY3k1cGMwRnljbUY1S0haaGJDa3BJSHRjYmlBZ0lDQWdJQ0FnYTJWNUlEMGdhMlY1SUNzZ0oxdGRKenRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJSFpoYkNBOUlGdDJZV3hkTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMWRHbHNjeTVtYjNKRllXTm9LSFpoYkN3Z1puVnVZM1JwYjI0Z2NHRnljMlZXWVd4MVpTaDJLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaDFkR2xzY3k1cGMwUmhkR1VvZGlrcElIdGNiaUFnSUNBZ0lDQWdJQ0IySUQwZ2RpNTBiMGxUVDFOMGNtbHVaeWdwTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIVjBhV3h6TG1selQySnFaV04wS0hZcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnZGlBOUlFcFRUMDR1YzNSeWFXNW5hV1o1S0hZcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEJoY25SekxuQjFjMmdvWlc1amIyUmxLR3RsZVNrZ0t5QW5QU2NnS3lCbGJtTnZaR1VvZGlrcE8xeHVJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZTazdYRzVjYmlBZ0lDQnpaWEpwWVd4cGVtVmtVR0Z5WVcxeklEMGdjR0Z5ZEhNdWFtOXBiaWduSmljcE8xeHVJQ0I5WEc1Y2JpQWdhV1lnS0hObGNtbGhiR2w2WldSUVlYSmhiWE1wSUh0Y2JpQWdJQ0IxY213Z0t6MGdLSFZ5YkM1cGJtUmxlRTltS0NjL0p5a2dQVDA5SUMweElEOGdKejhuSURvZ0p5WW5LU0FySUhObGNtbGhiR2w2WldSUVlYSmhiWE03WEc0Z0lIMWNibHh1SUNCeVpYUjFjbTRnZFhKc08xeHVmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dUx5b3FYRzRnS2lCRGNtVmhkR1Z6SUdFZ2JtVjNJRlZTVENCaWVTQmpiMjFpYVc1cGJtY2dkR2hsSUhOd1pXTnBabWxsWkNCVlVreHpYRzRnS2x4dUlDb2dRSEJoY21GdElIdHpkSEpwYm1kOUlHSmhjMlZWVWt3Z1ZHaGxJR0poYzJVZ1ZWSk1YRzRnS2lCQWNHRnlZVzBnZTNOMGNtbHVaMzBnY21Wc1lYUnBkbVZWVWt3Z1ZHaGxJSEpsYkdGMGFYWmxJRlZTVEZ4dUlDb2dRSEpsZEhWeWJuTWdlM04wY21sdVozMGdWR2hsSUdOdmJXSnBibVZrSUZWU1RGeHVJQ292WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdOdmJXSnBibVZWVWt4ektHSmhjMlZWVWt3c0lISmxiR0YwYVhabFZWSk1LU0I3WEc0Z0lISmxkSFZ5YmlCeVpXeGhkR2wyWlZWU1RGeHVJQ0FnSUQ4Z1ltRnpaVlZTVEM1eVpYQnNZV05sS0M5Y1hDOHJKQzhzSUNjbktTQXJJQ2N2SnlBcklISmxiR0YwYVhabFZWSk1MbkpsY0d4aFkyVW9MMTVjWEM4ckx5d2dKeWNwWEc0Z0lDQWdPaUJpWVhObFZWSk1PMXh1ZlR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVkbUZ5SUhWMGFXeHpJRDBnY21WeGRXbHlaU2duTGk4dUxpOTFkR2xzY3ljcE8xeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJQ2hjYmlBZ2RYUnBiSE11YVhOVGRHRnVaR0Z5WkVKeWIzZHpaWEpGYm5Zb0tTQS9YRzVjYmlBZ0x5OGdVM1JoYm1SaGNtUWdZbkp2ZDNObGNpQmxiblp6SUhOMWNIQnZjblFnWkc5amRXMWxiblF1WTI5dmEybGxYRzRnSUNobWRXNWpkR2x2YmlCemRHRnVaR0Z5WkVKeWIzZHpaWEpGYm5Zb0tTQjdYRzRnSUNBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0FnSUhkeWFYUmxPaUJtZFc1amRHbHZiaUIzY21sMFpTaHVZVzFsTENCMllXeDFaU3dnWlhod2FYSmxjeXdnY0dGMGFDd2daRzl0WVdsdUxDQnpaV04xY21VcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUdOdmIydHBaU0E5SUZ0ZE8xeHVJQ0FnSUNBZ0lDQmpiMjlyYVdVdWNIVnphQ2h1WVcxbElDc2dKejBuSUNzZ1pXNWpiMlJsVlZKSlEyOXRjRzl1Wlc1MEtIWmhiSFZsS1NrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hWMGFXeHpMbWx6VG5WdFltVnlLR1Y0Y0dseVpYTXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyOXZhMmxsTG5CMWMyZ29KMlY0Y0dseVpYTTlKeUFySUc1bGR5QkVZWFJsS0dWNGNHbHlaWE1wTG5SdlIwMVVVM1J5YVc1bktDa3BPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSFYwYVd4ekxtbHpVM1J5YVc1bktIQmhkR2dwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl2YTJsbExuQjFjMmdvSjNCaGRHZzlKeUFySUhCaGRHZ3BPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSFYwYVd4ekxtbHpVM1J5YVc1bktHUnZiV0ZwYmlrcElIdGNiaUFnSUNBZ0lDQWdJQ0JqYjI5cmFXVXVjSFZ6YUNnblpHOXRZV2x1UFNjZ0t5QmtiMjFoYVc0cE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tITmxZM1Z5WlNBOVBUMGdkSEoxWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJR052YjJ0cFpTNXdkWE5vS0NkelpXTjFjbVVuS1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR1J2WTNWdFpXNTBMbU52YjJ0cFpTQTlJR052YjJ0cFpTNXFiMmx1S0NjN0lDY3BPMXh1SUNBZ0lDQWdmU3hjYmx4dUlDQWdJQ0FnY21WaFpEb2dablZ1WTNScGIyNGdjbVZoWkNodVlXMWxLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQnRZWFJqYUNBOUlHUnZZM1Z0Wlc1MExtTnZiMnRwWlM1dFlYUmphQ2h1WlhjZ1VtVm5SWGh3S0Njb1hudzdYRnhjWEhNcUtTZ25JQ3NnYm1GdFpTQXJJQ2NwUFNoYlhqdGRLaWtuS1NrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBb2JXRjBZMmdnUHlCa1pXTnZaR1ZWVWtsRGIyMXdiMjVsYm5Rb2JXRjBZMmhiTTEwcElEb2diblZzYkNrN1hHNGdJQ0FnSUNCOUxGeHVYRzRnSUNBZ0lDQnlaVzF2ZG1VNklHWjFibU4wYVc5dUlISmxiVzkyWlNodVlXMWxLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkM0pwZEdVb2JtRnRaU3dnSnljc0lFUmhkR1V1Ym05M0tDa2dMU0E0TmpRd01EQXdNQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVHRjYmlBZ2ZTa29LU0E2WEc1Y2JpQWdMeThnVG05dUlITjBZVzVrWVhKa0lHSnliM2R6WlhJZ1pXNTJJQ2gzWldJZ2QyOXlhMlZ5Y3l3Z2NtVmhZM1F0Ym1GMGFYWmxLU0JzWVdOcklHNWxaV1JsWkNCemRYQndiM0owTGx4dUlDQW9ablZ1WTNScGIyNGdibTl1VTNSaGJtUmhjbVJDY205M2MyVnlSVzUyS0NrZ2UxeHVJQ0FnSUhKbGRIVnliaUI3WEc0Z0lDQWdJQ0IzY21sMFpUb2dablZ1WTNScGIyNGdkM0pwZEdVb0tTQjdmU3hjYmlBZ0lDQWdJSEpsWVdRNklHWjFibU4wYVc5dUlISmxZV1FvS1NCN0lISmxkSFZ5YmlCdWRXeHNPeUI5TEZ4dUlDQWdJQ0FnY21WdGIzWmxPaUJtZFc1amRHbHZiaUJ5WlcxdmRtVW9LU0I3ZlZ4dUlDQWdJSDA3WEc0Z0lIMHBLQ2xjYmlrN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiaThxS2x4dUlDb2dSR1YwWlhKdGFXNWxjeUIzYUdWMGFHVnlJSFJvWlNCemNHVmphV1pwWldRZ1ZWSk1JR2x6SUdGaWMyOXNkWFJsWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHR6ZEhKcGJtZDlJSFZ5YkNCVWFHVWdWVkpNSUhSdklIUmxjM1JjYmlBcUlFQnlaWFIxY201eklIdGliMjlzWldGdWZTQlVjblZsSUdsbUlIUm9aU0J6Y0dWamFXWnBaV1FnVlZKTUlHbHpJR0ZpYzI5c2RYUmxMQ0J2ZEdobGNuZHBjMlVnWm1Gc2MyVmNiaUFxTDF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlCcGMwRmljMjlzZFhSbFZWSk1LSFZ5YkNrZ2UxeHVJQ0F2THlCQklGVlNUQ0JwY3lCamIyNXphV1JsY21Wa0lHRmljMjlzZFhSbElHbG1JR2wwSUdKbFoybHVjeUIzYVhSb0lGd2lQSE5qYUdWdFpUNDZMeTljSWlCdmNpQmNJaTh2WENJZ0tIQnliM1J2WTI5c0xYSmxiR0YwYVhabElGVlNUQ2t1WEc0Z0lDOHZJRkpHUXlBek9UZzJJR1JsWm1sdVpYTWdjMk5vWlcxbElHNWhiV1VnWVhNZ1lTQnpaWEYxWlc1alpTQnZaaUJqYUdGeVlXTjBaWEp6SUdKbFoybHVibWx1WnlCM2FYUm9JR0VnYkdWMGRHVnlJR0Z1WkNCbWIyeHNiM2RsWkZ4dUlDQXZMeUJpZVNCaGJua2dZMjl0WW1sdVlYUnBiMjRnYjJZZ2JHVjBkR1Z5Y3l3Z1pHbG5hWFJ6TENCd2JIVnpMQ0J3WlhKcGIyUXNJRzl5SUdoNWNHaGxiaTVjYmlBZ2NtVjBkWEp1SUM5ZUtGdGhMWHBkVzJFdGVseGNaRnhjSzF4Y0xWeGNMbDBxT2lrL1hGd3ZYRnd2TDJrdWRHVnpkQ2gxY213cE8xeHVmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFYwYVd4eklEMGdjbVZ4ZFdseVpTZ25MaTh1TGk5MWRHbHNjeWNwTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlDaGNiaUFnZFhScGJITXVhWE5UZEdGdVpHRnlaRUp5YjNkelpYSkZibllvS1NBL1hHNWNiaUFnTHk4Z1UzUmhibVJoY21RZ1luSnZkM05sY2lCbGJuWnpJR2hoZG1VZ1puVnNiQ0J6ZFhCd2IzSjBJRzltSUhSb1pTQkJVRWx6SUc1bFpXUmxaQ0IwYnlCMFpYTjBYRzRnSUM4dklIZG9aWFJvWlhJZ2RHaGxJSEpsY1hWbGMzUWdWVkpNSUdseklHOW1JSFJvWlNCellXMWxJRzl5YVdkcGJpQmhjeUJqZFhKeVpXNTBJR3h2WTJGMGFXOXVMbHh1SUNBb1puVnVZM1JwYjI0Z2MzUmhibVJoY21SQ2NtOTNjMlZ5Ulc1MktDa2dlMXh1SUNBZ0lIWmhjaUJ0YzJsbElEMGdMeWh0YzJsbGZIUnlhV1JsYm5RcEwya3VkR1Z6ZENodVlYWnBaMkYwYjNJdWRYTmxja0ZuWlc1MEtUdGNiaUFnSUNCMllYSWdkWEpzVUdGeWMybHVaMDV2WkdVZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NkaEp5azdYRzRnSUNBZ2RtRnlJRzl5YVdkcGJsVlNURHRjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ29nVUdGeWMyVWdZU0JWVWt3Z2RHOGdaR2x6WTI5MlpYSWdhWFFuY3lCamIyMXdiMjVsYm5SelhHNGdJQ0FnS2x4dUlDQWdJQ29nUUhCaGNtRnRJSHRUZEhKcGJtZDlJSFZ5YkNCVWFHVWdWVkpNSUhSdklHSmxJSEJoY25ObFpGeHVJQ0FnSUNvZ1FISmxkSFZ5Ym5NZ2UwOWlhbVZqZEgxY2JpQWdJQ0FxTDF4dUlDQWdJR1oxYm1OMGFXOXVJSEpsYzI5c2RtVlZVa3dvZFhKc0tTQjdYRzRnSUNBZ0lDQjJZWElnYUhKbFppQTlJSFZ5YkR0Y2JseHVJQ0FnSUNBZ2FXWWdLRzF6YVdVcElIdGNiaUFnSUNBZ0lDQWdMeThnU1VVZ2JtVmxaSE1nWVhSMGNtbGlkWFJsSUhObGRDQjBkMmxqWlNCMGJ5QnViM0p0WVd4cGVtVWdjSEp2Y0dWeWRHbGxjMXh1SUNBZ0lDQWdJQ0IxY214UVlYSnphVzVuVG05a1pTNXpaWFJCZEhSeWFXSjFkR1VvSjJoeVpXWW5MQ0JvY21WbUtUdGNiaUFnSUNBZ0lDQWdhSEpsWmlBOUlIVnliRkJoY25OcGJtZE9iMlJsTG1oeVpXWTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSFZ5YkZCaGNuTnBibWRPYjJSbExuTmxkRUYwZEhKcFluVjBaU2duYUhKbFppY3NJR2h5WldZcE8xeHVYRzRnSUNBZ0lDQXZMeUIxY214UVlYSnphVzVuVG05a1pTQndjbTkyYVdSbGN5QjBhR1VnVlhKc1ZYUnBiSE1nYVc1MFpYSm1ZV05sSUMwZ2FIUjBjRG92TDNWeWJDNXpjR1ZqTG5kb1lYUjNaeTV2Y21jdkkzVnliSFYwYVd4elhHNGdJQ0FnSUNCeVpYUjFjbTRnZTF4dUlDQWdJQ0FnSUNCb2NtVm1PaUIxY214UVlYSnphVzVuVG05a1pTNW9jbVZtTEZ4dUlDQWdJQ0FnSUNCd2NtOTBiMk52YkRvZ2RYSnNVR0Z5YzJsdVowNXZaR1V1Y0hKdmRHOWpiMndnUHlCMWNteFFZWEp6YVc1blRtOWtaUzV3Y205MGIyTnZiQzV5WlhCc1lXTmxLQzg2SkM4c0lDY25LU0E2SUNjbkxGeHVJQ0FnSUNBZ0lDQm9iM04wT2lCMWNteFFZWEp6YVc1blRtOWtaUzVvYjNOMExGeHVJQ0FnSUNBZ0lDQnpaV0Z5WTJnNklIVnliRkJoY25OcGJtZE9iMlJsTG5ObFlYSmphQ0EvSUhWeWJGQmhjbk5wYm1kT2IyUmxMbk5sWVhKamFDNXlaWEJzWVdObEtDOWVYRncvTHl3Z0p5Y3BJRG9nSnljc1hHNGdJQ0FnSUNBZ0lHaGhjMmc2SUhWeWJGQmhjbk5wYm1kT2IyUmxMbWhoYzJnZ1B5QjFjbXhRWVhKemFXNW5UbTlrWlM1b1lYTm9MbkpsY0d4aFkyVW9MMTRqTHl3Z0p5Y3BJRG9nSnljc1hHNGdJQ0FnSUNBZ0lHaHZjM1J1WVcxbE9pQjFjbXhRWVhKemFXNW5UbTlrWlM1b2IzTjBibUZ0WlN4Y2JpQWdJQ0FnSUNBZ2NHOXlkRG9nZFhKc1VHRnljMmx1WjA1dlpHVXVjRzl5ZEN4Y2JpQWdJQ0FnSUNBZ2NHRjBhRzVoYldVNklDaDFjbXhRWVhKemFXNW5UbTlrWlM1d1lYUm9ibUZ0WlM1amFHRnlRWFFvTUNrZ1BUMDlJQ2N2SnlrZ1AxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWEpzVUdGeWMybHVaMDV2WkdVdWNHRjBhRzVoYldVZ09seHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKeThuSUNzZ2RYSnNVR0Z5YzJsdVowNXZaR1V1Y0dGMGFHNWhiV1ZjYmlBZ0lDQWdJSDA3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdiM0pwWjJsdVZWSk1JRDBnY21WemIyeDJaVlZTVENoM2FXNWtiM2N1Ykc5allYUnBiMjR1YUhKbFppazdYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQXFJRVJsZEdWeWJXbHVaU0JwWmlCaElGVlNUQ0J6YUdGeVpYTWdkR2hsSUhOaGJXVWdiM0pwWjJsdUlHRnpJSFJvWlNCamRYSnlaVzUwSUd4dlkyRjBhVzl1WEc0Z0lDQWdLbHh1SUNBZ0lDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlISmxjWFZsYzNSVlVrd2dWR2hsSUZWU1RDQjBieUIwWlhOMFhHNGdJQ0FnS2lCQWNtVjBkWEp1Y3lCN1ltOXZiR1ZoYm4wZ1ZISjFaU0JwWmlCVlVrd2djMmhoY21WeklIUm9aU0J6WVcxbElHOXlhV2RwYml3Z2IzUm9aWEozYVhObElHWmhiSE5sWEc0Z0lDQWdLaTljYmlBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0Z2FYTlZVa3hUWVcxbFQzSnBaMmx1S0hKbGNYVmxjM1JWVWt3cElIdGNiaUFnSUNBZ0lIWmhjaUJ3WVhKelpXUWdQU0FvZFhScGJITXVhWE5UZEhKcGJtY29jbVZ4ZFdWemRGVlNUQ2twSUQ4Z2NtVnpiMngyWlZWU1RDaHlaWEYxWlhOMFZWSk1LU0E2SUhKbGNYVmxjM1JWVWt3N1hHNGdJQ0FnSUNCeVpYUjFjbTRnS0hCaGNuTmxaQzV3Y205MGIyTnZiQ0E5UFQwZ2IzSnBaMmx1VlZKTUxuQnliM1J2WTI5c0lDWW1YRzRnSUNBZ0lDQWdJQ0FnSUNCd1lYSnpaV1F1YUc5emRDQTlQVDBnYjNKcFoybHVWVkpNTG1odmMzUXBPMXh1SUNBZ0lIMDdYRzRnSUgwcEtDa2dPbHh1WEc0Z0lDOHZJRTV2YmlCemRHRnVaR0Z5WkNCaWNtOTNjMlZ5SUdWdWRuTWdLSGRsWWlCM2IzSnJaWEp6TENCeVpXRmpkQzF1WVhScGRtVXBJR3hoWTJzZ2JtVmxaR1ZrSUhOMWNIQnZjblF1WEc0Z0lDaG1kVzVqZEdsdmJpQnViMjVUZEdGdVpHRnlaRUp5YjNkelpYSkZibllvS1NCN1hHNGdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJR2x6VlZKTVUyRnRaVTl5YVdkcGJpZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjBjblZsTzF4dUlDQWdJSDA3WEc0Z0lIMHBLQ2xjYmlrN1hHNGlMQ0luZFhObElITjBjbWxqZENjN1hHNWNiblpoY2lCMWRHbHNjeUE5SUhKbGNYVnBjbVVvSnk0dUwzVjBhV3h6SnlrN1hHNWNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNGdibTl5YldGc2FYcGxTR1ZoWkdWeVRtRnRaU2hvWldGa1pYSnpMQ0J1YjNKdFlXeHBlbVZrVG1GdFpTa2dlMXh1SUNCMWRHbHNjeTVtYjNKRllXTm9LR2hsWVdSbGNuTXNJR1oxYm1OMGFXOXVJSEJ5YjJObGMzTklaV0ZrWlhJb2RtRnNkV1VzSUc1aGJXVXBJSHRjYmlBZ0lDQnBaaUFvYm1GdFpTQWhQVDBnYm05eWJXRnNhWHBsWkU1aGJXVWdKaVlnYm1GdFpTNTBiMVZ3Y0dWeVEyRnpaU2dwSUQwOVBTQnViM0p0WVd4cGVtVmtUbUZ0WlM1MGIxVndjR1Z5UTJGelpTZ3BLU0I3WEc0Z0lDQWdJQ0JvWldGa1pYSnpXMjV2Y20xaGJHbDZaV1JPWVcxbFhTQTlJSFpoYkhWbE8xeHVJQ0FnSUNBZ1pHVnNaWFJsSUdobFlXUmxjbk5iYm1GdFpWMDdYRzRnSUNBZ2ZWeHVJQ0I5S1R0Y2JuMDdYRzRpTENJbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQjFkR2xzY3lBOUlISmxjWFZwY21Vb0p5NHZMaTR2ZFhScGJITW5LVHRjYmx4dUx5OGdTR1ZoWkdWeWN5QjNhRzl6WlNCa2RYQnNhV05oZEdWeklHRnlaU0JwWjI1dmNtVmtJR0o1SUc1dlpHVmNiaTh2SUdNdVppNGdhSFIwY0hNNkx5OXViMlJsYW5NdWIzSm5MMkZ3YVM5b2RIUndMbWgwYld3amFIUjBjRjl0WlhOellXZGxYMmhsWVdSbGNuTmNiblpoY2lCcFoyNXZjbVZFZFhCc2FXTmhkR1ZQWmlBOUlGdGNiaUFnSjJGblpTY3NJQ2RoZFhSb2IzSnBlbUYwYVc5dUp5d2dKMk52Ym5SbGJuUXRiR1Z1WjNSb0p5d2dKMk52Ym5SbGJuUXRkSGx3WlNjc0lDZGxkR0ZuSnl4Y2JpQWdKMlY0Y0dseVpYTW5MQ0FuWm5KdmJTY3NJQ2RvYjNOMEp5d2dKMmxtTFcxdlpHbG1hV1ZrTFhOcGJtTmxKeXdnSjJsbUxYVnViVzlrYVdacFpXUXRjMmx1WTJVbkxGeHVJQ0FuYkdGemRDMXRiMlJwWm1sbFpDY3NJQ2RzYjJOaGRHbHZiaWNzSUNkdFlYZ3RabTl5ZDJGeVpITW5MQ0FuY0hKdmVIa3RZWFYwYUc5eWFYcGhkR2x2Ymljc1hHNGdJQ2R5WldabGNtVnlKeXdnSjNKbGRISjVMV0ZtZEdWeUp5d2dKM1Z6WlhJdFlXZGxiblFuWEc1ZE8xeHVYRzR2S2lwY2JpQXFJRkJoY25ObElHaGxZV1JsY25NZ2FXNTBieUJoYmlCdlltcGxZM1JjYmlBcVhHNGdLaUJnWUdCY2JpQXFJRVJoZEdVNklGZGxaQ3dnTWpjZ1FYVm5JREl3TVRRZ01EZzZOVGc2TkRrZ1IwMVVYRzRnS2lCRGIyNTBaVzUwTFZSNWNHVTZJR0Z3Y0d4cFkyRjBhVzl1TDJwemIyNWNiaUFxSUVOdmJtNWxZM1JwYjI0NklHdGxaWEF0WVd4cGRtVmNiaUFxSUZSeVlXNXpabVZ5TFVWdVkyOWthVzVuT2lCamFIVnVhMlZrWEc0Z0tpQmdZR0JjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMU4wY21sdVozMGdhR1ZoWkdWeWN5QklaV0ZrWlhKeklHNWxaV1JwYm1jZ2RHOGdZbVVnY0dGeWMyVmtYRzRnS2lCQWNtVjBkWEp1Y3lCN1QySnFaV04wZlNCSVpXRmtaWEp6SUhCaGNuTmxaQ0JwYm5SdklHRnVJRzlpYW1WamRGeHVJQ292WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUhCaGNuTmxTR1ZoWkdWeWN5aG9aV0ZrWlhKektTQjdYRzRnSUhaaGNpQndZWEp6WldRZ1BTQjdmVHRjYmlBZ2RtRnlJR3RsZVR0Y2JpQWdkbUZ5SUhaaGJEdGNiaUFnZG1GeUlHazdYRzVjYmlBZ2FXWWdLQ0ZvWldGa1pYSnpLU0I3SUhKbGRIVnliaUJ3WVhKelpXUTdJSDFjYmx4dUlDQjFkR2xzY3k1bWIzSkZZV05vS0dobFlXUmxjbk11YzNCc2FYUW9KMXhjYmljcExDQm1kVzVqZEdsdmJpQndZWEp6WlhJb2JHbHVaU2tnZTF4dUlDQWdJR2tnUFNCc2FXNWxMbWx1WkdWNFQyWW9Kem9uS1R0Y2JpQWdJQ0JyWlhrZ1BTQjFkR2xzY3k1MGNtbHRLR3hwYm1VdWMzVmljM1J5S0RBc0lHa3BLUzUwYjB4dmQyVnlRMkZ6WlNncE8xeHVJQ0FnSUhaaGJDQTlJSFYwYVd4ekxuUnlhVzBvYkdsdVpTNXpkV0p6ZEhJb2FTQXJJREVwS1R0Y2JseHVJQ0FnSUdsbUlDaHJaWGtwSUh0Y2JpQWdJQ0FnSUdsbUlDaHdZWEp6WldSYmEyVjVYU0FtSmlCcFoyNXZjbVZFZFhCc2FXTmhkR1ZQWmk1cGJtUmxlRTltS0d0bGVTa2dQajBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCcFppQW9hMlY1SUQwOVBTQW5jMlYwTFdOdmIydHBaU2NwSUh0Y2JpQWdJQ0FnSUNBZ2NHRnljMlZrVzJ0bGVWMGdQU0FvY0dGeWMyVmtXMnRsZVYwZ1B5QndZWEp6WldSYmEyVjVYU0E2SUZ0ZEtTNWpiMjVqWVhRb1czWmhiRjBwTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnY0dGeWMyVmtXMnRsZVYwZ1BTQndZWEp6WldSYmEyVjVYU0EvSUhCaGNuTmxaRnRyWlhsZElDc2dKeXdnSnlBcklIWmhiQ0E2SUhaaGJEdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDBwTzF4dVhHNGdJSEpsZEhWeWJpQndZWEp6WldRN1hHNTlPMXh1SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc0dktpcGNiaUFxSUZONWJuUmhZM1JwWXlCemRXZGhjaUJtYjNJZ2FXNTJiMnRwYm1jZ1lTQm1kVzVqZEdsdmJpQmhibVFnWlhod1lXNWthVzVuSUdGdUlHRnljbUY1SUdadmNpQmhjbWQxYldWdWRITXVYRzRnS2x4dUlDb2dRMjl0Ylc5dUlIVnpaU0JqWVhObElIZHZkV3hrSUdKbElIUnZJSFZ6WlNCZ1JuVnVZM1JwYjI0dWNISnZkRzkwZVhCbExtRndjR3g1WUM1Y2JpQXFYRzRnS2lBZ1lHQmdhbk5jYmlBcUlDQm1kVzVqZEdsdmJpQm1LSGdzSUhrc0lIb3BJSHQ5WEc0Z0tpQWdkbUZ5SUdGeVozTWdQU0JiTVN3Z01pd2dNMTA3WEc0Z0tpQWdaaTVoY0hCc2VTaHVkV3hzTENCaGNtZHpLVHRjYmlBcUlDQmdZR0JjYmlBcVhHNGdLaUJYYVhSb0lHQnpjSEpsWVdSZ0lIUm9hWE1nWlhoaGJYQnNaU0JqWVc0Z1ltVWdjbVV0ZDNKcGRIUmxiaTVjYmlBcVhHNGdLaUFnWUdCZ2FuTmNiaUFxSUNCemNISmxZV1FvWm5WdVkzUnBiMjRvZUN3Z2VTd2dlaWtnZTMwcEtGc3hMQ0F5TENBelhTazdYRzRnS2lBZ1lHQmdYRzRnS2x4dUlDb2dRSEJoY21GdElIdEdkVzVqZEdsdmJuMGdZMkZzYkdKaFkydGNiaUFxSUVCeVpYUjFjbTV6SUh0R2RXNWpkR2x2Ym4xY2JpQXFMMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUJ6Y0hKbFlXUW9ZMkZzYkdKaFkyc3BJSHRjYmlBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUhkeVlYQW9ZWEp5S1NCN1hHNGdJQ0FnY21WMGRYSnVJR05oYkd4aVlXTnJMbUZ3Y0d4NUtHNTFiR3dzSUdGeWNpazdYRzRnSUgwN1hHNTlPMXh1SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc1MllYSWdZbWx1WkNBOUlISmxjWFZwY21Vb0p5NHZhR1ZzY0dWeWN5OWlhVzVrSnlrN1hHNTJZWElnYVhOQ2RXWm1aWElnUFNCeVpYRjFhWEpsS0NkcGN5MWlkV1ptWlhJbktUdGNibHh1THlwbmJHOWlZV3dnZEc5VGRISnBibWM2ZEhKMVpTb3ZYRzVjYmk4dklIVjBhV3h6SUdseklHRWdiR2xpY21GeWVTQnZaaUJuWlc1bGNtbGpJR2hsYkhCbGNpQm1kVzVqZEdsdmJuTWdibTl1TFhOd1pXTnBabWxqSUhSdklHRjRhVzl6WEc1Y2JuWmhjaUIwYjFOMGNtbHVaeUE5SUU5aWFtVmpkQzV3Y205MGIzUjVjR1V1ZEc5VGRISnBibWM3WEc1Y2JpOHFLbHh1SUNvZ1JHVjBaWEp0YVc1bElHbG1JR0VnZG1Gc2RXVWdhWE1nWVc0Z1FYSnlZWGxjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdkbUZzSUZSb1pTQjJZV3gxWlNCMGJ5QjBaWE4wWEc0Z0tpQkFjbVYwZFhKdWN5QjdZbTl2YkdWaGJuMGdWSEoxWlNCcFppQjJZV3gxWlNCcGN5QmhiaUJCY25KaGVTd2diM1JvWlhKM2FYTmxJR1poYkhObFhHNGdLaTljYm1aMWJtTjBhVzl1SUdselFYSnlZWGtvZG1Gc0tTQjdYRzRnSUhKbGRIVnliaUIwYjFOMGNtbHVaeTVqWVd4c0tIWmhiQ2tnUFQwOUlDZGJiMkpxWldOMElFRnljbUY1WFNjN1hHNTlYRzVjYmk4cUtseHVJQ29nUkdWMFpYSnRhVzVsSUdsbUlHRWdkbUZzZFdVZ2FYTWdZVzRnUVhKeVlYbENkV1ptWlhKY2JpQXFYRzRnS2lCQWNHRnlZVzBnZTA5aWFtVmpkSDBnZG1Gc0lGUm9aU0IyWVd4MVpTQjBieUIwWlhOMFhHNGdLaUJBY21WMGRYSnVjeUI3WW05dmJHVmhibjBnVkhKMVpTQnBaaUIyWVd4MVpTQnBjeUJoYmlCQmNuSmhlVUoxWm1abGNpd2diM1JvWlhKM2FYTmxJR1poYkhObFhHNGdLaTljYm1aMWJtTjBhVzl1SUdselFYSnlZWGxDZFdabVpYSW9kbUZzS1NCN1hHNGdJSEpsZEhWeWJpQjBiMU4wY21sdVp5NWpZV3hzS0haaGJDa2dQVDA5SUNkYmIySnFaV04wSUVGeWNtRjVRblZtWm1WeVhTYzdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1JHVjBaWEp0YVc1bElHbG1JR0VnZG1Gc2RXVWdhWE1nWVNCR2IzSnRSR0YwWVZ4dUlDcGNiaUFxSUVCd1lYSmhiU0I3VDJKcVpXTjBmU0IyWVd3Z1ZHaGxJSFpoYkhWbElIUnZJSFJsYzNSY2JpQXFJRUJ5WlhSMWNtNXpJSHRpYjI5c1pXRnVmU0JVY25WbElHbG1JSFpoYkhWbElHbHpJR0Z1SUVadmNtMUVZWFJoTENCdmRHaGxjbmRwYzJVZ1ptRnNjMlZjYmlBcUwxeHVablZ1WTNScGIyNGdhWE5HYjNKdFJHRjBZU2gyWVd3cElIdGNiaUFnY21WMGRYSnVJQ2gwZVhCbGIyWWdSbTl5YlVSaGRHRWdJVDA5SUNkMWJtUmxabWx1WldRbktTQW1KaUFvZG1Gc0lHbHVjM1JoYm1ObGIyWWdSbTl5YlVSaGRHRXBPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFUmxkR1Z5YldsdVpTQnBaaUJoSUhaaGJIVmxJR2x6SUdFZ2RtbGxkeUJ2YmlCaGJpQkJjbkpoZVVKMVptWmxjbHh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQjJZV3dnVkdobElIWmhiSFZsSUhSdklIUmxjM1JjYmlBcUlFQnlaWFIxY201eklIdGliMjlzWldGdWZTQlVjblZsSUdsbUlIWmhiSFZsSUdseklHRWdkbWxsZHlCdmJpQmhiaUJCY25KaGVVSjFabVpsY2l3Z2IzUm9aWEozYVhObElHWmhiSE5sWEc0Z0tpOWNibVoxYm1OMGFXOXVJR2x6UVhKeVlYbENkV1ptWlhKV2FXVjNLSFpoYkNrZ2UxeHVJQ0IyWVhJZ2NtVnpkV3gwTzF4dUlDQnBaaUFvS0hSNWNHVnZaaUJCY25KaGVVSjFabVpsY2lBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUNZbUlDaEJjbkpoZVVKMVptWmxjaTVwYzFacFpYY3BLU0I3WEc0Z0lDQWdjbVZ6ZFd4MElEMGdRWEp5WVhsQ2RXWm1aWEl1YVhOV2FXVjNLSFpoYkNrN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2NtVnpkV3gwSUQwZ0tIWmhiQ2tnSmlZZ0tIWmhiQzVpZFdabVpYSXBJQ1ltSUNoMllXd3VZblZtWm1WeUlHbHVjM1JoYm1ObGIyWWdRWEp5WVhsQ2RXWm1aWElwTzF4dUlDQjlYRzRnSUhKbGRIVnliaUJ5WlhOMWJIUTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1JHVjBaWEp0YVc1bElHbG1JR0VnZG1Gc2RXVWdhWE1nWVNCVGRISnBibWRjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdkbUZzSUZSb1pTQjJZV3gxWlNCMGJ5QjBaWE4wWEc0Z0tpQkFjbVYwZFhKdWN5QjdZbTl2YkdWaGJuMGdWSEoxWlNCcFppQjJZV3gxWlNCcGN5QmhJRk4wY21sdVp5d2diM1JvWlhKM2FYTmxJR1poYkhObFhHNGdLaTljYm1aMWJtTjBhVzl1SUdselUzUnlhVzVuS0haaGJDa2dlMXh1SUNCeVpYUjFjbTRnZEhsd1pXOW1JSFpoYkNBOVBUMGdKM04wY21sdVp5YzdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1JHVjBaWEp0YVc1bElHbG1JR0VnZG1Gc2RXVWdhWE1nWVNCT2RXMWlaWEpjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdkbUZzSUZSb1pTQjJZV3gxWlNCMGJ5QjBaWE4wWEc0Z0tpQkFjbVYwZFhKdWN5QjdZbTl2YkdWaGJuMGdWSEoxWlNCcFppQjJZV3gxWlNCcGN5QmhJRTUxYldKbGNpd2diM1JvWlhKM2FYTmxJR1poYkhObFhHNGdLaTljYm1aMWJtTjBhVzl1SUdselRuVnRZbVZ5S0haaGJDa2dlMXh1SUNCeVpYUjFjbTRnZEhsd1pXOW1JSFpoYkNBOVBUMGdKMjUxYldKbGNpYzdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1JHVjBaWEp0YVc1bElHbG1JR0VnZG1Gc2RXVWdhWE1nZFc1a1pXWnBibVZrWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJSFpoYkNCVWFHVWdkbUZzZFdVZ2RHOGdkR1Z6ZEZ4dUlDb2dRSEpsZEhWeWJuTWdlMkp2YjJ4bFlXNTlJRlJ5ZFdVZ2FXWWdkR2hsSUhaaGJIVmxJR2x6SUhWdVpHVm1hVzVsWkN3Z2IzUm9aWEozYVhObElHWmhiSE5sWEc0Z0tpOWNibVoxYm1OMGFXOXVJR2x6Vlc1a1pXWnBibVZrS0haaGJDa2dlMXh1SUNCeVpYUjFjbTRnZEhsd1pXOW1JSFpoYkNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2M3WEc1OVhHNWNiaThxS2x4dUlDb2dSR1YwWlhKdGFXNWxJR2xtSUdFZ2RtRnNkV1VnYVhNZ1lXNGdUMkpxWldOMFhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUhaaGJDQlVhR1VnZG1Gc2RXVWdkRzhnZEdWemRGeHVJQ29nUUhKbGRIVnlibk1nZTJKdmIyeGxZVzU5SUZSeWRXVWdhV1lnZG1Gc2RXVWdhWE1nWVc0Z1QySnFaV04wTENCdmRHaGxjbmRwYzJVZ1ptRnNjMlZjYmlBcUwxeHVablZ1WTNScGIyNGdhWE5QWW1wbFkzUW9kbUZzS1NCN1hHNGdJSEpsZEhWeWJpQjJZV3dnSVQwOUlHNTFiR3dnSmlZZ2RIbHdaVzltSUhaaGJDQTlQVDBnSjI5aWFtVmpkQ2M3WEc1OVhHNWNiaThxS2x4dUlDb2dSR1YwWlhKdGFXNWxJR2xtSUdFZ2RtRnNkV1VnYVhNZ1lTQkVZWFJsWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJSFpoYkNCVWFHVWdkbUZzZFdVZ2RHOGdkR1Z6ZEZ4dUlDb2dRSEpsZEhWeWJuTWdlMkp2YjJ4bFlXNTlJRlJ5ZFdVZ2FXWWdkbUZzZFdVZ2FYTWdZU0JFWVhSbExDQnZkR2hsY25kcGMyVWdabUZzYzJWY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYVhORVlYUmxLSFpoYkNrZ2UxeHVJQ0J5WlhSMWNtNGdkRzlUZEhKcGJtY3VZMkZzYkNoMllXd3BJRDA5UFNBblcyOWlhbVZqZENCRVlYUmxYU2M3WEc1OVhHNWNiaThxS2x4dUlDb2dSR1YwWlhKdGFXNWxJR2xtSUdFZ2RtRnNkV1VnYVhNZ1lTQkdhV3hsWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJSFpoYkNCVWFHVWdkbUZzZFdVZ2RHOGdkR1Z6ZEZ4dUlDb2dRSEpsZEhWeWJuTWdlMkp2YjJ4bFlXNTlJRlJ5ZFdVZ2FXWWdkbUZzZFdVZ2FYTWdZU0JHYVd4bExDQnZkR2hsY25kcGMyVWdabUZzYzJWY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYVhOR2FXeGxLSFpoYkNrZ2UxeHVJQ0J5WlhSMWNtNGdkRzlUZEhKcGJtY3VZMkZzYkNoMllXd3BJRDA5UFNBblcyOWlhbVZqZENCR2FXeGxYU2M3WEc1OVhHNWNiaThxS2x4dUlDb2dSR1YwWlhKdGFXNWxJR2xtSUdFZ2RtRnNkV1VnYVhNZ1lTQkNiRzlpWEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJSFpoYkNCVWFHVWdkbUZzZFdVZ2RHOGdkR1Z6ZEZ4dUlDb2dRSEpsZEhWeWJuTWdlMkp2YjJ4bFlXNTlJRlJ5ZFdVZ2FXWWdkbUZzZFdVZ2FYTWdZU0JDYkc5aUxDQnZkR2hsY25kcGMyVWdabUZzYzJWY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYVhOQ2JHOWlLSFpoYkNrZ2UxeHVJQ0J5WlhSMWNtNGdkRzlUZEhKcGJtY3VZMkZzYkNoMllXd3BJRDA5UFNBblcyOWlhbVZqZENCQ2JHOWlYU2M3WEc1OVhHNWNiaThxS2x4dUlDb2dSR1YwWlhKdGFXNWxJR2xtSUdFZ2RtRnNkV1VnYVhNZ1lTQkdkVzVqZEdsdmJseHVJQ3BjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCMllXd2dWR2hsSUhaaGJIVmxJSFJ2SUhSbGMzUmNiaUFxSUVCeVpYUjFjbTV6SUh0aWIyOXNaV0Z1ZlNCVWNuVmxJR2xtSUhaaGJIVmxJR2x6SUdFZ1JuVnVZM1JwYjI0c0lHOTBhR1Z5ZDJselpTQm1ZV3h6WlZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJwYzBaMWJtTjBhVzl1S0haaGJDa2dlMXh1SUNCeVpYUjFjbTRnZEc5VGRISnBibWN1WTJGc2JDaDJZV3dwSUQwOVBTQW5XMjlpYW1WamRDQkdkVzVqZEdsdmJsMG5PMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFUmxkR1Z5YldsdVpTQnBaaUJoSUhaaGJIVmxJR2x6SUdFZ1UzUnlaV0Z0WEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJSFpoYkNCVWFHVWdkbUZzZFdVZ2RHOGdkR1Z6ZEZ4dUlDb2dRSEpsZEhWeWJuTWdlMkp2YjJ4bFlXNTlJRlJ5ZFdVZ2FXWWdkbUZzZFdVZ2FYTWdZU0JUZEhKbFlXMHNJRzkwYUdWeWQybHpaU0JtWVd4elpWeHVJQ292WEc1bWRXNWpkR2x2YmlCcGMxTjBjbVZoYlNoMllXd3BJSHRjYmlBZ2NtVjBkWEp1SUdselQySnFaV04wS0haaGJDa2dKaVlnYVhOR2RXNWpkR2x2YmloMllXd3VjR2x3WlNrN1hHNTlYRzVjYmk4cUtseHVJQ29nUkdWMFpYSnRhVzVsSUdsbUlHRWdkbUZzZFdVZ2FYTWdZU0JWVWt4VFpXRnlZMmhRWVhKaGJYTWdiMkpxWldOMFhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUhaaGJDQlVhR1VnZG1Gc2RXVWdkRzhnZEdWemRGeHVJQ29nUUhKbGRIVnlibk1nZTJKdmIyeGxZVzU5SUZSeWRXVWdhV1lnZG1Gc2RXVWdhWE1nWVNCVlVreFRaV0Z5WTJoUVlYSmhiWE1nYjJKcVpXTjBMQ0J2ZEdobGNuZHBjMlVnWm1Gc2MyVmNiaUFxTDF4dVpuVnVZM1JwYjI0Z2FYTlZVa3hUWldGeVkyaFFZWEpoYlhNb2RtRnNLU0I3WEc0Z0lISmxkSFZ5YmlCMGVYQmxiMllnVlZKTVUyVmhjbU5vVUdGeVlXMXpJQ0U5UFNBbmRXNWtaV1pwYm1Wa0p5QW1KaUIyWVd3Z2FXNXpkR0Z1WTJWdlppQlZVa3hUWldGeVkyaFFZWEpoYlhNN1hHNTlYRzVjYmk4cUtseHVJQ29nVkhKcGJTQmxlR05sYzNNZ2QyaHBkR1Z6Y0dGalpTQnZabVlnZEdobElHSmxaMmx1Ym1sdVp5QmhibVFnWlc1a0lHOW1JR0VnYzNSeWFXNW5YRzRnS2x4dUlDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlITjBjaUJVYUdVZ1UzUnlhVzVuSUhSdklIUnlhVzFjYmlBcUlFQnlaWFIxY201eklIdFRkSEpwYm1kOUlGUm9aU0JUZEhKcGJtY2dabkpsWldRZ2IyWWdaWGhqWlhOeklIZG9hWFJsYzNCaFkyVmNiaUFxTDF4dVpuVnVZM1JwYjI0Z2RISnBiU2h6ZEhJcElIdGNiaUFnY21WMGRYSnVJSE4wY2k1eVpYQnNZV05sS0M5ZVhGeHpLaThzSUNjbktTNXlaWEJzWVdObEtDOWNYSE1xSkM4c0lDY25LVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkVaWFJsY20xcGJtVWdhV1lnZDJVbmNtVWdjblZ1Ym1sdVp5QnBiaUJoSUhOMFlXNWtZWEprSUdKeWIzZHpaWElnWlc1MmFYSnZibTFsYm5SY2JpQXFYRzRnS2lCVWFHbHpJR0ZzYkc5M2N5QmhlR2x2Y3lCMGJ5QnlkVzRnYVc0Z1lTQjNaV0lnZDI5eWEyVnlMQ0JoYm1RZ2NtVmhZM1F0Ym1GMGFYWmxMbHh1SUNvZ1FtOTBhQ0JsYm5acGNtOXViV1Z1ZEhNZ2MzVndjRzl5ZENCWVRVeElkSFJ3VW1WeGRXVnpkQ3dnWW5WMElHNXZkQ0JtZFd4c2VTQnpkR0Z1WkdGeVpDQm5iRzlpWVd4ekxseHVJQ3BjYmlBcUlIZGxZaUIzYjNKclpYSnpPbHh1SUNvZ0lIUjVjR1Z2WmlCM2FXNWtiM2NnTFQ0Z2RXNWtaV1pwYm1Wa1hHNGdLaUFnZEhsd1pXOW1JR1J2WTNWdFpXNTBJQzArSUhWdVpHVm1hVzVsWkZ4dUlDcGNiaUFxSUhKbFlXTjBMVzVoZEdsMlpUcGNiaUFxSUNCdVlYWnBaMkYwYjNJdWNISnZaSFZqZENBdFBpQW5VbVZoWTNST1lYUnBkbVVuWEc0Z0tpOWNibVoxYm1OMGFXOXVJR2x6VTNSaGJtUmhjbVJDY205M2MyVnlSVzUyS0NrZ2UxeHVJQ0JwWmlBb2RIbHdaVzltSUc1aGRtbG5ZWFJ2Y2lBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnSmlZZ2JtRjJhV2RoZEc5eUxuQnliMlIxWTNRZ1BUMDlJQ2RTWldGamRFNWhkR2wyWlNjcElIdGNiaUFnSUNCeVpYUjFjbTRnWm1Gc2MyVTdYRzRnSUgxY2JpQWdjbVYwZFhKdUlDaGNiaUFnSUNCMGVYQmxiMllnZDJsdVpHOTNJQ0U5UFNBbmRXNWtaV1pwYm1Wa0p5QW1KbHh1SUNBZ0lIUjVjR1Z2WmlCa2IyTjFiV1Z1ZENBaFBUMGdKM1Z1WkdWbWFXNWxaQ2RjYmlBZ0tUdGNibjFjYmx4dUx5b3FYRzRnS2lCSmRHVnlZWFJsSUc5MlpYSWdZVzRnUVhKeVlYa2diM0lnWVc0Z1QySnFaV04wSUdsdWRtOXJhVzVuSUdFZ1puVnVZM1JwYjI0Z1ptOXlJR1ZoWTJnZ2FYUmxiUzVjYmlBcVhHNGdLaUJKWmlCZ2IySnFZQ0JwY3lCaGJpQkJjbkpoZVNCallXeHNZbUZqYXlCM2FXeHNJR0psSUdOaGJHeGxaQ0J3WVhOemFXNW5YRzRnS2lCMGFHVWdkbUZzZFdVc0lHbHVaR1Y0TENCaGJtUWdZMjl0Y0d4bGRHVWdZWEp5WVhrZ1ptOXlJR1ZoWTJnZ2FYUmxiUzVjYmlBcVhHNGdLaUJKWmlBbmIySnFKeUJwY3lCaGJpQlBZbXBsWTNRZ1kyRnNiR0poWTJzZ2QybHNiQ0JpWlNCallXeHNaV1FnY0dGemMybHVaMXh1SUNvZ2RHaGxJSFpoYkhWbExDQnJaWGtzSUdGdVpDQmpiMjF3YkdWMFpTQnZZbXBsWTNRZ1ptOXlJR1ZoWTJnZ2NISnZjR1Z5ZEhrdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I4UVhKeVlYbDlJRzlpYWlCVWFHVWdiMkpxWldOMElIUnZJR2wwWlhKaGRHVmNiaUFxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdadUlGUm9aU0JqWVd4c1ltRmpheUIwYnlCcGJuWnZhMlVnWm05eUlHVmhZMmdnYVhSbGJWeHVJQ292WEc1bWRXNWpkR2x2YmlCbWIzSkZZV05vS0c5aWFpd2dabTRwSUh0Y2JpQWdMeThnUkc5dUozUWdZbTkwYUdWeUlHbG1JRzV2SUhaaGJIVmxJSEJ5YjNacFpHVmtYRzRnSUdsbUlDaHZZbW9nUFQwOUlHNTFiR3dnZkh3Z2RIbHdaVzltSUc5aWFpQTlQVDBnSjNWdVpHVm1hVzVsWkNjcElIdGNiaUFnSUNCeVpYUjFjbTQ3WEc0Z0lIMWNibHh1SUNBdkx5QkdiM0pqWlNCaGJpQmhjbkpoZVNCcFppQnViM1FnWVd4eVpXRmtlU0J6YjIxbGRHaHBibWNnYVhSbGNtRmliR1ZjYmlBZ2FXWWdLSFI1Y0dWdlppQnZZbW9nSVQwOUlDZHZZbXBsWTNRbktTQjdYRzRnSUNBZ0x5cGxjMnhwYm5RZ2JtOHRjR0Z5WVcwdGNtVmhjM05wWjI0Nk1Db3ZYRzRnSUNBZ2IySnFJRDBnVzI5aWFsMDdYRzRnSUgxY2JseHVJQ0JwWmlBb2FYTkJjbkpoZVNodlltb3BLU0I3WEc0Z0lDQWdMeThnU1hSbGNtRjBaU0J2ZG1WeUlHRnljbUY1SUhaaGJIVmxjMXh1SUNBZ0lHWnZjaUFvZG1GeUlHa2dQU0F3TENCc0lEMGdiMkpxTG14bGJtZDBhRHNnYVNBOElHdzdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ1ptNHVZMkZzYkNodWRXeHNMQ0J2WW1wYmFWMHNJR2tzSUc5aWFpazdYRzRnSUNBZ2ZWeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDOHZJRWwwWlhKaGRHVWdiM1psY2lCdlltcGxZM1FnYTJWNWMxeHVJQ0FnSUdadmNpQW9kbUZ5SUd0bGVTQnBiaUJ2WW1vcElIdGNiaUFnSUNBZ0lHbG1JQ2hQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMbWhoYzA5M2JsQnliM0JsY25SNUxtTmhiR3dvYjJKcUxDQnJaWGtwS1NCN1hHNGdJQ0FnSUNBZ0lHWnVMbU5oYkd3b2JuVnNiQ3dnYjJKcVcydGxlVjBzSUd0bGVTd2diMkpxS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmx4dUx5b3FYRzRnS2lCQlkyTmxjSFJ6SUhaaGNtRnlaM01nWlhod1pXTjBhVzVuSUdWaFkyZ2dZWEpuZFcxbGJuUWdkRzhnWW1VZ1lXNGdiMkpxWldOMExDQjBhR1Z1WEc0Z0tpQnBiVzExZEdGaWJIa2diV1Z5WjJWeklIUm9aU0J3Y205d1pYSjBhV1Z6SUc5bUlHVmhZMmdnYjJKcVpXTjBJR0Z1WkNCeVpYUjFjbTV6SUhKbGMzVnNkQzVjYmlBcVhHNGdLaUJYYUdWdUlHMTFiSFJwY0d4bElHOWlhbVZqZEhNZ1kyOXVkR0ZwYmlCMGFHVWdjMkZ0WlNCclpYa2dkR2hsSUd4aGRHVnlJRzlpYW1WamRDQnBibHh1SUNvZ2RHaGxJR0Z5WjNWdFpXNTBjeUJzYVhOMElIZHBiR3dnZEdGclpTQndjbVZqWldSbGJtTmxMbHh1SUNwY2JpQXFJRVY0WVcxd2JHVTZYRzRnS2x4dUlDb2dZR0JnYW5OY2JpQXFJSFpoY2lCeVpYTjFiSFFnUFNCdFpYSm5aU2g3Wm05dk9pQXhNak45TENCN1ptOXZPaUEwTlRaOUtUdGNiaUFxSUdOdmJuTnZiR1V1Ykc5bktISmxjM1ZzZEM1bWIyOHBPeUF2THlCdmRYUndkWFJ6SURRMU5seHVJQ29nWUdCZ1hHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUc5aWFqRWdUMkpxWldOMElIUnZJRzFsY21kbFhHNGdLaUJBY21WMGRYSnVjeUI3VDJKcVpXTjBmU0JTWlhOMWJIUWdiMllnWVd4c0lHMWxjbWRsSUhCeWIzQmxjblJwWlhOY2JpQXFMMXh1Wm5WdVkzUnBiMjRnYldWeVoyVW9MeW9nYjJKcU1Td2diMkpxTWl3Z2IySnFNeXdnTGk0dUlDb3ZLU0I3WEc0Z0lIWmhjaUJ5WlhOMWJIUWdQU0I3ZlR0Y2JpQWdablZ1WTNScGIyNGdZWE56YVdkdVZtRnNkV1VvZG1Gc0xDQnJaWGtwSUh0Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUhKbGMzVnNkRnRyWlhsZElEMDlQU0FuYjJKcVpXTjBKeUFtSmlCMGVYQmxiMllnZG1Gc0lEMDlQU0FuYjJKcVpXTjBKeWtnZTF4dUlDQWdJQ0FnY21WemRXeDBXMnRsZVYwZ1BTQnRaWEpuWlNoeVpYTjFiSFJiYTJWNVhTd2dkbUZzS1R0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdjbVZ6ZFd4MFcydGxlVjBnUFNCMllXdzdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdabTl5SUNoMllYSWdhU0E5SURBc0lHd2dQU0JoY21kMWJXVnVkSE11YkdWdVozUm9PeUJwSUR3Z2JEc2dhU3NyS1NCN1hHNGdJQ0FnWm05eVJXRmphQ2hoY21kMWJXVnVkSE5iYVYwc0lHRnpjMmxuYmxaaGJIVmxLVHRjYmlBZ2ZWeHVJQ0J5WlhSMWNtNGdjbVZ6ZFd4ME8xeHVmVnh1WEc0dktpcGNiaUFxSUVWNGRHVnVaSE1nYjJKcVpXTjBJR0VnWW5rZ2JYVjBZV0pzZVNCaFpHUnBibWNnZEc4Z2FYUWdkR2hsSUhCeWIzQmxjblJwWlhNZ2IyWWdiMkpxWldOMElHSXVYRzRnS2x4dUlDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlHRWdWR2hsSUc5aWFtVmpkQ0IwYnlCaVpTQmxlSFJsYm1SbFpGeHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJR0lnVkdobElHOWlhbVZqZENCMGJ5QmpiM0I1SUhCeWIzQmxjblJwWlhNZ1puSnZiVnh1SUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUhSb2FYTkJjbWNnVkdobElHOWlhbVZqZENCMGJ5QmlhVzVrSUdaMWJtTjBhVzl1SUhSdlhHNGdLaUJBY21WMGRYSnVJSHRQWW1wbFkzUjlJRlJvWlNCeVpYTjFiSFJwYm1jZ2RtRnNkV1VnYjJZZ2IySnFaV04wSUdGY2JpQXFMMXh1Wm5WdVkzUnBiMjRnWlhoMFpXNWtLR0VzSUdJc0lIUm9hWE5CY21jcElIdGNiaUFnWm05eVJXRmphQ2hpTENCbWRXNWpkR2x2YmlCaGMzTnBaMjVXWVd4MVpTaDJZV3dzSUd0bGVTa2dlMXh1SUNBZ0lHbG1JQ2gwYUdselFYSm5JQ1ltSUhSNWNHVnZaaUIyWVd3Z1BUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0FnSUdGYmEyVjVYU0E5SUdKcGJtUW9kbUZzTENCMGFHbHpRWEpuS1R0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdZVnRyWlhsZElEMGdkbUZzTzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzRnSUhKbGRIVnliaUJoTzF4dWZWeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSHRjYmlBZ2FYTkJjbkpoZVRvZ2FYTkJjbkpoZVN4Y2JpQWdhWE5CY25KaGVVSjFabVpsY2pvZ2FYTkJjbkpoZVVKMVptWmxjaXhjYmlBZ2FYTkNkV1ptWlhJNklHbHpRblZtWm1WeUxGeHVJQ0JwYzBadmNtMUVZWFJoT2lCcGMwWnZjbTFFWVhSaExGeHVJQ0JwYzBGeWNtRjVRblZtWm1WeVZtbGxkem9nYVhOQmNuSmhlVUoxWm1abGNsWnBaWGNzWEc0Z0lHbHpVM1J5YVc1bk9pQnBjMU4wY21sdVp5eGNiaUFnYVhOT2RXMWlaWEk2SUdselRuVnRZbVZ5TEZ4dUlDQnBjMDlpYW1WamREb2dhWE5QWW1wbFkzUXNYRzRnSUdselZXNWtaV1pwYm1Wa09pQnBjMVZ1WkdWbWFXNWxaQ3hjYmlBZ2FYTkVZWFJsT2lCcGMwUmhkR1VzWEc0Z0lHbHpSbWxzWlRvZ2FYTkdhV3hsTEZ4dUlDQnBjMEpzYjJJNklHbHpRbXh2WWl4Y2JpQWdhWE5HZFc1amRHbHZiam9nYVhOR2RXNWpkR2x2Yml4Y2JpQWdhWE5UZEhKbFlXMDZJR2x6VTNSeVpXRnRMRnh1SUNCcGMxVlNURk5sWVhKamFGQmhjbUZ0Y3pvZ2FYTlZVa3hUWldGeVkyaFFZWEpoYlhNc1hHNGdJR2x6VTNSaGJtUmhjbVJDY205M2MyVnlSVzUyT2lCcGMxTjBZVzVrWVhKa1FuSnZkM05sY2tWdWRpeGNiaUFnWm05eVJXRmphRG9nWm05eVJXRmphQ3hjYmlBZ2JXVnlaMlU2SUcxbGNtZGxMRnh1SUNCbGVIUmxibVE2SUdWNGRHVnVaQ3hjYmlBZ2RISnBiVG9nZEhKcGJWeHVmVHRjYmlJc0lpOHFJVnh1SUNvZ1JHVjBaWEp0YVc1bElHbG1JR0Z1SUc5aWFtVmpkQ0JwY3lCaElFSjFabVpsY2x4dUlDcGNiaUFxSUVCaGRYUm9iM0lnSUNCR1pYSnZjM01nUVdKdmRXdG9ZV1JwYW1Wb0lEeG9kSFJ3Y3pvdkwyWmxjbTl6Y3k1dmNtYytYRzRnS2lCQWJHbGpaVzV6WlNBZ1RVbFVYRzRnS2k5Y2JseHVMeThnVkdobElGOXBjMEoxWm1abGNpQmphR1ZqYXlCcGN5Qm1iM0lnVTJGbVlYSnBJRFV0TnlCemRYQndiM0owTENCaVpXTmhkWE5sSUdsMEozTWdiV2x6YzJsdVoxeHVMeThnVDJKcVpXTjBMbkJ5YjNSdmRIbHdaUzVqYjI1emRISjFZM1J2Y2k0Z1VtVnRiM1psSUhSb2FYTWdaWFpsYm5SMVlXeHNlVnh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUFvYjJKcUtTQjdYRzRnSUhKbGRIVnliaUJ2WW1vZ0lUMGdiblZzYkNBbUppQW9hWE5DZFdabVpYSW9iMkpxS1NCOGZDQnBjMU5zYjNkQ2RXWm1aWElvYjJKcUtTQjhmQ0FoSVc5aWFpNWZhWE5DZFdabVpYSXBYRzU5WEc1Y2JtWjFibU4wYVc5dUlHbHpRblZtWm1WeUlDaHZZbW9wSUh0Y2JpQWdjbVYwZFhKdUlDRWhiMkpxTG1OdmJuTjBjblZqZEc5eUlDWW1JSFI1Y0dWdlppQnZZbW91WTI5dWMzUnlkV04wYjNJdWFYTkNkV1ptWlhJZ1BUMDlJQ2RtZFc1amRHbHZiaWNnSmlZZ2IySnFMbU52Ym5OMGNuVmpkRzl5TG1selFuVm1abVZ5S0c5aWFpbGNibjFjYmx4dUx5OGdSbTl5SUU1dlpHVWdkakF1TVRBZ2MzVndjRzl5ZEM0Z1VtVnRiM1psSUhSb2FYTWdaWFpsYm5SMVlXeHNlUzVjYm1aMWJtTjBhVzl1SUdselUyeHZkMEoxWm1abGNpQW9iMkpxS1NCN1hHNGdJSEpsZEhWeWJpQjBlWEJsYjJZZ2IySnFMbkpsWVdSR2JHOWhkRXhGSUQwOVBTQW5ablZ1WTNScGIyNG5JQ1ltSUhSNWNHVnZaaUJ2WW1vdWMyeHBZMlVnUFQwOUlDZG1kVzVqZEdsdmJpY2dKaVlnYVhOQ2RXWm1aWElvYjJKcUxuTnNhV05sS0RBc0lEQXBLVnh1ZlZ4dUlpd2lMeThnYzJocGJTQm1iM0lnZFhOcGJtY2djSEp2WTJWemN5QnBiaUJpY205M2MyVnlYRzUyWVhJZ2NISnZZMlZ6Y3lBOUlHMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ2UzMDdYRzVjYmk4dklHTmhZMmhsWkNCbWNtOXRJSGRvWVhSbGRtVnlJR2RzYjJKaGJDQnBjeUJ3Y21WelpXNTBJSE52SUhSb1lYUWdkR1Z6ZENCeWRXNXVaWEp6SUhSb1lYUWdjM1IxWWlCcGRGeHVMeThnWkc5dUozUWdZbkpsWVdzZ2RHaHBibWR6TGlBZ1FuVjBJSGRsSUc1bFpXUWdkRzhnZDNKaGNDQnBkQ0JwYmlCaElIUnllU0JqWVhSamFDQnBiaUJqWVhObElHbDBJR2x6WEc0dkx5QjNjbUZ3Y0dWa0lHbHVJSE4wY21samRDQnRiMlJsSUdOdlpHVWdkMmhwWTJnZ1pHOWxjMjRuZENCa1pXWnBibVVnWVc1NUlHZHNiMkpoYkhNdUlDQkpkQ2R6SUdsdWMybGtaU0JoWEc0dkx5Qm1kVzVqZEdsdmJpQmlaV05oZFhObElIUnllUzlqWVhSamFHVnpJR1JsYjNCMGFXMXBlbVVnYVc0Z1kyVnlkR0ZwYmlCbGJtZHBibVZ6TGx4dVhHNTJZWElnWTJGamFHVmtVMlYwVkdsdFpXOTFkRHRjYm5aaGNpQmpZV05vWldSRGJHVmhjbFJwYldWdmRYUTdYRzVjYm1aMWJtTjBhVzl1SUdSbFptRjFiSFJUWlhSVWFXMXZkWFFvS1NCN1hHNGdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ2R6WlhSVWFXMWxiM1YwSUdoaGN5QnViM1FnWW1WbGJpQmtaV1pwYm1Wa0p5azdYRzU5WEc1bWRXNWpkR2x2YmlCa1pXWmhkV3gwUTJ4bFlYSlVhVzFsYjNWMElDZ3BJSHRjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0oyTnNaV0Z5VkdsdFpXOTFkQ0JvWVhNZ2JtOTBJR0psWlc0Z1pHVm1hVzVsWkNjcE8xeHVmVnh1S0daMWJtTjBhVzl1SUNncElIdGNiaUFnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhObGRGUnBiV1Z2ZFhRZ1BUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR05oWTJobFpGTmxkRlJwYldWdmRYUWdQU0J6WlhSVWFXMWxiM1YwTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZqYUdWa1UyVjBWR2x0Wlc5MWRDQTlJR1JsWm1GMWJIUlRaWFJVYVcxdmRYUTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlJR05oZEdOb0lDaGxLU0I3WEc0Z0lDQWdJQ0FnSUdOaFkyaGxaRk5sZEZScGJXVnZkWFFnUFNCa1pXWmhkV3gwVTJWMFZHbHRiM1YwTzF4dUlDQWdJSDFjYmlBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHTnNaV0Z5VkdsdFpXOTFkQ0E5UFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyRmphR1ZrUTJ4bFlYSlVhVzFsYjNWMElEMGdZMnhsWVhKVWFXMWxiM1YwTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMkZqYUdWa1EyeGxZWEpVYVcxbGIzVjBJRDBnWkdWbVlYVnNkRU5zWldGeVZHbHRaVzkxZER0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgwZ1kyRjBZMmdnS0dVcElIdGNiaUFnSUNBZ0lDQWdZMkZqYUdWa1EyeGxZWEpVYVcxbGIzVjBJRDBnWkdWbVlYVnNkRU5zWldGeVZHbHRaVzkxZER0Y2JpQWdJQ0I5WEc1OUlDZ3BLVnh1Wm5WdVkzUnBiMjRnY25WdVZHbHRaVzkxZENobWRXNHBJSHRjYmlBZ0lDQnBaaUFvWTJGamFHVmtVMlYwVkdsdFpXOTFkQ0E5UFQwZ2MyVjBWR2x0Wlc5MWRDa2dlMXh1SUNBZ0lDQWdJQ0F2TDI1dmNtMWhiQ0JsYm5acGNtOXRaVzUwY3lCcGJpQnpZVzVsSUhOcGRIVmhkR2x2Ym5OY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhObGRGUnBiV1Z2ZFhRb1puVnVMQ0F3S1R0Y2JpQWdJQ0I5WEc0Z0lDQWdMeThnYVdZZ2MyVjBWR2x0Wlc5MWRDQjNZWE51SjNRZ1lYWmhhV3hoWW14bElHSjFkQ0IzWVhNZ2JHRjBkR1Z5SUdSbFptbHVaV1JjYmlBZ0lDQnBaaUFvS0dOaFkyaGxaRk5sZEZScGJXVnZkWFFnUFQwOUlHUmxabUYxYkhSVFpYUlVhVzF2ZFhRZ2ZId2dJV05oWTJobFpGTmxkRlJwYldWdmRYUXBJQ1ltSUhObGRGUnBiV1Z2ZFhRcElIdGNiaUFnSUNBZ0lDQWdZMkZqYUdWa1UyVjBWR2x0Wlc5MWRDQTlJSE5sZEZScGJXVnZkWFE3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6WlhSVWFXMWxiM1YwS0daMWJpd2dNQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lIUnllU0I3WEc0Z0lDQWdJQ0FnSUM4dklIZG9aVzRnZDJobGJpQnpiMjFsWW05a2VTQm9ZWE1nYzJOeVpYZGxaQ0IzYVhSb0lITmxkRlJwYldWdmRYUWdZblYwSUc1dklFa3VSUzRnYldGa1pHNWxjM05jYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR05oWTJobFpGTmxkRlJwYldWdmRYUW9ablZ1TENBd0tUdGNiaUFnSUNCOUlHTmhkR05vS0dVcGUxeHVJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnVjJobGJpQjNaU0JoY21VZ2FXNGdTUzVGTGlCaWRYUWdkR2hsSUhOamNtbHdkQ0JvWVhNZ1ltVmxiaUJsZG1Gc1pXUWdjMjhnU1M1RkxpQmtiMlZ6YmlkMElIUnlkWE4wSUhSb1pTQm5iRzlpWVd3Z2IySnFaV04wSUhkb1pXNGdZMkZzYkdWa0lHNXZjbTFoYkd4NVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMkZqYUdWa1UyVjBWR2x0Wlc5MWRDNWpZV3hzS0c1MWJHd3NJR1oxYml3Z01DazdYRzRnSUNBZ0lDQWdJSDBnWTJGMFkyZ29aU2w3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJ6WVcxbElHRnpJR0ZpYjNabElHSjFkQ0IzYUdWdUlHbDBKM01nWVNCMlpYSnphVzl1SUc5bUlFa3VSUzRnZEdoaGRDQnRkWE4wSUdoaGRtVWdkR2hsSUdkc2IySmhiQ0J2WW1wbFkzUWdabTl5SUNkMGFHbHpKeXdnYUc5d1puVnNiSGtnYjNWeUlHTnZiblJsZUhRZ1kyOXljbVZqZENCdmRHaGxjbmRwYzJVZ2FYUWdkMmxzYkNCMGFISnZkeUJoSUdkc2IySmhiQ0JsY25KdmNseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR05oWTJobFpGTmxkRlJwYldWdmRYUXVZMkZzYkNoMGFHbHpMQ0JtZFc0c0lEQXBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc1Y2JuMWNibVoxYm1OMGFXOXVJSEoxYmtOc1pXRnlWR2x0Wlc5MWRDaHRZWEpyWlhJcElIdGNiaUFnSUNCcFppQW9ZMkZqYUdWa1EyeGxZWEpVYVcxbGIzVjBJRDA5UFNCamJHVmhjbFJwYldWdmRYUXBJSHRjYmlBZ0lDQWdJQ0FnTHk5dWIzSnRZV3dnWlc1MmFYSnZiV1Z1ZEhNZ2FXNGdjMkZ1WlNCemFYUjFZWFJwYjI1elhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCamJHVmhjbFJwYldWdmRYUW9iV0Z5YTJWeUtUdGNiaUFnSUNCOVhHNGdJQ0FnTHk4Z2FXWWdZMnhsWVhKVWFXMWxiM1YwSUhkaGMyNG5kQ0JoZG1GcGJHRmliR1VnWW5WMElIZGhjeUJzWVhSMFpYSWdaR1ZtYVc1bFpGeHVJQ0FnSUdsbUlDZ29ZMkZqYUdWa1EyeGxZWEpVYVcxbGIzVjBJRDA5UFNCa1pXWmhkV3gwUTJ4bFlYSlVhVzFsYjNWMElIeDhJQ0ZqWVdOb1pXUkRiR1ZoY2xScGJXVnZkWFFwSUNZbUlHTnNaV0Z5VkdsdFpXOTFkQ2tnZTF4dUlDQWdJQ0FnSUNCallXTm9aV1JEYkdWaGNsUnBiV1Z2ZFhRZ1BTQmpiR1ZoY2xScGJXVnZkWFE3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJqYkdWaGNsUnBiV1Z2ZFhRb2JXRnlhMlZ5S1R0Y2JpQWdJQ0I5WEc0Z0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ0x5OGdkMmhsYmlCM2FHVnVJSE52YldWaWIyUjVJR2hoY3lCelkzSmxkMlZrSUhkcGRHZ2djMlYwVkdsdFpXOTFkQ0JpZFhRZ2JtOGdTUzVGTGlCdFlXUmtibVZ6YzF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWTJGamFHVmtRMnhsWVhKVWFXMWxiM1YwS0cxaGNtdGxjaWs3WEc0Z0lDQWdmU0JqWVhSamFDQW9aU2w3WEc0Z0lDQWdJQ0FnSUhSeWVTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QlhhR1Z1SUhkbElHRnlaU0JwYmlCSkxrVXVJR0oxZENCMGFHVWdjMk55YVhCMElHaGhjeUJpWldWdUlHVjJZV3hsWkNCemJ5QkpMa1V1SUdSdlpYTnVKM1FnSUhSeWRYTjBJSFJvWlNCbmJHOWlZV3dnYjJKcVpXTjBJSGRvWlc0Z1kyRnNiR1ZrSUc1dmNtMWhiR3g1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyRmphR1ZrUTJ4bFlYSlVhVzFsYjNWMExtTmhiR3dvYm5Wc2JDd2diV0Z5YTJWeUtUdGNiaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9aU2w3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJ6WVcxbElHRnpJR0ZpYjNabElHSjFkQ0IzYUdWdUlHbDBKM01nWVNCMlpYSnphVzl1SUc5bUlFa3VSUzRnZEdoaGRDQnRkWE4wSUdoaGRtVWdkR2hsSUdkc2IySmhiQ0J2WW1wbFkzUWdabTl5SUNkMGFHbHpKeXdnYUc5d1puVnNiSGtnYjNWeUlHTnZiblJsZUhRZ1kyOXljbVZqZENCdmRHaGxjbmRwYzJVZ2FYUWdkMmxzYkNCMGFISnZkeUJoSUdkc2IySmhiQ0JsY25KdmNpNWNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklGTnZiV1VnZG1WeWMybHZibk1nYjJZZ1NTNUZMaUJvWVhabElHUnBabVpsY21WdWRDQnlkV3hsY3lCbWIzSWdZMnhsWVhKVWFXMWxiM1YwSUhaeklITmxkRlJwYldWdmRYUmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqWVdOb1pXUkRiR1ZoY2xScGJXVnZkWFF1WTJGc2JDaDBhR2x6TENCdFlYSnJaWElwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNWNibHh1ZlZ4dWRtRnlJSEYxWlhWbElEMGdXMTA3WEc1MllYSWdaSEpoYVc1cGJtY2dQU0JtWVd4elpUdGNiblpoY2lCamRYSnlaVzUwVVhWbGRXVTdYRzUyWVhJZ2NYVmxkV1ZKYm1SbGVDQTlJQzB4TzF4dVhHNW1kVzVqZEdsdmJpQmpiR1ZoYmxWd1RtVjRkRlJwWTJzb0tTQjdYRzRnSUNBZ2FXWWdLQ0ZrY21GcGJtbHVaeUI4ZkNBaFkzVnljbVZ1ZEZGMVpYVmxLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlYRzRnSUNBZ1pISmhhVzVwYm1jZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0JwWmlBb1kzVnljbVZ1ZEZGMVpYVmxMbXhsYm1kMGFDa2dlMXh1SUNBZ0lDQWdJQ0J4ZFdWMVpTQTlJR04xY25KbGJuUlJkV1YxWlM1amIyNWpZWFFvY1hWbGRXVXBPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lIRjFaWFZsU1c1a1pYZ2dQU0F0TVR0Y2JpQWdJQ0I5WEc0Z0lDQWdhV1lnS0hGMVpYVmxMbXhsYm1kMGFDa2dlMXh1SUNBZ0lDQWdJQ0JrY21GcGJsRjFaWFZsS0NrN1hHNGdJQ0FnZlZ4dWZWeHVYRzVtZFc1amRHbHZiaUJrY21GcGJsRjFaWFZsS0NrZ2UxeHVJQ0FnSUdsbUlDaGtjbUZwYm1sdVp5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZWeHVJQ0FnSUhaaGNpQjBhVzFsYjNWMElEMGdjblZ1VkdsdFpXOTFkQ2hqYkdWaGJsVndUbVY0ZEZScFkyc3BPMXh1SUNBZ0lHUnlZV2x1YVc1bklEMGdkSEoxWlR0Y2JseHVJQ0FnSUhaaGNpQnNaVzRnUFNCeGRXVjFaUzVzWlc1bmRHZzdYRzRnSUNBZ2QyaHBiR1VvYkdWdUtTQjdYRzRnSUNBZ0lDQWdJR04xY25KbGJuUlJkV1YxWlNBOUlIRjFaWFZsTzF4dUlDQWdJQ0FnSUNCeGRXVjFaU0E5SUZ0ZE8xeHVJQ0FnSUNBZ0lDQjNhR2xzWlNBb0t5dHhkV1YxWlVsdVpHVjRJRHdnYkdWdUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZM1Z5Y21WdWRGRjFaWFZsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEZGMVpYVmxXM0YxWlhWbFNXNWtaWGhkTG5KMWJpZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEYxWlhWbFNXNWtaWGdnUFNBdE1UdGNiaUFnSUNBZ0lDQWdiR1Z1SUQwZ2NYVmxkV1V1YkdWdVozUm9PMXh1SUNBZ0lIMWNiaUFnSUNCamRYSnlaVzUwVVhWbGRXVWdQU0J1ZFd4c08xeHVJQ0FnSUdSeVlXbHVhVzVuSUQwZ1ptRnNjMlU3WEc0Z0lDQWdjblZ1UTJ4bFlYSlVhVzFsYjNWMEtIUnBiV1Z2ZFhRcE8xeHVmVnh1WEc1d2NtOWpaWE56TG01bGVIUlVhV05ySUQwZ1puVnVZM1JwYjI0Z0tHWjFiaWtnZTF4dUlDQWdJSFpoY2lCaGNtZHpJRDBnYm1WM0lFRnljbUY1S0dGeVozVnRaVzUwY3k1c1pXNW5kR2dnTFNBeEtUdGNiaUFnSUNCcFppQW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQStJREVwSUh0Y2JpQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREU3SUdrZ1BDQmhjbWQxYldWdWRITXViR1Z1WjNSb095QnBLeXNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0Z5WjNOYmFTQXRJREZkSUQwZ1lYSm5kVzFsYm5SelcybGRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lIRjFaWFZsTG5CMWMyZ29ibVYzSUVsMFpXMG9ablZ1TENCaGNtZHpLU2s3WEc0Z0lDQWdhV1lnS0hGMVpYVmxMbXhsYm1kMGFDQTlQVDBnTVNBbUppQWhaSEpoYVc1cGJtY3BJSHRjYmlBZ0lDQWdJQ0FnY25WdVZHbHRaVzkxZENoa2NtRnBibEYxWlhWbEtUdGNiaUFnSUNCOVhHNTlPMXh1WEc0dkx5QjJPQ0JzYVd0bGN5QndjbVZrYVdOMGFXSnNaU0J2WW1wbFkzUnpYRzVtZFc1amRHbHZiaUJKZEdWdEtHWjFiaXdnWVhKeVlYa3BJSHRjYmlBZ0lDQjBhR2x6TG1aMWJpQTlJR1oxYmp0Y2JpQWdJQ0IwYUdsekxtRnljbUY1SUQwZ1lYSnlZWGs3WEc1OVhHNUpkR1Z0TG5CeWIzUnZkSGx3WlM1eWRXNGdQU0JtZFc1amRHbHZiaUFvS1NCN1hHNGdJQ0FnZEdocGN5NW1kVzR1WVhCd2JIa29iblZzYkN3Z2RHaHBjeTVoY25KaGVTazdYRzU5TzF4dWNISnZZMlZ6Y3k1MGFYUnNaU0E5SUNkaWNtOTNjMlZ5Snp0Y2JuQnliMk5sYzNNdVluSnZkM05sY2lBOUlIUnlkV1U3WEc1d2NtOWpaWE56TG1WdWRpQTlJSHQ5TzF4dWNISnZZMlZ6Y3k1aGNtZDJJRDBnVzEwN1hHNXdjbTlqWlhOekxuWmxjbk5wYjI0Z1BTQW5KenNnTHk4Z1pXMXdkSGtnYzNSeWFXNW5JSFJ2SUdGMmIybGtJSEpsWjJWNGNDQnBjM04xWlhOY2JuQnliMk5sYzNNdWRtVnljMmx2Ym5NZ1BTQjdmVHRjYmx4dVpuVnVZM1JwYjI0Z2JtOXZjQ2dwSUh0OVhHNWNibkJ5YjJObGMzTXViMjRnUFNCdWIyOXdPMXh1Y0hKdlkyVnpjeTVoWkdSTWFYTjBaVzVsY2lBOUlHNXZiM0E3WEc1d2NtOWpaWE56TG05dVkyVWdQU0J1YjI5d08xeHVjSEp2WTJWemN5NXZabVlnUFNCdWIyOXdPMXh1Y0hKdlkyVnpjeTV5WlcxdmRtVk1hWE4wWlc1bGNpQTlJRzV2YjNBN1hHNXdjbTlqWlhOekxuSmxiVzkyWlVGc2JFeHBjM1JsYm1WeWN5QTlJRzV2YjNBN1hHNXdjbTlqWlhOekxtVnRhWFFnUFNCdWIyOXdPMXh1Y0hKdlkyVnpjeTV3Y21Wd1pXNWtUR2x6ZEdWdVpYSWdQU0J1YjI5d08xeHVjSEp2WTJWemN5NXdjbVZ3Wlc1a1QyNWpaVXhwYzNSbGJtVnlJRDBnYm05dmNEdGNibHh1Y0hKdlkyVnpjeTVzYVhOMFpXNWxjbk1nUFNCbWRXNWpkR2x2YmlBb2JtRnRaU2tnZXlCeVpYUjFjbTRnVzEwZ2ZWeHVYRzV3Y205alpYTnpMbUpwYm1ScGJtY2dQU0JtZFc1amRHbHZiaUFvYm1GdFpTa2dlMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnbmNISnZZMlZ6Y3k1aWFXNWthVzVuSUdseklHNXZkQ0J6ZFhCd2IzSjBaV1FuS1R0Y2JuMDdYRzVjYm5CeWIyTmxjM011WTNka0lEMGdablZ1WTNScGIyNGdLQ2tnZXlCeVpYUjFjbTRnSnk4bklIMDdYRzV3Y205alpYTnpMbU5vWkdseUlEMGdablZ1WTNScGIyNGdLR1JwY2lrZ2UxeHVJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduY0hKdlkyVnpjeTVqYUdScGNpQnBjeUJ1YjNRZ2MzVndjRzl5ZEdWa0p5azdYRzU5TzF4dWNISnZZMlZ6Y3k1MWJXRnpheUE5SUdaMWJtTjBhVzl1S0NrZ2V5QnlaWFIxY200Z01Ec2dmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSEpsY0d4aFkyVWdQU0JUZEhKcGJtY3VjSEp2ZEc5MGVYQmxMbkpsY0d4aFkyVTdYRzUyWVhJZ2NHVnlZMlZ1ZEZSM1pXNTBhV1Z6SUQwZ0x5VXlNQzluTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlIdGNiaUFnSUNBblpHVm1ZWFZzZENjNklDZFNSa016T1RnMkp5eGNiaUFnSUNCbWIzSnRZWFIwWlhKek9pQjdYRzRnSUNBZ0lDQWdJRkpHUXpFM016ZzZJR1oxYm1OMGFXOXVJQ2gyWVd4MVpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGNHeGhZMlV1WTJGc2JDaDJZV3gxWlN3Z2NHVnlZMlZ1ZEZSM1pXNTBhV1Z6TENBbkt5Y3BPMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCU1JrTXpPVGcyT2lCbWRXNWpkR2x2YmlBb2RtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjJZV3gxWlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgwc1hHNGdJQ0FnVWtaRE1UY3pPRG9nSjFKR1F6RTNNemduTEZ4dUlDQWdJRkpHUXpNNU9EWTZJQ2RTUmtNek9UZzJKMXh1ZlR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVkbUZ5SUhOMGNtbHVaMmxtZVNBOUlISmxjWFZwY21Vb0p5NHZjM1J5YVc1bmFXWjVKeWs3WEc1MllYSWdjR0Z5YzJVZ1BTQnlaWEYxYVhKbEtDY3VMM0JoY25ObEp5azdYRzUyWVhJZ1ptOXliV0YwY3lBOUlISmxjWFZwY21Vb0p5NHZabTl5YldGMGN5Y3BPMXh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUh0Y2JpQWdJQ0JtYjNKdFlYUnpPaUJtYjNKdFlYUnpMRnh1SUNBZ0lIQmhjbk5sT2lCd1lYSnpaU3hjYmlBZ0lDQnpkSEpwYm1kcFpuazZJSE4wY21sdVoybG1lVnh1ZlR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVkbUZ5SUhWMGFXeHpJRDBnY21WeGRXbHlaU2duTGk5MWRHbHNjeWNwTzF4dVhHNTJZWElnYUdGeklEMGdUMkpxWldOMExuQnliM1J2ZEhsd1pTNW9ZWE5QZDI1UWNtOXdaWEowZVR0Y2JseHVkbUZ5SUdSbFptRjFiSFJ6SUQwZ2UxeHVJQ0FnSUdGc2JHOTNSRzkwY3pvZ1ptRnNjMlVzWEc0Z0lDQWdZV3hzYjNkUWNtOTBiM1I1Y0dWek9pQm1ZV3h6WlN4Y2JpQWdJQ0JoY25KaGVVeHBiV2wwT2lBeU1DeGNiaUFnSUNCa1pXTnZaR1Z5T2lCMWRHbHNjeTVrWldOdlpHVXNYRzRnSUNBZ1pHVnNhVzFwZEdWeU9pQW5KaWNzWEc0Z0lDQWdaR1Z3ZEdnNklEVXNYRzRnSUNBZ2NHRnlZVzFsZEdWeVRHbHRhWFE2SURFd01EQXNYRzRnSUNBZ2NHeGhhVzVQWW1wbFkzUnpPaUJtWVd4elpTeGNiaUFnSUNCemRISnBZM1JPZFd4c1NHRnVaR3hwYm1jNklHWmhiSE5sWEc1OU8xeHVYRzUyWVhJZ2NHRnljMlZXWVd4MVpYTWdQU0JtZFc1amRHbHZiaUJ3WVhKelpWRjFaWEo1VTNSeWFXNW5WbUZzZFdWektITjBjaXdnYjNCMGFXOXVjeWtnZTF4dUlDQWdJSFpoY2lCdlltb2dQU0I3ZlR0Y2JpQWdJQ0IyWVhJZ1kyeGxZVzVUZEhJZ1BTQnZjSFJwYjI1ekxtbG5ibTl5WlZGMVpYSjVVSEpsWm1sNElEOGdjM1J5TG5KbGNHeGhZMlVvTDE1Y1hEOHZMQ0FuSnlrZ09pQnpkSEk3WEc0Z0lDQWdkbUZ5SUd4cGJXbDBJRDBnYjNCMGFXOXVjeTV3WVhKaGJXVjBaWEpNYVcxcGRDQTlQVDBnU1c1bWFXNXBkSGtnUHlCMWJtUmxabWx1WldRZ09pQnZjSFJwYjI1ekxuQmhjbUZ0WlhSbGNreHBiV2wwTzF4dUlDQWdJSFpoY2lCd1lYSjBjeUE5SUdOc1pXRnVVM1J5TG5Od2JHbDBLRzl3ZEdsdmJuTXVaR1ZzYVcxcGRHVnlMQ0JzYVcxcGRDazdYRzVjYmlBZ0lDQm1iM0lnS0haaGNpQnBJRDBnTURzZ2FTQThJSEJoY25SekxteGxibWQwYURzZ0t5dHBLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQndZWEowSUQwZ2NHRnlkSE5iYVYwN1hHNWNiaUFnSUNBZ0lDQWdkbUZ5SUdKeVlXTnJaWFJGY1hWaGJITlFiM01nUFNCd1lYSjBMbWx1WkdWNFQyWW9KMTA5SnlrN1hHNGdJQ0FnSUNBZ0lIWmhjaUJ3YjNNZ1BTQmljbUZqYTJWMFJYRjFZV3h6VUc5eklEMDlQU0F0TVNBL0lIQmhjblF1YVc1a1pYaFBaaWduUFNjcElEb2dZbkpoWTJ0bGRFVnhkV0ZzYzFCdmN5QXJJREU3WEc1Y2JpQWdJQ0FnSUNBZ2RtRnlJR3RsZVN3Z2RtRnNPMXh1SUNBZ0lDQWdJQ0JwWmlBb2NHOXpJRDA5UFNBdE1Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2EyVjVJRDBnYjNCMGFXOXVjeTVrWldOdlpHVnlLSEJoY25Rc0lHUmxabUYxYkhSekxtUmxZMjlrWlhJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc0lEMGdiM0IwYVc5dWN5NXpkSEpwWTNST2RXeHNTR0Z1Wkd4cGJtY2dQeUJ1ZFd4c0lEb2dKeWM3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnJaWGtnUFNCdmNIUnBiMjV6TG1SbFkyOWtaWElvY0dGeWRDNXpiR2xqWlNnd0xDQndiM01wTENCa1pXWmhkV3gwY3k1a1pXTnZaR1Z5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoYkNBOUlHOXdkR2x2Ym5NdVpHVmpiMlJsY2lod1lYSjBMbk5zYVdObEtIQnZjeUFySURFcExDQmtaV1poZFd4MGN5NWtaV052WkdWeUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JwWmlBb2FHRnpMbU5oYkd3b2IySnFMQ0JyWlhrcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdlltcGJhMlY1WFNBOUlGdGRMbU52Ym1OaGRDaHZZbXBiYTJWNVhTa3VZMjl1WTJGMEtIWmhiQ2s3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZZbXBiYTJWNVhTQTlJSFpoYkR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ2WW1vN1hHNTlPMXh1WEc1MllYSWdjR0Z5YzJWUFltcGxZM1FnUFNCbWRXNWpkR2x2YmlBb1kyaGhhVzRzSUhaaGJDd2diM0IwYVc5dWN5a2dlMXh1SUNBZ0lIWmhjaUJzWldGbUlEMGdkbUZzTzF4dVhHNGdJQ0FnWm05eUlDaDJZWElnYVNBOUlHTm9ZV2x1TG14bGJtZDBhQ0F0SURFN0lHa2dQajBnTURzZ0xTMXBLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQnZZbW83WEc0Z0lDQWdJQ0FnSUhaaGNpQnliMjkwSUQwZ1kyaGhhVzViYVYwN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hKdmIzUWdQVDA5SUNkYlhTY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOWlhaUE5SUZ0ZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJKcUlEMGdiMkpxTG1OdmJtTmhkQ2hzWldGbUtUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5aWFpQTlJRzl3ZEdsdmJuTXVjR3hoYVc1UFltcGxZM1J6SUQ4Z1QySnFaV04wTG1OeVpXRjBaU2h1ZFd4c0tTQTZJSHQ5TzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdOc1pXRnVVbTl2ZENBOUlISnZiM1F1WTJoaGNrRjBLREFwSUQwOVBTQW5XeWNnSmlZZ2NtOXZkQzVqYUdGeVFYUW9jbTl2ZEM1c1pXNW5kR2dnTFNBeEtTQTlQVDBnSjEwbklEOGdjbTl2ZEM1emJHbGpaU2d4TENBdE1Ta2dPaUJ5YjI5ME8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHbHVaR1Y0SUQwZ2NHRnljMlZKYm5Rb1kyeGxZVzVTYjI5MExDQXhNQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSVdselRtRk9LR2x1WkdWNEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDWW1JSEp2YjNRZ0lUMDlJR05zWldGdVVtOXZkRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1ltSUZOMGNtbHVaeWhwYm1SbGVDa2dQVDA5SUdOc1pXRnVVbTl2ZEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNZbUlHbHVaR1Y0SUQ0OUlEQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW1KaUFvYjNCMGFXOXVjeTV3WVhKelpVRnljbUY1Y3lBbUppQnBibVJsZUNBOFBTQnZjSFJwYjI1ekxtRnljbUY1VEdsdGFYUXBYRzRnSUNBZ0lDQWdJQ0FnSUNBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZZbW9nUFNCYlhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBiYVc1a1pYaGRJRDBnYkdWaFpqdGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVcyTnNaV0Z1VW05dmRGMGdQU0JzWldGbU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdiR1ZoWmlBOUlHOWlhanRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2JHVmhaanRjYm4wN1hHNWNiblpoY2lCd1lYSnpaVXRsZVhNZ1BTQm1kVzVqZEdsdmJpQndZWEp6WlZGMVpYSjVVM1J5YVc1blMyVjVjeWhuYVhabGJrdGxlU3dnZG1Gc0xDQnZjSFJwYjI1ektTQjdYRzRnSUNBZ2FXWWdLQ0ZuYVhabGJrdGxlU2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnVkhKaGJuTm1iM0p0SUdSdmRDQnViM1JoZEdsdmJpQjBieUJpY21GamEyVjBJRzV2ZEdGMGFXOXVYRzRnSUNBZ2RtRnlJR3RsZVNBOUlHOXdkR2x2Ym5NdVlXeHNiM2RFYjNSeklEOGdaMmwyWlc1TFpYa3VjbVZ3YkdGalpTZ3ZYRnd1S0Z0ZUxsdGRLeWt2Wnl3Z0oxc2tNVjBuS1NBNklHZHBkbVZ1UzJWNU8xeHVYRzRnSUNBZ0x5OGdWR2hsSUhKbFoyVjRJR05vZFc1cmMxeHVYRzRnSUNBZ2RtRnlJR0p5WVdOclpYUnpJRDBnTHloY1hGdGJYbHRjWEYxZEtsMHBMenRjYmlBZ0lDQjJZWElnWTJocGJHUWdQU0F2S0Z4Y1cxdGVXMXhjWFYwcVhTa3ZaenRjYmx4dUlDQWdJQzh2SUVkbGRDQjBhR1VnY0dGeVpXNTBYRzVjYmlBZ0lDQjJZWElnYzJWbmJXVnVkQ0E5SUdKeVlXTnJaWFJ6TG1WNFpXTW9hMlY1S1R0Y2JpQWdJQ0IyWVhJZ2NHRnlaVzUwSUQwZ2MyVm5iV1Z1ZENBL0lHdGxlUzV6YkdsalpTZ3dMQ0J6WldkdFpXNTBMbWx1WkdWNEtTQTZJR3RsZVR0Y2JseHVJQ0FnSUM4dklGTjBZWE5vSUhSb1pTQndZWEpsYm5RZ2FXWWdhWFFnWlhocGMzUnpYRzVjYmlBZ0lDQjJZWElnYTJWNWN5QTlJRnRkTzF4dUlDQWdJR2xtSUNod1lYSmxiblFwSUh0Y2JpQWdJQ0FnSUNBZ0x5OGdTV1lnZDJVZ1lYSmxiaWQwSUhWemFXNW5JSEJzWVdsdUlHOWlhbVZqZEhNc0lHOXdkR2x2Ym1Gc2JIa2djSEpsWm1sNElHdGxlWE5jYmlBZ0lDQWdJQ0FnTHk4Z2RHaGhkQ0IzYjNWc1pDQnZkbVZ5ZDNKcGRHVWdiMkpxWldOMElIQnliM1J2ZEhsd1pTQndjbTl3WlhKMGFXVnpYRzRnSUNBZ0lDQWdJR2xtSUNnaGIzQjBhVzl1Y3k1d2JHRnBiazlpYW1WamRITWdKaVlnYUdGekxtTmhiR3dvVDJKcVpXTjBMbkJ5YjNSdmRIbHdaU3dnY0dGeVpXNTBLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGdmNIUnBiMjV6TG1Gc2JHOTNVSEp2ZEc5MGVYQmxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUd0bGVYTXVjSFZ6YUNod1lYSmxiblFwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUV4dmIzQWdkR2h5YjNWbmFDQmphR2xzWkhKbGJpQmhjSEJsYm1ScGJtY2dkRzhnZEdobElHRnljbUY1SUhWdWRHbHNJSGRsSUdocGRDQmtaWEIwYUZ4dVhHNGdJQ0FnZG1GeUlHa2dQU0F3TzF4dUlDQWdJSGRvYVd4bElDZ29jMlZuYldWdWRDQTlJR05vYVd4a0xtVjRaV01vYTJWNUtTa2dJVDA5SUc1MWJHd2dKaVlnYVNBOElHOXdkR2x2Ym5NdVpHVndkR2dwSUh0Y2JpQWdJQ0FnSUNBZ2FTQXJQU0F4TzF4dUlDQWdJQ0FnSUNCcFppQW9JVzl3ZEdsdmJuTXVjR3hoYVc1UFltcGxZM1J6SUNZbUlHaGhjeTVqWVd4c0tFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVc0lITmxaMjFsYm5SYk1WMHVjMnhwWTJVb01Td2dMVEVwS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRnZjSFJwYjI1ekxtRnNiRzkzVUhKdmRHOTBlWEJsY3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCclpYbHpMbkIxYzJnb2MyVm5iV1Z1ZEZzeFhTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdTV1lnZEdobGNtVW5jeUJoSUhKbGJXRnBibVJsY2l3Z2FuVnpkQ0JoWkdRZ2QyaGhkR1YyWlhJZ2FYTWdiR1ZtZEZ4dVhHNGdJQ0FnYVdZZ0tITmxaMjFsYm5RcElIdGNiaUFnSUNBZ0lDQWdhMlY1Y3k1d2RYTm9LQ2RiSnlBcklHdGxlUzV6YkdsalpTaHpaV2R0Wlc1MExtbHVaR1Y0S1NBcklDZGRKeWs3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlIQmhjbk5sVDJKcVpXTjBLR3RsZVhNc0lIWmhiQ3dnYjNCMGFXOXVjeWs3WEc1OU8xeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVJQ2h6ZEhJc0lHOXdkSE1wSUh0Y2JpQWdJQ0IyWVhJZ2IzQjBhVzl1Y3lBOUlHOXdkSE1nUHlCMWRHbHNjeTVoYzNOcFoyNG9lMzBzSUc5d2RITXBJRG9nZTMwN1hHNWNiaUFnSUNCcFppQW9iM0IwYVc5dWN5NWtaV052WkdWeUlDRTlQU0J1ZFd4c0lDWW1JRzl3ZEdsdmJuTXVaR1ZqYjJSbGNpQWhQVDBnZFc1a1pXWnBibVZrSUNZbUlIUjVjR1Z2WmlCdmNIUnBiMjV6TG1SbFkyOWtaWElnSVQwOUlDZG1kVzVqZEdsdmJpY3BJSHRjYmlBZ0lDQWdJQ0FnZEdoeWIzY2dibVYzSUZSNWNHVkZjbkp2Y2lnblJHVmpiMlJsY2lCb1lYTWdkRzhnWW1VZ1lTQm1kVzVqZEdsdmJpNG5LVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnZjSFJwYjI1ekxtbG5ibTl5WlZGMVpYSjVVSEpsWm1sNElEMGdiM0IwYVc5dWN5NXBaMjV2Y21WUmRXVnllVkJ5WldacGVDQTlQVDBnZEhKMVpUdGNiaUFnSUNCdmNIUnBiMjV6TG1SbGJHbHRhWFJsY2lBOUlIUjVjR1Z2WmlCdmNIUnBiMjV6TG1SbGJHbHRhWFJsY2lBOVBUMGdKM04wY21sdVp5Y2dmSHdnZFhScGJITXVhWE5TWldkRmVIQW9iM0IwYVc5dWN5NWtaV3hwYldsMFpYSXBJRDhnYjNCMGFXOXVjeTVrWld4cGJXbDBaWElnT2lCa1pXWmhkV3gwY3k1a1pXeHBiV2wwWlhJN1hHNGdJQ0FnYjNCMGFXOXVjeTVrWlhCMGFDQTlJSFI1Y0dWdlppQnZjSFJwYjI1ekxtUmxjSFJvSUQwOVBTQW5iblZ0WW1WeUp5QS9JRzl3ZEdsdmJuTXVaR1Z3ZEdnZ09pQmtaV1poZFd4MGN5NWtaWEIwYUR0Y2JpQWdJQ0J2Y0hScGIyNXpMbUZ5Y21GNVRHbHRhWFFnUFNCMGVYQmxiMllnYjNCMGFXOXVjeTVoY25KaGVVeHBiV2wwSUQwOVBTQW5iblZ0WW1WeUp5QS9JRzl3ZEdsdmJuTXVZWEp5WVhsTWFXMXBkQ0E2SUdSbFptRjFiSFJ6TG1GeWNtRjVUR2x0YVhRN1hHNGdJQ0FnYjNCMGFXOXVjeTV3WVhKelpVRnljbUY1Y3lBOUlHOXdkR2x2Ym5NdWNHRnljMlZCY25KaGVYTWdJVDA5SUdaaGJITmxPMXh1SUNBZ0lHOXdkR2x2Ym5NdVpHVmpiMlJsY2lBOUlIUjVjR1Z2WmlCdmNIUnBiMjV6TG1SbFkyOWtaWElnUFQwOUlDZG1kVzVqZEdsdmJpY2dQeUJ2Y0hScGIyNXpMbVJsWTI5a1pYSWdPaUJrWldaaGRXeDBjeTVrWldOdlpHVnlPMXh1SUNBZ0lHOXdkR2x2Ym5NdVlXeHNiM2RFYjNSeklEMGdkSGx3Wlc5bUlHOXdkR2x2Ym5NdVlXeHNiM2RFYjNSeklEMDlQU0FuWW05dmJHVmhiaWNnUHlCdmNIUnBiMjV6TG1Gc2JHOTNSRzkwY3lBNklHUmxabUYxYkhSekxtRnNiRzkzUkc5MGN6dGNiaUFnSUNCdmNIUnBiMjV6TG5Cc1lXbHVUMkpxWldOMGN5QTlJSFI1Y0dWdlppQnZjSFJwYjI1ekxuQnNZV2x1VDJKcVpXTjBjeUE5UFQwZ0oySnZiMnhsWVc0bklEOGdiM0IwYVc5dWN5NXdiR0ZwYms5aWFtVmpkSE1nT2lCa1pXWmhkV3gwY3k1d2JHRnBiazlpYW1WamRITTdYRzRnSUNBZ2IzQjBhVzl1Y3k1aGJHeHZkMUJ5YjNSdmRIbHdaWE1nUFNCMGVYQmxiMllnYjNCMGFXOXVjeTVoYkd4dmQxQnliM1J2ZEhsd1pYTWdQVDA5SUNkaWIyOXNaV0Z1SnlBL0lHOXdkR2x2Ym5NdVlXeHNiM2RRY205MGIzUjVjR1Z6SURvZ1pHVm1ZWFZzZEhNdVlXeHNiM2RRY205MGIzUjVjR1Z6TzF4dUlDQWdJRzl3ZEdsdmJuTXVjR0Z5WVcxbGRHVnlUR2x0YVhRZ1BTQjBlWEJsYjJZZ2IzQjBhVzl1Y3k1d1lYSmhiV1YwWlhKTWFXMXBkQ0E5UFQwZ0oyNTFiV0psY2ljZ1B5QnZjSFJwYjI1ekxuQmhjbUZ0WlhSbGNreHBiV2wwSURvZ1pHVm1ZWFZzZEhNdWNHRnlZVzFsZEdWeVRHbHRhWFE3WEc0Z0lDQWdiM0IwYVc5dWN5NXpkSEpwWTNST2RXeHNTR0Z1Wkd4cGJtY2dQU0IwZVhCbGIyWWdiM0IwYVc5dWN5NXpkSEpwWTNST2RXeHNTR0Z1Wkd4cGJtY2dQVDA5SUNkaWIyOXNaV0Z1SnlBL0lHOXdkR2x2Ym5NdWMzUnlhV04wVG5Wc2JFaGhibVJzYVc1bklEb2daR1ZtWVhWc2RITXVjM1J5YVdOMFRuVnNiRWhoYm1Sc2FXNW5PMXh1WEc0Z0lDQWdhV1lnS0hOMGNpQTlQVDBnSnljZ2ZId2djM1J5SUQwOVBTQnVkV3hzSUh4OElIUjVjR1Z2WmlCemRISWdQVDA5SUNkMWJtUmxabWx1WldRbktTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnZjSFJwYjI1ekxuQnNZV2x1VDJKcVpXTjBjeUEvSUU5aWFtVmpkQzVqY21WaGRHVW9iblZzYkNrZ09pQjdmVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQjJZWElnZEdWdGNFOWlhaUE5SUhSNWNHVnZaaUJ6ZEhJZ1BUMDlJQ2R6ZEhKcGJtY25JRDhnY0dGeWMyVldZV3gxWlhNb2MzUnlMQ0J2Y0hScGIyNXpLU0E2SUhOMGNqdGNiaUFnSUNCMllYSWdiMkpxSUQwZ2IzQjBhVzl1Y3k1d2JHRnBiazlpYW1WamRITWdQeUJQWW1wbFkzUXVZM0psWVhSbEtHNTFiR3dwSURvZ2UzMDdYRzVjYmlBZ0lDQXZMeUJKZEdWeVlYUmxJRzkyWlhJZ2RHaGxJR3RsZVhNZ1lXNWtJSE5sZEhWd0lIUm9aU0J1WlhjZ2IySnFaV04wWEc1Y2JpQWdJQ0IyWVhJZ2EyVjVjeUE5SUU5aWFtVmpkQzVyWlhsektIUmxiWEJQWW1vcE8xeHVJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z2EyVjVjeTVzWlc1bmRHZzdJQ3NyYVNrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnYTJWNUlEMGdhMlY1YzF0cFhUdGNiaUFnSUNBZ0lDQWdkbUZ5SUc1bGQwOWlhaUE5SUhCaGNuTmxTMlY1Y3loclpYa3NJSFJsYlhCUFltcGJhMlY1WFN3Z2IzQjBhVzl1Y3lrN1hHNGdJQ0FnSUNBZ0lHOWlhaUE5SUhWMGFXeHpMbTFsY21kbEtHOWlhaXdnYm1WM1QySnFMQ0J2Y0hScGIyNXpLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2RYUnBiSE11WTI5dGNHRmpkQ2h2WW1vcE8xeHVmVHRjYmlJc0lpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFYwYVd4eklEMGdjbVZ4ZFdseVpTZ25MaTkxZEdsc2N5Y3BPMXh1ZG1GeUlHWnZjbTFoZEhNZ1BTQnlaWEYxYVhKbEtDY3VMMlp2Y20xaGRITW5LVHRjYmx4dWRtRnlJR0Z5Y21GNVVISmxabWw0UjJWdVpYSmhkRzl5Y3lBOUlIdGNiaUFnSUNCaWNtRmphMlYwY3pvZ1puVnVZM1JwYjI0Z1luSmhZMnRsZEhNb2NISmxabWw0S1NCN0lDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXeHBibVVnWm5WdVl5MXVZVzFsTFcxaGRHTm9hVzVuWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ3Y21WbWFYZ2dLeUFuVzEwbk8xeHVJQ0FnSUgwc1hHNGdJQ0FnYVc1a2FXTmxjem9nWm5WdVkzUnBiMjRnYVc1a2FXTmxjeWh3Y21WbWFYZ3NJR3RsZVNrZ2V5QXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXNhVzVsSUdaMWJtTXRibUZ0WlMxdFlYUmphR2x1WjF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnY0hKbFptbDRJQ3NnSjFzbklDc2dhMlY1SUNzZ0oxMG5PMXh1SUNBZ0lIMHNYRzRnSUNBZ2NtVndaV0YwT2lCbWRXNWpkR2x2YmlCeVpYQmxZWFFvY0hKbFptbDRLU0I3SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFd4cGJtVWdablZ1WXkxdVlXMWxMVzFoZEdOb2FXNW5YRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQndjbVZtYVhnN1hHNGdJQ0FnZlZ4dWZUdGNibHh1ZG1GeUlIUnZTVk5QSUQwZ1JHRjBaUzV3Y205MGIzUjVjR1V1ZEc5SlUwOVRkSEpwYm1jN1hHNWNiblpoY2lCa1pXWmhkV3gwY3lBOUlIdGNiaUFnSUNCa1pXeHBiV2wwWlhJNklDY21KeXhjYmlBZ0lDQmxibU52WkdVNklIUnlkV1VzWEc0Z0lDQWdaVzVqYjJSbGNqb2dkWFJwYkhNdVpXNWpiMlJsTEZ4dUlDQWdJR1Z1WTI5a1pWWmhiSFZsYzA5dWJIazZJR1poYkhObExGeHVJQ0FnSUhObGNtbGhiR2w2WlVSaGRHVTZJR1oxYm1OMGFXOXVJSE5sY21saGJHbDZaVVJoZEdVb1pHRjBaU2tnZXlBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxc2FXNWxJR1oxYm1NdGJtRnRaUzF0WVhSamFHbHVaMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRzlKVTA4dVkyRnNiQ2hrWVhSbEtUdGNiaUFnSUNCOUxGeHVJQ0FnSUhOcmFYQk9kV3hzY3pvZ1ptRnNjMlVzWEc0Z0lDQWdjM1J5YVdOMFRuVnNiRWhoYm1Sc2FXNW5PaUJtWVd4elpWeHVmVHRjYmx4dWRtRnlJSE4wY21sdVoybG1lU0E5SUdaMWJtTjBhVzl1SUhOMGNtbHVaMmxtZVNnZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJHbHVaU0JtZFc1akxXNWhiV1V0YldGMFkyaHBibWRjYmlBZ0lDQnZZbXBsWTNRc1hHNGdJQ0FnY0hKbFptbDRMRnh1SUNBZ0lHZGxibVZ5WVhSbFFYSnlZWGxRY21WbWFYZ3NYRzRnSUNBZ2MzUnlhV04wVG5Wc2JFaGhibVJzYVc1bkxGeHVJQ0FnSUhOcmFYQk9kV3hzY3l4Y2JpQWdJQ0JsYm1OdlpHVnlMRnh1SUNBZ0lHWnBiSFJsY2l4Y2JpQWdJQ0J6YjNKMExGeHVJQ0FnSUdGc2JHOTNSRzkwY3l4Y2JpQWdJQ0J6WlhKcFlXeHBlbVZFWVhSbExGeHVJQ0FnSUdadmNtMWhkSFJsY2l4Y2JpQWdJQ0JsYm1OdlpHVldZV3gxWlhOUGJteDVYRzRwSUh0Y2JpQWdJQ0IyWVhJZ2IySnFJRDBnYjJKcVpXTjBPMXh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdabWxzZEdWeUlEMDlQU0FuWm5WdVkzUnBiMjRuS1NCN1hHNGdJQ0FnSUNBZ0lHOWlhaUE5SUdacGJIUmxjaWh3Y21WbWFYZ3NJRzlpYWlrN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNodlltb2dhVzV6ZEdGdVkyVnZaaUJFWVhSbEtTQjdYRzRnSUNBZ0lDQWdJRzlpYWlBOUlITmxjbWxoYkdsNlpVUmhkR1VvYjJKcUtUdGNiaUFnSUNCOUlHVnNjMlVnYVdZZ0tHOWlhaUE5UFQwZ2JuVnNiQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9jM1J5YVdOMFRuVnNiRWhoYm1Sc2FXNW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pXNWpiMlJsY2lBbUppQWhaVzVqYjJSbFZtRnNkV1Z6VDI1c2VTQS9JR1Z1WTI5a1pYSW9jSEpsWm1sNExDQmtaV1poZFd4MGN5NWxibU52WkdWeUtTQTZJSEJ5WldacGVEdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUc5aWFpQTlJQ2NuTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnYjJKcUlEMDlQU0FuYzNSeWFXNW5KeUI4ZkNCMGVYQmxiMllnYjJKcUlEMDlQU0FuYm5WdFltVnlKeUI4ZkNCMGVYQmxiMllnYjJKcUlEMDlQU0FuWW05dmJHVmhiaWNnZkh3Z2RYUnBiSE11YVhOQ2RXWm1aWElvYjJKcUtTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb1pXNWpiMlJsY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHdGxlVlpoYkhWbElEMGdaVzVqYjJSbFZtRnNkV1Z6VDI1c2VTQS9JSEJ5WldacGVDQTZJR1Z1WTI5a1pYSW9jSEpsWm1sNExDQmtaV1poZFd4MGN5NWxibU52WkdWeUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJiWm05eWJXRjBkR1Z5S0d0bGVWWmhiSFZsS1NBcklDYzlKeUFySUdadmNtMWhkSFJsY2lobGJtTnZaR1Z5S0c5aWFpd2daR1ZtWVhWc2RITXVaVzVqYjJSbGNpa3BYVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVzJadmNtMWhkSFJsY2lod2NtVm1hWGdwSUNzZ0p6MG5JQ3NnWm05eWJXRjBkR1Z5S0ZOMGNtbHVaeWh2WW1vcEtWMDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RtRnlJSFpoYkhWbGN5QTlJRnRkTzF4dVhHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCdlltb2dQVDA5SUNkMWJtUmxabWx1WldRbktTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjJZV3gxWlhNN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnZG1GeUlHOWlha3RsZVhNN1hHNGdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWm1sc2RHVnlLU2tnZTF4dUlDQWdJQ0FnSUNCdlltcExaWGx6SUQwZ1ptbHNkR1Z5TzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJSFpoY2lCclpYbHpJRDBnVDJKcVpXTjBMbXRsZVhNb2IySnFLVHRjYmlBZ0lDQWdJQ0FnYjJKcVMyVjVjeUE5SUhOdmNuUWdQeUJyWlhsekxuTnZjblFvYzI5eWRDa2dPaUJyWlhsek8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z2IySnFTMlY1Y3k1c1pXNW5kR2c3SUNzcmFTa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2EyVjVJRDBnYjJKcVMyVjVjMXRwWFR0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvYzJ0cGNFNTFiR3h6SUNZbUlHOWlhbHRyWlhsZElEMDlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLRzlpYWlrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxjeUE5SUhaaGJIVmxjeTVqYjI1allYUW9jM1J5YVc1bmFXWjVLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzlpYWx0clpYbGRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUmxRWEp5WVhsUWNtVm1hWGdvY0hKbFptbDRMQ0JyWlhrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxibVZ5WVhSbFFYSnlZWGxRY21WbWFYZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1J5YVdOMFRuVnNiRWhoYm1Sc2FXNW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5yYVhCT2RXeHNjeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHVnlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pwYkhSbGNpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpiM0owTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGc2JHOTNSRzkwY3l4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpYSnBZV3hwZW1WRVlYUmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGRIUmxjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHVldZV3gxWlhOUGJteDVYRzRnSUNBZ0lDQWdJQ0FnSUNBcEtUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxjeUE5SUhaaGJIVmxjeTVqYjI1allYUW9jM1J5YVc1bmFXWjVLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzlpYWx0clpYbGRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5WldacGVDQXJJQ2hoYkd4dmQwUnZkSE1nUHlBbkxpY2dLeUJyWlhrZ09pQW5XeWNnS3lCclpYa2dLeUFuWFNjcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxibVZ5WVhSbFFYSnlZWGxRY21WbWFYZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1J5YVdOMFRuVnNiRWhoYm1Sc2FXNW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5yYVhCT2RXeHNjeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHVnlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pwYkhSbGNpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpiM0owTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGc2JHOTNSRzkwY3l4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpYSnBZV3hwZW1WRVlYUmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGRIUmxjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHVldZV3gxWlhOUGJteDVYRzRnSUNBZ0lDQWdJQ0FnSUNBcEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCMllXeDFaWE03WEc1OU8xeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVJQ2h2WW1wbFkzUXNJRzl3ZEhNcElIdGNiaUFnSUNCMllYSWdiMkpxSUQwZ2IySnFaV04wTzF4dUlDQWdJSFpoY2lCdmNIUnBiMjV6SUQwZ2IzQjBjeUEvSUhWMGFXeHpMbUZ6YzJsbmJpaDdmU3dnYjNCMGN5a2dPaUI3ZlR0Y2JseHVJQ0FnSUdsbUlDaHZjSFJwYjI1ekxtVnVZMjlrWlhJZ0lUMDlJRzUxYkd3Z0ppWWdiM0IwYVc5dWN5NWxibU52WkdWeUlDRTlQU0IxYm1SbFptbHVaV1FnSmlZZ2RIbHdaVzltSUc5d2RHbHZibk11Wlc1amIyUmxjaUFoUFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0NkRmJtTnZaR1Z5SUdoaGN5QjBieUJpWlNCaElHWjFibU4wYVc5dUxpY3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIWmhjaUJrWld4cGJXbDBaWElnUFNCMGVYQmxiMllnYjNCMGFXOXVjeTVrWld4cGJXbDBaWElnUFQwOUlDZDFibVJsWm1sdVpXUW5JRDhnWkdWbVlYVnNkSE11WkdWc2FXMXBkR1Z5SURvZ2IzQjBhVzl1Y3k1a1pXeHBiV2wwWlhJN1hHNGdJQ0FnZG1GeUlITjBjbWxqZEU1MWJHeElZVzVrYkdsdVp5QTlJSFI1Y0dWdlppQnZjSFJwYjI1ekxuTjBjbWxqZEU1MWJHeElZVzVrYkdsdVp5QTlQVDBnSjJKdmIyeGxZVzRuSUQ4Z2IzQjBhVzl1Y3k1emRISnBZM1JPZFd4c1NHRnVaR3hwYm1jZ09pQmtaV1poZFd4MGN5NXpkSEpwWTNST2RXeHNTR0Z1Wkd4cGJtYzdYRzRnSUNBZ2RtRnlJSE5yYVhCT2RXeHNjeUE5SUhSNWNHVnZaaUJ2Y0hScGIyNXpMbk5yYVhCT2RXeHNjeUE5UFQwZ0oySnZiMnhsWVc0bklEOGdiM0IwYVc5dWN5NXphMmx3VG5Wc2JITWdPaUJrWldaaGRXeDBjeTV6YTJsd1RuVnNiSE03WEc0Z0lDQWdkbUZ5SUdWdVkyOWtaU0E5SUhSNWNHVnZaaUJ2Y0hScGIyNXpMbVZ1WTI5a1pTQTlQVDBnSjJKdmIyeGxZVzRuSUQ4Z2IzQjBhVzl1Y3k1bGJtTnZaR1VnT2lCa1pXWmhkV3gwY3k1bGJtTnZaR1U3WEc0Z0lDQWdkbUZ5SUdWdVkyOWtaWElnUFNCMGVYQmxiMllnYjNCMGFXOXVjeTVsYm1OdlpHVnlJRDA5UFNBblpuVnVZM1JwYjI0bklEOGdiM0IwYVc5dWN5NWxibU52WkdWeUlEb2daR1ZtWVhWc2RITXVaVzVqYjJSbGNqdGNiaUFnSUNCMllYSWdjMjl5ZENBOUlIUjVjR1Z2WmlCdmNIUnBiMjV6TG5OdmNuUWdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QnZjSFJwYjI1ekxuTnZjblFnT2lCdWRXeHNPMXh1SUNBZ0lIWmhjaUJoYkd4dmQwUnZkSE1nUFNCMGVYQmxiMllnYjNCMGFXOXVjeTVoYkd4dmQwUnZkSE1nUFQwOUlDZDFibVJsWm1sdVpXUW5JRDhnWm1Gc2MyVWdPaUJ2Y0hScGIyNXpMbUZzYkc5M1JHOTBjenRjYmlBZ0lDQjJZWElnYzJWeWFXRnNhWHBsUkdGMFpTQTlJSFI1Y0dWdlppQnZjSFJwYjI1ekxuTmxjbWxoYkdsNlpVUmhkR1VnUFQwOUlDZG1kVzVqZEdsdmJpY2dQeUJ2Y0hScGIyNXpMbk5sY21saGJHbDZaVVJoZEdVZ09pQmtaV1poZFd4MGN5NXpaWEpwWVd4cGVtVkVZWFJsTzF4dUlDQWdJSFpoY2lCbGJtTnZaR1ZXWVd4MVpYTlBibXg1SUQwZ2RIbHdaVzltSUc5d2RHbHZibk11Wlc1amIyUmxWbUZzZFdWelQyNXNlU0E5UFQwZ0oySnZiMnhsWVc0bklEOGdiM0IwYVc5dWN5NWxibU52WkdWV1lXeDFaWE5QYm14NUlEb2daR1ZtWVhWc2RITXVaVzVqYjJSbFZtRnNkV1Z6VDI1c2VUdGNiaUFnSUNCcFppQW9kSGx3Wlc5bUlHOXdkR2x2Ym5NdVptOXliV0YwSUQwOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJQ0FnSUNCdmNIUnBiMjV6TG1admNtMWhkQ0E5SUdadmNtMWhkSE5iSjJSbFptRjFiSFFuWFR0Y2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0NGUFltcGxZM1F1Y0hKdmRHOTBlWEJsTG1oaGMwOTNibEJ5YjNCbGNuUjVMbU5oYkd3b1ptOXliV0YwY3k1bWIzSnRZWFIwWlhKekxDQnZjSFJwYjI1ekxtWnZjbTFoZENrcElIdGNiaUFnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRlI1Y0dWRmNuSnZjaWduVlc1cmJtOTNiaUJtYjNKdFlYUWdiM0IwYVc5dUlIQnliM1pwWkdWa0xpY3BPMXh1SUNBZ0lIMWNiaUFnSUNCMllYSWdabTl5YldGMGRHVnlJRDBnWm05eWJXRjBjeTVtYjNKdFlYUjBaWEp6VzI5d2RHbHZibk11Wm05eWJXRjBYVHRjYmlBZ0lDQjJZWElnYjJKcVMyVjVjenRjYmlBZ0lDQjJZWElnWm1sc2RHVnlPMXh1WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJ2Y0hScGIyNXpMbVpwYkhSbGNpQTlQVDBnSjJaMWJtTjBhVzl1SnlrZ2UxeHVJQ0FnSUNBZ0lDQm1hV3gwWlhJZ1BTQnZjSFJwYjI1ekxtWnBiSFJsY2p0Y2JpQWdJQ0FnSUNBZ2IySnFJRDBnWm1sc2RHVnlLQ2NuTENCdlltb3BPMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNodmNIUnBiMjV6TG1acGJIUmxjaWtwSUh0Y2JpQWdJQ0FnSUNBZ1ptbHNkR1Z5SUQwZ2IzQjBhVzl1Y3k1bWFXeDBaWEk3WEc0Z0lDQWdJQ0FnSUc5aWFrdGxlWE1nUFNCbWFXeDBaWEk3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkbUZ5SUd0bGVYTWdQU0JiWFR0Y2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ2IySnFJQ0U5UFNBbmIySnFaV04wSnlCOGZDQnZZbW9nUFQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNjbk8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhaaGNpQmhjbkpoZVVadmNtMWhkRHRjYmlBZ0lDQnBaaUFvYjNCMGFXOXVjeTVoY25KaGVVWnZjbTFoZENCcGJpQmhjbkpoZVZCeVpXWnBlRWRsYm1WeVlYUnZjbk1wSUh0Y2JpQWdJQ0FnSUNBZ1lYSnlZWGxHYjNKdFlYUWdQU0J2Y0hScGIyNXpMbUZ5Y21GNVJtOXliV0YwTzF4dUlDQWdJSDBnWld4elpTQnBaaUFvSjJsdVpHbGpaWE1uSUdsdUlHOXdkR2x2Ym5NcElIdGNiaUFnSUNBZ0lDQWdZWEp5WVhsR2IzSnRZWFFnUFNCdmNIUnBiMjV6TG1sdVpHbGpaWE1nUHlBbmFXNWthV05sY3ljZ09pQW5jbVZ3WldGMEp6dGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCaGNuSmhlVVp2Y20xaGRDQTlJQ2RwYm1ScFkyVnpKenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQjJZWElnWjJWdVpYSmhkR1ZCY25KaGVWQnlaV1pwZUNBOUlHRnljbUY1VUhKbFptbDRSMlZ1WlhKaGRHOXljMXRoY25KaGVVWnZjbTFoZEYwN1hHNWNiaUFnSUNCcFppQW9JVzlpYWt0bGVYTXBJSHRjYmlBZ0lDQWdJQ0FnYjJKcVMyVjVjeUE5SUU5aWFtVmpkQzVyWlhsektHOWlhaWs3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hOdmNuUXBJSHRjYmlBZ0lDQWdJQ0FnYjJKcVMyVjVjeTV6YjNKMEtITnZjblFwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd095QnBJRHdnYjJKcVMyVjVjeTVzWlc1bmRHZzdJQ3NyYVNrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnYTJWNUlEMGdiMkpxUzJWNWMxdHBYVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9jMnRwY0U1MWJHeHpJQ1ltSUc5aWFsdHJaWGxkSUQwOVBTQnVkV3hzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHdGxlWE1nUFNCclpYbHpMbU52Ym1OaGRDaHpkSEpwYm1kcFpua29YRzRnSUNBZ0lDQWdJQ0FnSUNCdlltcGJhMlY1WFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR3RsZVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUmxRWEp5WVhsUWNtVm1hWGdzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkSEpwWTNST2RXeHNTR0Z1Wkd4cGJtY3NYRzRnSUNBZ0lDQWdJQ0FnSUNCemEybHdUblZzYkhNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHVWdQeUJsYm1OdlpHVnlJRG9nYm5Wc2JDeGNiaUFnSUNBZ0lDQWdJQ0FnSUdacGJIUmxjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lITnZjblFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmhiR3h2ZDBSdmRITXNYRzRnSUNBZ0lDQWdJQ0FnSUNCelpYSnBZV3hwZW1WRVlYUmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXliV0YwZEdWeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnWlc1amIyUmxWbUZzZFdWelQyNXNlVnh1SUNBZ0lDQWdJQ0FwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0IyWVhJZ2FtOXBibVZrSUQwZ2EyVjVjeTVxYjJsdUtHUmxiR2x0YVhSbGNpazdYRzRnSUNBZ2RtRnlJSEJ5WldacGVDQTlJRzl3ZEdsdmJuTXVZV1JrVVhWbGNubFFjbVZtYVhnZ1BUMDlJSFJ5ZFdVZ1B5QW5QeWNnT2lBbkp6dGNibHh1SUNBZ0lISmxkSFZ5YmlCcWIybHVaV1F1YkdWdVozUm9JRDRnTUNBL0lIQnlaV1pwZUNBcklHcHZhVzVsWkNBNklDY25PMXh1ZlR0Y2JpSXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVkbUZ5SUdoaGN5QTlJRTlpYW1WamRDNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrN1hHNWNiblpoY2lCb1pYaFVZV0pzWlNBOUlDaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdkbUZ5SUdGeWNtRjVJRDBnVzEwN1hHNGdJQ0FnWm05eUlDaDJZWElnYVNBOUlEQTdJR2tnUENBeU5UWTdJQ3NyYVNrZ2UxeHVJQ0FnSUNBZ0lDQmhjbkpoZVM1d2RYTm9LQ2NsSnlBcklDZ29hU0E4SURFMklEOGdKekFuSURvZ0p5Y3BJQ3NnYVM1MGIxTjBjbWx1WnlneE5pa3BMblJ2VlhCd1pYSkRZWE5sS0NrcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJoY25KaGVUdGNibjBvS1NrN1hHNWNiblpoY2lCamIyMXdZV04wVVhWbGRXVWdQU0JtZFc1amRHbHZiaUJqYjIxd1lXTjBVWFZsZFdVb2NYVmxkV1VwSUh0Y2JpQWdJQ0IyWVhJZ2IySnFPMXh1WEc0Z0lDQWdkMmhwYkdVZ0tIRjFaWFZsTG14bGJtZDBhQ2tnZTF4dUlDQWdJQ0FnSUNCMllYSWdhWFJsYlNBOUlIRjFaWFZsTG5CdmNDZ3BPMXh1SUNBZ0lDQWdJQ0J2WW1vZ1BTQnBkR1Z0TG05aWFsdHBkR1Z0TG5CeWIzQmRPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0c5aWFpa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJqYjIxd1lXTjBaV1FnUFNCYlhUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2FpQTlJREE3SUdvZ1BDQnZZbW91YkdWdVozUm9PeUFySzJvcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JRzlpYWx0cVhTQWhQVDBnSjNWdVpHVm1hVzVsWkNjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dGNHRmpkR1ZrTG5CMWMyZ29iMkpxVzJwZEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsMFpXMHViMkpxVzJsMFpXMHVjSEp2Y0YwZ1BTQmpiMjF3WVdOMFpXUTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2IySnFPMXh1ZlR0Y2JseHVkbUZ5SUdGeWNtRjVWRzlQWW1wbFkzUWdQU0JtZFc1amRHbHZiaUJoY25KaGVWUnZUMkpxWldOMEtITnZkWEpqWlN3Z2IzQjBhVzl1Y3lrZ2UxeHVJQ0FnSUhaaGNpQnZZbW9nUFNCdmNIUnBiMjV6SUNZbUlHOXdkR2x2Ym5NdWNHeGhhVzVQWW1wbFkzUnpJRDhnVDJKcVpXTjBMbU55WldGMFpTaHVkV3hzS1NBNklIdDlPMXh1SUNBZ0lHWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2djMjkxY21ObExteGxibWQwYURzZ0t5dHBLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ2MyOTFjbU5sVzJsZElDRTlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVcybGRJRDBnYzI5MWNtTmxXMmxkTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRzlpYWp0Y2JuMDdYRzVjYm5aaGNpQnRaWEpuWlNBOUlHWjFibU4wYVc5dUlHMWxjbWRsS0hSaGNtZGxkQ3dnYzI5MWNtTmxMQ0J2Y0hScGIyNXpLU0I3WEc0Z0lDQWdhV1lnS0NGemIzVnlZMlVwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSaGNtZGxkRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvZEhsd1pXOW1JSE52ZFhKalpTQWhQVDBnSjI5aWFtVmpkQ2NwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb2RHRnlaMlYwS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdGeVoyVjBMbkIxYzJnb2MyOTFjbU5sS1R0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ2RHRnlaMlYwSUQwOVBTQW5iMkpxWldOMEp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzl3ZEdsdmJuTXVjR3hoYVc1UFltcGxZM1J6SUh4OElHOXdkR2x2Ym5NdVlXeHNiM2RRY205MGIzUjVjR1Z6SUh4OElDRm9ZWE11WTJGc2JDaFBZbXBsWTNRdWNISnZkRzkwZVhCbExDQnpiM1Z5WTJVcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR0Z5WjJWMFczTnZkWEpqWlYwZ1BTQjBjblZsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZ0MFlYSm5aWFFzSUhOdmRYSmpaVjA3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHRnlaMlYwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnZEdGeVoyVjBJQ0U5UFNBbmIySnFaV04wSnlrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1czUmhjbWRsZEYwdVkyOXVZMkYwS0hOdmRYSmpaU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkbUZ5SUcxbGNtZGxWR0Z5WjJWMElEMGdkR0Z5WjJWME8xeHVJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0hSaGNtZGxkQ2tnSmlZZ0lVRnljbUY1TG1selFYSnlZWGtvYzI5MWNtTmxLU2tnZTF4dUlDQWdJQ0FnSUNCdFpYSm5aVlJoY21kbGRDQTlJR0Z5Y21GNVZHOVBZbXBsWTNRb2RHRnlaMlYwTENCdmNIUnBiMjV6S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2gwWVhKblpYUXBJQ1ltSUVGeWNtRjVMbWx6UVhKeVlYa29jMjkxY21ObEtTa2dlMXh1SUNBZ0lDQWdJQ0J6YjNWeVkyVXVabTl5UldGamFDaG1kVzVqZEdsdmJpQW9hWFJsYlN3Z2FTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2hoY3k1allXeHNLSFJoY21kbGRDd2dhU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR0Z5WjJWMFcybGRJQ1ltSUhSNWNHVnZaaUIwWVhKblpYUmJhVjBnUFQwOUlDZHZZbXBsWTNRbktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSaGNtZGxkRnRwWFNBOUlHMWxjbWRsS0hSaGNtZGxkRnRwWFN3Z2FYUmxiU3dnYjNCMGFXOXVjeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHRnlaMlYwTG5CMWMyZ29hWFJsYlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWVhKblpYUmJhVjBnUFNCcGRHVnRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJoY21kbGREdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnVDJKcVpXTjBMbXRsZVhNb2MyOTFjbU5sS1M1eVpXUjFZMlVvWm5WdVkzUnBiMjRnS0dGall5d2dhMlY1S1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUIyWVd4MVpTQTlJSE52ZFhKalpWdHJaWGxkTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hvWVhNdVkyRnNiQ2hoWTJNc0lHdGxlU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0ZqWTF0clpYbGRJRDBnYldWeVoyVW9ZV05qVzJ0bGVWMHNJSFpoYkhWbExDQnZjSFJwYjI1ektUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdGalkxdHJaWGxkSUQwZ2RtRnNkV1U3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGall6dGNiaUFnSUNCOUxDQnRaWEpuWlZSaGNtZGxkQ2s3WEc1OU8xeHVYRzUyWVhJZ1lYTnphV2R1SUQwZ1puVnVZM1JwYjI0Z1lYTnphV2R1VTJsdVoyeGxVMjkxY21ObEtIUmhjbWRsZEN3Z2MyOTFjbU5sS1NCN1hHNGdJQ0FnY21WMGRYSnVJRTlpYW1WamRDNXJaWGx6S0hOdmRYSmpaU2t1Y21Wa2RXTmxLR1oxYm1OMGFXOXVJQ2hoWTJNc0lHdGxlU2tnZTF4dUlDQWdJQ0FnSUNCaFkyTmJhMlY1WFNBOUlITnZkWEpqWlZ0clpYbGRPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdZV05qTzF4dUlDQWdJSDBzSUhSaGNtZGxkQ2s3WEc1OU8xeHVYRzUyWVhJZ1pHVmpiMlJsSUQwZ1puVnVZM1JwYjI0Z0tITjBjaWtnZTF4dUlDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1pXTnZaR1ZWVWtsRGIyMXdiMjVsYm5Rb2MzUnlMbkpsY0d4aFkyVW9MMXhjS3k5bkxDQW5JQ2NwS1R0Y2JpQWdJQ0I5SUdOaGRHTm9JQ2hsS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCemRISTdYRzRnSUNBZ2ZWeHVmVHRjYmx4dWRtRnlJR1Z1WTI5a1pTQTlJR1oxYm1OMGFXOXVJR1Z1WTI5a1pTaHpkSElwSUh0Y2JpQWdJQ0F2THlCVWFHbHpJR052WkdVZ2QyRnpJRzl5YVdkcGJtRnNiSGtnZDNKcGRIUmxiaUJpZVNCQ2NtbGhiaUJYYUdsMFpTQW9iWE5qWkdWNEtTQm1iM0lnZEdobElHbHZMbXB6SUdOdmNtVWdjWFZsY25semRISnBibWNnYkdsaWNtRnllUzVjYmlBZ0lDQXZMeUJKZENCb1lYTWdZbVZsYmlCaFpHRndkR1ZrSUdobGNtVWdabTl5SUhOMGNtbGpkR1Z5SUdGa2FHVnlaVzVqWlNCMGJ5QlNSa01nTXprNE5seHVJQ0FnSUdsbUlDaHpkSEl1YkdWdVozUm9JRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnpkSEk3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkbUZ5SUhOMGNtbHVaeUE5SUhSNWNHVnZaaUJ6ZEhJZ1BUMDlJQ2R6ZEhKcGJtY25JRDhnYzNSeUlEb2dVM1J5YVc1bktITjBjaWs3WEc1Y2JpQWdJQ0IyWVhJZ2IzVjBJRDBnSnljN1hHNGdJQ0FnWm05eUlDaDJZWElnYVNBOUlEQTdJR2tnUENCemRISnBibWN1YkdWdVozUm9PeUFySzJrcElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUdNZ1BTQnpkSEpwYm1jdVkyaGhja052WkdWQmRDaHBLVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9YRzRnSUNBZ0lDQWdJQ0FnSUNCaklEMDlQU0F3ZURKRUlDOHZJQzFjYmlBZ0lDQWdJQ0FnSUNBZ0lIeDhJR01nUFQwOUlEQjRNa1VnTHk4Z0xseHVJQ0FnSUNBZ0lDQWdJQ0FnZkh3Z1l5QTlQVDBnTUhnMVJpQXZMeUJmWEc0Z0lDQWdJQ0FnSUNBZ0lDQjhmQ0JqSUQwOVBTQXdlRGRGSUM4dklINWNiaUFnSUNBZ0lDQWdJQ0FnSUh4OElDaGpJRDQ5SURCNE16QWdKaVlnWXlBOFBTQXdlRE01S1NBdkx5QXdMVGxjYmlBZ0lDQWdJQ0FnSUNBZ0lIeDhJQ2hqSUQ0OUlEQjROREVnSmlZZ1l5QThQU0F3ZURWQktTQXZMeUJoTFhwY2JpQWdJQ0FnSUNBZ0lDQWdJSHg4SUNoaklENDlJREI0TmpFZ0ppWWdZeUE4UFNBd2VEZEJLU0F2THlCQkxWcGNiaUFnSUNBZ0lDQWdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ2MzUnlhVzVuTG1Ob1lYSkJkQ2hwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR01nUENBd2VEZ3dLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnUFNCdmRYUWdLeUJvWlhoVVlXSnNaVnRqWFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR01nUENBd2VEZ3dNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUQwZ2IzVjBJQ3NnS0dobGVGUmhZbXhsV3pCNFF6QWdmQ0FvWXlBK1BpQTJLVjBnS3lCb1pYaFVZV0pzWlZzd2VEZ3dJSHdnS0dNZ0ppQXdlRE5HS1YwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1U3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvWXlBOElEQjRSRGd3TUNCOGZDQmpJRDQ5SURCNFJUQXdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUQwZ2IzVjBJQ3NnS0dobGVGUmhZbXhsV3pCNFJUQWdmQ0FvWXlBK1BpQXhNaWxkSUNzZ2FHVjRWR0ZpYkdWYk1IZzRNQ0I4SUNnb1l5QStQaUEyS1NBbUlEQjRNMFlwWFNBcklHaGxlRlJoWW14bFd6QjRPREFnZkNBb1l5QW1JREI0TTBZcFhTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlR0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2tnS3owZ01UdGNiaUFnSUNBZ0lDQWdZeUE5SURCNE1UQXdNREFnS3lBb0tDaGpJQ1lnTUhnelJrWXBJRHc4SURFd0tTQjhJQ2h6ZEhKcGJtY3VZMmhoY2tOdlpHVkJkQ2hwS1NBbUlEQjRNMFpHS1NrN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNCb1pYaFVZV0pzWlZzd2VFWXdJSHdnS0dNZ1BqNGdNVGdwWFZ4dUlDQWdJQ0FnSUNBZ0lDQWdLeUJvWlhoVVlXSnNaVnN3ZURnd0lId2dLQ2hqSUQ0K0lERXlLU0FtSURCNE0wWXBYVnh1SUNBZ0lDQWdJQ0FnSUNBZ0t5Qm9aWGhVWVdKc1pWc3dlRGd3SUh3Z0tDaGpJRDQrSURZcElDWWdNSGd6UmlsZFhHNGdJQ0FnSUNBZ0lDQWdJQ0FySUdobGVGUmhZbXhsV3pCNE9EQWdmQ0FvWXlBbUlEQjRNMFlwWFR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdiM1YwTzF4dWZUdGNibHh1ZG1GeUlHTnZiWEJoWTNRZ1BTQm1kVzVqZEdsdmJpQmpiMjF3WVdOMEtIWmhiSFZsS1NCN1hHNGdJQ0FnZG1GeUlIRjFaWFZsSUQwZ1czc2diMkpxT2lCN0lHODZJSFpoYkhWbElIMHNJSEJ5YjNBNklDZHZKeUI5WFR0Y2JpQWdJQ0IyWVhJZ2NtVm1jeUE5SUZ0ZE8xeHVYRzRnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQnhkV1YxWlM1c1pXNW5kR2c3SUNzcmFTa2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ2FYUmxiU0E5SUhGMVpYVmxXMmxkTzF4dUlDQWdJQ0FnSUNCMllYSWdiMkpxSUQwZ2FYUmxiUzV2WW1wYmFYUmxiUzV3Y205d1hUdGNibHh1SUNBZ0lDQWdJQ0IyWVhJZ2EyVjVjeUE5SUU5aWFtVmpkQzVyWlhsektHOWlhaWs3WEc0Z0lDQWdJQ0FnSUdadmNpQW9kbUZ5SUdvZ1BTQXdPeUJxSUR3Z2EyVjVjeTVzWlc1bmRHZzdJQ3NyYWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHdGxlU0E5SUd0bGVYTmJhbDA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnZG1Gc0lEMGdiMkpxVzJ0bGVWMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlIWmhiQ0E5UFQwZ0oyOWlhbVZqZENjZ0ppWWdkbUZzSUNFOVBTQnVkV3hzSUNZbUlISmxabk11YVc1a1pYaFBaaWgyWVd3cElEMDlQU0F0TVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIRjFaWFZsTG5CMWMyZ29leUJ2WW1vNklHOWlhaXdnY0hKdmNEb2dhMlY1SUgwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxabk11Y0hWemFDaDJZV3dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHTnZiWEJoWTNSUmRXVjFaU2h4ZFdWMVpTazdYRzU5TzF4dVhHNTJZWElnYVhOU1pXZEZlSEFnUFNCbWRXNWpkR2x2YmlCcGMxSmxaMFY0Y0Nodlltb3BJSHRjYmlBZ0lDQnlaWFIxY200Z1QySnFaV04wTG5CeWIzUnZkSGx3WlM1MGIxTjBjbWx1Wnk1allXeHNLRzlpYWlrZ1BUMDlJQ2RiYjJKcVpXTjBJRkpsWjBWNGNGMG5PMXh1ZlR0Y2JseHVkbUZ5SUdselFuVm1abVZ5SUQwZ1puVnVZM1JwYjI0Z2FYTkNkV1ptWlhJb2IySnFLU0I3WEc0Z0lDQWdhV1lnS0c5aWFpQTlQVDBnYm5Wc2JDQjhmQ0IwZVhCbGIyWWdiMkpxSUQwOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm1Gc2MyVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUNFaEtHOWlhaTVqYjI1emRISjFZM1J2Y2lBbUppQnZZbW91WTI5dWMzUnlkV04wYjNJdWFYTkNkV1ptWlhJZ0ppWWdiMkpxTG1OdmJuTjBjblZqZEc5eUxtbHpRblZtWm1WeUtHOWlhaWtwTzF4dWZUdGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0I3WEc0Z0lDQWdZWEp5WVhsVWIwOWlhbVZqZERvZ1lYSnlZWGxVYjA5aWFtVmpkQ3hjYmlBZ0lDQmhjM05wWjI0NklHRnpjMmxuYml4Y2JpQWdJQ0JqYjIxd1lXTjBPaUJqYjIxd1lXTjBMRnh1SUNBZ0lHUmxZMjlrWlRvZ1pHVmpiMlJsTEZ4dUlDQWdJR1Z1WTI5a1pUb2daVzVqYjJSbExGeHVJQ0FnSUdselFuVm1abVZ5T2lCcGMwSjFabVpsY2l4Y2JpQWdJQ0JwYzFKbFowVjRjRG9nYVhOU1pXZEZlSEFzWEc0Z0lDQWdiV1Z5WjJVNklHMWxjbWRsWEc1OU8xeHVJbDE5XG4iXX0=
