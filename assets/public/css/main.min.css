/*! normalize.css v3.0.1 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{margin:.67em 0;font-size:2em}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{position:relative;vertical-align:baseline;font-size:75%;line-height:0}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-size:1em;font-family:monospace,monospace}button,input,optgroup,select,textarea{margin:0;color:inherit;font:inherit}button{overflow:visible;margin:none;padding:none;outline:none;border:none;background:none}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{cursor:pointer;-webkit-appearance:button}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{box-sizing:content-box;-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{margin:0 2px;padding:.35em .625em .75em;border:1px solid silver}legend{padding:0;border:0}optgroup{font-weight:700}table{border-spacing:0;border-collapse:collapse}td,th{padding:0}.text-center{text-align:center}.text-left{text-align:left}.text-right{text-align:right}.spacer-top{margin-top:1rem}.spacer-bot{margin-bottom:1rem}html{font-size:62.5%}body{font-size:1.6rem;font-family:Cabin,sans-serif;line-height:1.5}a,a:link,a:visited,button{outline:none;color:#364ad8;text-decoration:none}a:focus,a:hover,button:focus,button:hover{outline:none;color:#1b298d}a:active,button:active{color:#000}h1,h2,h3,h4,h5,h6{margin:0;padding:0;font-family:Hind,sans-serif;line-height:1.5}h1{font-size:3rem}h2{font-size:2rem}h3{font-size:3rem}h4{font-size:2.4rem}h5{font-size:2.1rem}h6{font-size:.8rem}p{font-size:1rem}small{font-size:.8rem}:focus{outline:1px dotted #aaa}label,select{display:block}textarea{overflow:auto;vertical-align:top}input[type=date],input[type=datetime-local],input[type=datetime],input[type=email],input[type=month],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=time],input[type=url],input[type=week],textarea{width:100%;border:1px dotted #f8cecd}input[type=date]:focus,input[type=datetime-local]:focus,input[type=datetime]:focus,input[type=email]:focus,input[type=month]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=time]:focus,input[type=url]:focus,input[type=week]:focus,textarea:focus{border-color:#f8cecd}input[type=checkbox],input[type=radio]{line-height:normal;cursor:pointer}*,:after,:before{box-sizing:border-box}img{max-width:100%}body,html{width:100%;height:100%}main.site-main{padding-top:80px}section.home-section{width:100%}header.section-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;height:60px}@media screen and (min-width:700px){header.section-header{height:78px}}header.section-header h2.header__title{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;align-items:center;-ms-flex-align:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:0 30px;width:100%;height:100%;color:#121149;text-align:center;text-transform:uppercase;font-weight:600;font-size:2rem;font-family:Hind,sans-serif}@media screen and (min-width:700px){header.section-header h2.header__title{min-width:300px;width:25%}}header.section-header a.header__link{display:none}@media screen and (min-width:700px){header.section-header a.header__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;align-items:center;-ms-flex-align:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:60px;height:100%;color:#121149;text-align:center;text-transform:uppercase;font-weight:600;font-size:1.6rem;font-family:Source Code Pro,sans-serif}}footer.section-footer{width:100%;height:60px}footer.section-footer .footer__link{display:block;width:100%;height:100%;color:#121149;text-align:center;text-transform:uppercase;font-weight:600;font-size:1.4rem;font-family:Source Code Pro,sans-serif;line-height:60px}@media screen and (min-width:700px){footer.section-footer{display:none}}ul{margin:0;padding:0;list-style:none}.site-header{position:fixed;z-index:100}.site-header__wrapper{width:100vw;height:80px;border-bottom:1px solid hsla(0,0%,100%,.14);background:#121149}@media screen and (min-width:950px){.site-header__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:0 7.5vw}}.site-header__logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;align-items:center;-ms-flex-align:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:0 auto;width:150px;height:80px}@media screen and (min-width:950px){.site-header__logo{margin:0;width:250px}}.site-header__nav{position:relative;overflow-y:scroll;width:100vw;height:calc(100vh - 80px);background:#121149;transition:-webkit-transform .3s cubic-bezier(.48,.04,.52,.96);transition:transform .3s cubic-bezier(.48,.04,.52,.96);transition:transform .3s cubic-bezier(.48,.04,.52,.96),-webkit-transform .3s cubic-bezier(.48,.04,.52,.96);-webkit-transform:translateX(-100%);transform:translateX(-100%)}.site-header__nav.site-header__nav--hide{-webkit-transform:translateX(0);transform:translateX(0)}@media screen and (min-width:950px){.site-header__nav{overflow-y:visible;margin-left:50px;width:auto;height:80px;-webkit-transform:translateX(0);transform:translateX(0)}}.nav__trigger{position:absolute;top:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;align-items:center;-ms-flex-align:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:80px;height:80px}.nav__trigger span{margin:2px 0;width:16px;height:1px;background:#fcfcfe}@media screen and (min-width:950px){.nav__trigger{display:none}}.nav__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0 40px;width:auto;height:100%;background:#121149}@media screen and (min-width:950px){.nav__wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:0}}.nav__wrapper .nav__item{position:relative;width:100%;height:auto}.nav__wrapper .nav__item:first-child{margin-top:15px}@media screen and (min-width:950px){.nav__wrapper .nav__item:first-child{margin:0}}@media screen and (min-width:950px){.nav__wrapper .nav__item{width:auto;height:100%}.nav__wrapper .nav__item:hover .item__drop{-webkit-transform:translateY(0);transform:translateY(0)}}.nav__wrapper .nav__item .item__link{display:block;padding:15px 0;background:#121149;color:#fcfcfe;text-align:left;text-transform:uppercase;font-weight:500;font-size:1.5rem;font-family:Hind,sans-serif}.nav__wrapper .nav__item .item__link:active{background:#0f0e3d}@media screen and (min-width:950px){.nav__wrapper .nav__item .item__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;align-items:center;-ms-flex-align:center;padding:0 15px;width:100%;height:100%;border-bottom:1px solid hsla(0,0%,100%,.14);color:#fcfcfe;text-align:center;text-transform:uppercase;font-weight:500;font-size:1.3rem;font-family:Hind,sans-serif}}.nav__wrapper .nav__item .drop__trigger{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;padding-top:45px;padding-bottom:0;color:#8888a4;text-align:left;text-transform:uppercase;font-weight:500;font-size:1.5rem;font-family:Hind,sans-serif;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nav__wrapper .nav__item .drop__trigger:before{position:absolute;top:15px;right:-20px;left:-20px;height:1px;background:hsla(0,0%,100%,.14);content:""}@media screen and (min-width:950px){.nav__wrapper .nav__item .drop__trigger:before{display:none}}@media screen and (min-width:950px){.nav__wrapper .nav__item .drop__trigger{z-index:100;padding:0 15px;color:#fcfcfe;text-align:left;text-transform:uppercase;font-weight:500;font-size:1.3rem;font-family:Hind,sans-serif}}.nav__wrapper .nav__item .item__drop{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}@media screen and (min-width:950px){.nav__wrapper .nav__item .item__drop{display:block;width:auto;height:auto;background:#121149;transition:-webkit-transform .25s cubic-bezier(.48,.04,.52,.96);transition:transform .25s cubic-bezier(.48,.04,.52,.96);transition:transform .25s cubic-bezier(.48,.04,.52,.96),-webkit-transform .25s cubic-bezier(.48,.04,.52,.96);-webkit-transform:translateY(-100%);transform:translateY(-100%)}}.nav__wrapper .nav__item .item__drop .drop__item{margin-right:15px}.nav__wrapper .nav__item .item__drop .drop__item:nth-child(odd){min-width:75px}@media screen and (min-width:950px){.nav__wrapper .nav__item .item__drop .drop__item{width:100%;height:40px}}.nav__wrapper .nav__item .item__drop .drop__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;align-items:center;-ms-flex-align:center;padding:10px 0;width:100%;height:100%;background:#121149;color:#fcfcfe;text-align:left;text-transform:capitalize;white-space:nowrap;font-weight:500;font-size:1.5rem;font-family:Hind,sans-serif}.nav__wrapper .nav__item .item__drop .drop__link:active{background:#0f0e3d}@media screen and (min-width:950px){.nav__wrapper .nav__item .item__drop .drop__link{padding:0 15px;color:#fcfcfe;text-align:left;text-transform:uppercase;font-weight:500;font-size:1.3rem;font-family:Hind,sans-serif}}section.landing{padding:0 7.5vw;width:100%;height:calc(100vh - 158px);background:#121149}section.landing .landing__container{width:100%;height:100%;background:repeating-linear-gradient(90deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,.1) 1px,#121149 0,#121149 100px)}section.events .events__header{background:#f8cecd}section.events .events__header .header__title{border:1px solid #2a295b;background:#121149;color:#fcfcfe;text-align:center;text-transform:uppercase;font-weight:600;font-size:2rem;font-family:Hind,sans-serif}section.events .events__header .header__link{line-height:60px}@media screen and (min-width:800px){section.events .events__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}}section.events .events__container .event__card{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:-1px;padding:30px 20px;min-height:240px;width:100%;border:1px solid #b9b9b9;background:#f9f9fb}@media screen and (min-width:800px){section.events .events__container .event__card{padding:60px;min-height:350px;width:33.33333%}section.events .events__container .event__card:nth-child(4){border-right:none;border-left:none}}section.events .events__container .event__card:first-child{margin-top:0}section.events .events__container .event__card .card__surtitle{color:#364ad8;text-align:left;text-transform:uppercase;font-weight:600;font-size:1.4rem;font-family:Source Code Pro,sans-serif}section.events .events__container .event__card .card__title{margin:20px 0;color:#2e2e2e;text-align:left;text-transform:inherit;font-weight:500;font-size:1.8rem;font-family:Hind,sans-serif;line-height:1.61}section.events .events__container .event__card .card__footer{margin-top:auto;color:#b9b9b9;text-align:left;text-transform:inherit;font-weight:400;font-size:1.4rem;font-family:Source Code Pro,sans-serif;justify-self:flex-end}@media screen and (min-width:800px){section.events .events__container .card__highlighted{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;width:66.66667%;border-right:none}}@media screen and (min-width:800px){section.events .events__container .card__highlighted .card__content{margin-left:60px}}section.events .events__container .card__highlighted .card__image{display:none}@media screen and (min-width:800px){section.events .events__container .card__highlighted .card__image{display:block;-ms-flex-negative:0;flex-shrink:0;width:200px;height:230px;background:#364ad8}}section.events .events__container .card__highlighted .card__title{margin-bottom:10px;color:#2e2e2e;text-align:left;text-transform:inherit;font-weight:500;font-size:2.2rem;font-family:Hind,sans-serif}section.events .events__container .card__highlighted .card__subtitle{margin:10px 0;color:#b9b9b9;text-align:left;text-transform:inherit;font-weight:500;font-size:1.6rem;font-family:Hind,sans-serif;line-height:1.61}section.events .events__container .card__highlighted .card__footer{padding-top:30px}section.events .events__footer{background:#f8cecd}section.projects{margin-top:-1px;padding:0;width:100%;height:auto}@media screen and (min-width:800px){section.projects{padding:0 7.5vw}}section.projects .projects__header{border:1px solid #121149;background:#fcfcfe}section.projects .projects__header .header__title{background:#f9f9fb}@media screen and (min-width:800px){section.projects .projects__header .header__title{border-right:1px solid #121149}}section.projects .projects__container{padding:120px 20px;width:100%;height:auto;border-right:1px solid #f3f3f6;background-image:linear-gradient(90deg,#f3f3f6 1px,transparent 0),linear-gradient(180deg,#f3f3f6 1px,transparent 0);background-size:8.5vw 8.5vw}@media screen and (min-width:800px){section.projects .projects__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:250px 0}}section.projects .projects__container .project__card{overflow:hidden;padding:0 25px 30px;min-height:245px;width:100%;border:1px solid #b9b9b9;border-top:none;background:#fcfcfe}section.projects .projects__container .project__card:nth-child(4){border-bottom:none}@media screen and (min-width:800px){section.projects .projects__container .project__card{padding:0 35px 35px;min-height:330px;width:33.33333%;border:1px solid #b9b9b9;border-top:none}section.projects .projects__container .project__card:nth-child(2){border-right:none}section.projects .projects__container .project__card:nth-child(4){border-bottom:1px solid #b9b9b9;border-left:none}}section.projects .projects__container .project__card .card__label{margin:30px auto 20px;color:#f8cecd;text-align:center;text-transform:uppercase;font-weight:600;font-size:1.6rem;font-family:Source Code Pro,sans-serif}@media screen and (min-width:800px){section.projects .projects__container .project__card .card__label{margin-top:60px}}section.projects .projects__container .project__card .card__title{color:#121149;text-align:center;text-transform:inherit;font-weight:500;font-size:1.8rem;font-family:Hind,sans-serif;line-height:1.61}section.projects .projects__container .project__card .card__subtitle{margin-top:30px;color:#b9b9b9;text-align:center;text-transform:inherit;font-weight:400;font-size:1.4rem;font-family:Source Code Pro,sans-serif;line-height:1.64}section.projects .projects__footer .footer__link{border:1px solid #121149;background:#fcfcfe}section.publications{overflow:hidden;background:#121149}section.publications .publications__header{-ms-flex-negative:0;flex-shrink:0;border:1px solid #f9f9fb}@media screen and (min-width:800px){section.publications .publications__header{border-top:none;border-right:none;border-left:none}}section.publications .publications__header .header__link,section.publications .publications__header .header__title{color:#fcfcfe}@media screen and (min-width:800px){section.publications .publications__header .header__title{background:#fcfcfe;color:#121149}}@media screen and (min-width:800px){section.publications .publications__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:120px 60px;border:1px solid #fcfcfe}}section.publications .publications__wrapper .publication__card:last-child{border-bottom:none}@media screen and (min-width:800px){section.publications .publications__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:60%}section.publications .publications__wrapper .publication__card{width:100%;border-right:none;border-bottom:none}section.publications .publications__wrapper .publication__card:last-child{border-top:1px solid #fcfcfe}}section.publications .publication__card{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:30px 20px;border-bottom:1px solid #f9f9fb}@media screen and (min-width:800px){section.publications .publication__card{-ms-flex-negative:0;flex-shrink:0;padding:60px 60px 30px;width:40%;border-right:1px solid #fcfcfe;border-bottom:none}}section.publications .publication__card .card__surtitle{margin-bottom:20px;color:#f8cecd;text-align:left;text-transform:uppercase;font-weight:600;font-size:1.4rem;font-family:Source Code Pro,sans-serif}section.publications .publication__card .card__title{color:#f9f9fb;text-align:left;text-transform:inherit;font-weight:500;font-size:2.2rem;font-family:Hind,sans-serif}section.publications .publication__card .card__subtitle{margin-top:20px;color:rgba(252,252,254,.5);text-align:left;text-transform:inherit;font-weight:400;font-size:1.8rem;font-family:Hind,sans-serif;line-height:1.61}section.publications .publication__card .card__footer{margin-top:auto}section.publications .publication__card .card__author{margin-top:auto;padding-top:30px}section.publications .publication__card .card__author,section.publications .publication__card .card__source{color:#b9b9b9;text-align:left;text-transform:capitalize;font-weight:400;font-size:1.4rem;font-family:Source Code Pro,sans-serif}section.publications .publication__card .card__source{margin-top:10px}section.publications .publication__card .card__italic{color:#b9b9b9;text-align:left;text-transform:capitalize;font-weight:400;font-style:italic;font-size:1.4rem;font-family:Cabin,sans-serif}section.publications .publications__footer{border:1px solid #f9f9fb}section.publications .publications__footer .footer__link{color:#fcfcfe}section.rubriques{overflow:hidden}section.rubriques .rubriques__header{background:#f8cecd}section.rubriques .rubriques__header .header__title{background:#121149;color:#f9f9fb}section.rubriques .rubriques__header .header__link{color:#121149}section.rubriques .rubriques__footer{background:#f8cecd}section.rubriques .rubriques__container{position:relative;padding:120px 20px}@media screen and (min-width:700px){section.rubriques .rubriques__container{padding:250px 7.5vw}}section.rubriques .rubriques__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%}@media screen and (min-width:700px){section.rubriques .rubriques__wrapper{position:relative}}section.rubriques .rubriques__wrapper .rubriques__item{width:100%}@media screen and (min-width:700px){section.rubriques .rubriques__wrapper .rubriques__item{width:25%}section.rubriques .rubriques__wrapper .rubriques__item:first-child .item__button{border-left:1px solid #121149}section.rubriques .rubriques__wrapper .rubriques__item:nth-child(4) .item__button{border-right:1px solid #121149}}section.rubriques .rubriques__wrapper .item__button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:-1px;padding:0 20px;width:100%;height:60px;border:1px solid #121149;background:#fcfcfe;color:#b9b9b9;text-align:left;text-transform:uppercase;font-weight:600;font-size:1.4rem;font-family:Hind,sans-serif;transition:color .25s cubic-bezier(.48,.04,.52,.96)}section.rubriques .rubriques__wrapper .item__button span{transition:-webkit-transform .3s cubic-bezier(.48,.04,.52,.96);transition:transform .3s cubic-bezier(.48,.04,.52,.96);transition:transform .3s cubic-bezier(.48,.04,.52,.96),-webkit-transform .3s cubic-bezier(.48,.04,.52,.96);-webkit-transform:rotate(90deg);transform:rotate(90deg)}@media screen and (min-width:700px){section.rubriques .rubriques__wrapper .item__button span{display:none}}section.rubriques .rubriques__wrapper .item__button.mobile-active{color:#121149}section.rubriques .rubriques__wrapper .item__button.mobile-active span{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}@media screen and (min-width:700px){section.rubriques .rubriques__wrapper .item__button{margin:0;height:78px;border-right:none;border-left:none;background:none;transition:none}section.rubriques .rubriques__wrapper .item__button.mobile-active{color:inherit}section.rubriques .rubriques__wrapper .item__button.desktop-active{color:#121149}}section.rubriques .rubriques__wrapper .item__wrapper{overflow:hidden;height:0;transition:height .35s cubic-bezier(.48,.04,.52,.96)}@media screen and (min-width:700px){section.rubriques .rubriques__wrapper .item__wrapper{position:absolute;top:78px;left:0;display:none;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;height:auto}section.rubriques .rubriques__wrapper .item__wrapper.desktop-active{display:-webkit-box;display:-ms-flexbox;display:flex}}section.rubriques .rubriques__wrapper .rubriques__subItem{width:100%;height:60px;border:1px solid #b9b9b9;border-top:none;background:#fcfcfe}@media screen and (min-width:700px){section.rubriques .rubriques__wrapper .rubriques__subItem{width:25%;height:78px;border:none;background:none}}section.rubriques .rubriques__wrapper .rubriques__subItem a{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;align-items:center;-ms-flex-align:center;padding:0 20px;width:100%;height:100%;color:#2e2e2e;text-align:center;text-transform:uppercase;font-weight:500;font-size:1.2rem;font-family:Hind,sans-serif}section.rubriques .rubriques__wrapper .item__grid{display:none;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%}@media screen and (min-width:700px){section.rubriques .rubriques__wrapper .item__grid{display:-webkit-box;display:-ms-flexbox;display:flex}}section.rubriques .rubriques__wrapper .item__grid div{width:25%;height:78px;border-bottom:1px solid #b9b9b9}section.rubriques .rubriques__lines{position:absolute;top:0;left:0;z-index:-1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0 7.5vw;width:100%;height:100%}section.rubriques .rubriques__lines .line{width:1px;height:100%;background:#b9b9b9}section.rubriques .rubriques__lines .line:nth-child(3){margin-top:250px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
